;; Object CollaborationInfrastructure-2.6/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "CollaborationInfrastructure-2.6/"
  :tables (list 
   (semanticdb-table "makefile"
    :major-mode 'makefile-bsdmake-mode
    :tags 
        '( ("VRUI_MAKEDIR" variable (:default-value ("/usr/local/Cellar/vrui/3.1-002-1/share/vrui/make")) nil [1276 1341])
            ("COLLABORATIONPLUGINSDIREXT" variable (:default-value ("CollaborationPlugins")) nil [1477 1527])
            ("PACKAGEROOT" variable (:default-value ("$(shell pwd)")) nil [1883 1911])
            ("COLLABORATION_VERSION" variable (:default-value ("2006")) nil [1966 1995])
            ("MAJORLIBVERSION" variable (:default-value ("2")) nil [1995 2015])
            ("MINORLIBVERSION" variable (:default-value ("6")) nil [2015 2035])
            ("COLLABORATION_NAME" variable (:default-value ("Collaboration-$(MAJORLIBVERSION).$(MINORLIBVERSION)")) nil [2035 2109])
            ("$(VRUI_MAKEDIR)/SystemDefinitions" include nil nil [2190 2232])
            ("$(VRUI_MAKEDIR)/Packages.System" include nil nil [2232 2272])
            ("$(VRUI_MAKEDIR)/Configuration.Vrui" include nil nil [2272 2315])
            ("$(VRUI_MAKEDIR)/Packages.Vrui" include nil nil [2315 2353])
            ("$(PACKAGEROOT)/BuildRoot/Packages.Collaboration" include nil nil [2353 2409])
            ("EXTRACINCLUDEFLAGS" variable (:default-value ("-I$(PACKAGEROOT)")) nil [2470 2509])
            ("EXTRALINKDIRFLAGS" variable (:default-value ("-L$(PACKAGEROOT)/$(MYLIBEXT)")) nil [2509 2559])
            ("LIBDESTDIR" variable (:default-value ("$(PACKAGEROOT)/$(MYLIBEXT)")) nil [2615 2656])
            ("VISLETDESTDIR" variable (:default-value ("$(LIBDESTDIR)/Vislets")) nil [2656 2695])
            ("PLUGINDESTDIR" variable (:default-value ("$(LIBDESTDIR)/Plugins")) nil [2695 2734])
            ("VISLETNAME" variable (:default-value ("$(VISLETDESTDIR)/lib$(1).$(PLUGINFILEEXT)")) nil [3166 3221])
            ("PLUGINNAME" variable (:default-value ("$(PLUGINDESTDIR)/lib$(1).$(PLUGINFILEEXT)")) nil [3221 3276])
            ("PACKAGES" variable nil nil [3537 3549])
            ("LIBRARIES" variable nil nil [3725 3738])
            ("PLUGINS" variable nil nil [3738 3749])
            ("VISLETS" variable nil nil [3749 3760])
            ("EXECUTABLES" variable nil nil [3760 3775])
            ("LIBRARY_NAMES" variable (:default-value ("libCollaborationServer" "libCollaborationClient")) nil [3822 3902])
            ("LIBRARIES" variable (:default-value ("$(LIBRARY_NAMES:%=$(call LIBRARYNAME,%))")) nil [3903 3957])
            ("SERVERPLUGIN_NAMES" variable (:default-value ("FooServer" "CheriaServer" "GrapheinServer" "AgoraServer")) nil [3987 4127])
            ("SERVERPLUGINS" variable (:default-value ("$(SERVERPLUGIN_NAMES:%=$(call PLUGINNAME,%))")) nil [4128 4189])
            ("PLUGINS" variable (:default-value ("$(SERVERPLUGINS)")) nil [4190 4218])
            ("CLIENTPLUGIN_NAMES" variable (:default-value ("FooClient" "CheriaClient" "GrapheinClient" "AgoraClient")) nil [4219 4359])
            ("CLIENTPLUGINS" variable (:default-value ("$(CLIENTPLUGIN_NAMES:%=$(call PLUGINNAME,%))")) nil [4360 4421])
            ("PLUGINS" variable (:default-value ("$(CLIENTPLUGINS)")) nil [4422 4450])
            ("VISLET_NAMES" variable (:default-value ("CollaborationClient")) nil [4478 4513])
            ("VISLETS" variable (:default-value ("$(VISLET_NAMES:%=$(call VISLETNAME,%))")) nil [4514 4564])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/CollaborationServer")) nil [4611 4656])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/CollaborationClientTest")) nil [4703 4752])
            ("MAKECONFIGFILE" variable (:default-value ("share/Configuration.Collaboration")) nil [4800 4851])
            ("ALL" variable (:default-value ("$(LIBRARIES)" "$(EXECUTABLES)" "$(PLUGINS)" "$(VISLETS)" "$(MAKECONFIGFILE)")) nil [4852 4926])
            (".PHONY" function (:arguments ("all")) nil [4927 4939])
            ("all" function (:arguments ("config" "$(ALL)")) nil [4939 4958])
            ("$(SERVERPLUGINS)" function (:arguments ("$(call LIBRARYNAME,libCollaborationServer)")) nil [5028 5119])
            ("$(EXEDIR)" function (:arguments ("$(call LIBRARYNAME,libCollaborationServer)")) nil [5028 5119])
            ("$(CLIENTPLUGINS)" function (:arguments ("$(call LIBRARYNAME,libCollaborationClient)")) nil [5189 5295])
            ("$(VISLETS)" function (:arguments ("$(call LIBRARYNAME,libCollaborationClient)")) nil [5189 5295])
            (".PHONY" function (:arguments ("config")) nil [5490 5505])
            ("config" function (:arguments ("Configure-End")) nil [5505 5527])
            (".PHONY" function (:arguments ("Configure-Begin")) nil [5528 5552])
            ("Configure-Begin" function nil nil [5552 5856])
            (".PHONY" function (:arguments ("Configure-End")) nil [6287 6309])
            ("Configure-End" function (:arguments ("Configure-Begin")) nil [6309 6340])
            ("Configure-End" function nil nil [6340 6373])
            ("$(wildcard *.cpp Collaboration/*.cpp)" function (:arguments ("config")) nil [6374 6420])
            (".PHONY" function (:arguments ("extraclean")) nil [6626 6645])
            ("extraclean" function nil nil [6645 6873])
            (".PHONY" function (:arguments ("extrasqueakyclean")) nil [6874 6900])
            ("extrasqueakyclean" function nil nil [6900 6968])
            ("$(VRUI_MAKEDIR)/BasicMakefile" include nil nil [6994 7032])
            ("LIBCOLLABORATION_HEADERS" variable (:default-value ("Collaboration/Protocol.h" "Collaboration/ProtocolServer.h" "Collaboration/ProtocolClient.h" "Collaboration/CollaborationProtocol.h" "Collaboration/CollaborationServer.h" "Collaboration/CollaborationClient.h")) nil [7275 7644])
            ("LIBCOLLABORATIONSERVER_SOURCES" variable (:default-value ("Collaboration/CollaborationProtocol.cpp" "Collaboration/ProtocolServer.cpp" "Collaboration/CollaborationServer.cpp")) nil [7705 7919])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_PLUGINDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(COLLABORATIONPLUGINSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [7920 8092])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_CONFIGFILENAME='\"$(ETCINSTALLDIR)/Collaboration.cfg\"'")) nil [8092 8219])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("PACKAGES" "+=" "$(MYCOLLABORATIONSERVER_DEPENDS)")) nil [8220 8309])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCOLLABORATIONSERVER_INCLUDE)")) nil [8309 8408])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("CFLAGS" "+=" "$(MYCOLLABORATIONSERVER_CFLAGS)")) nil [8408 8494])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("$(LIBCOLLABORATIONSERVER_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [8494 8592])
            (".PHONY" function (:arguments ("libCollaborationServer")) nil [8592 8623])
            ("libCollaborationServer" function (:arguments ("$(call LIBRARYNAME,libCollaborationServer)")) nil [8623 8690])
            ("LIBCOLLABORATIONCLIENT_SOURCES" variable (:default-value ("Collaboration/CollaborationProtocol.cpp" "Collaboration/ProtocolClient.cpp" "Collaboration/CollaborationClient.cpp")) nil [8751 8965])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_PLUGINDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(COLLABORATIONPLUGINSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [8966 9138])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_CONFIGFILENAME='\"$(ETCINSTALLDIR)/Collaboration.cfg\"'")) nil [9138 9265])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("PACKAGES" "+=" "$(MYCOLLABORATIONCLIENT_DEPENDS)")) nil [9266 9355])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCOLLABORATIONCLIENT_INCLUDE)")) nil [9355 9454])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("CFLAGS" "+=" "$(MYCOLLABORATIONCLIENT_CFLAGS)")) nil [9454 9540])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("$(LIBCOLLABORATIONCLIENT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [9540 9638])
            (".PHONY" function (:arguments ("libCollaborationClient")) nil [9638 9669])
            ("libCollaborationClient" function (:arguments ("$(call LIBRARYNAME,libCollaborationClient)")) nil [9669 9736])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONSERVER" "MYMISC")) nil [9783 9855])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/CollaborationServerMain.o")) nil [9855 9922])
            (".PHONY" function (:arguments ("CollaborationServer")) nil [9922 9950])
            ("CollaborationServer" function (:arguments ("$(EXEDIR)/CollaborationServer")) nil [9950 10001])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONCLIENT" "MYVRUI" "MYGLMOTIF" "MYMISC")) nil [10048 10141])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/CollaborationClientTest.o")) nil [10141 10212])
            (".PHONY" function (:arguments ("CollaborationClientTest")) nil [10212 10244])
            ("CollaborationClientTest" function (:arguments ("$(EXEDIR)/CollaborationClientTest")) nil [10244 10303])
            ("$(call PLUGINNAME,%)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [10395 10443])
            ("$(call PLUGINNAME,%)" function (:arguments ("$(OBJDIR)/Collaboration/%.o")) nil [10443 10521])
            ("$(SERVERPLUGIN_NAMES:%=$(call PLUGINNAME,%))" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONSERVER")) nil [10779 10859])
            ("$(CLIENTPLUGIN_NAMES:%=$(call PLUGINNAME,%))" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONCLIENT")) nil [10859 10939])
            ("$(call PLUGINNAME,CheriaServer)" function (:arguments ("$(OBJDIR)/Collaboration/CheriaProtocol.o" "$(OBJDIR)/Collaboration/CheriaServer.o")) nil [10940 11088])
            ("$(call PLUGINNAME,CheriaClient)" function (:arguments ("$(OBJDIR)/Collaboration/CheriaProtocol.o" "$(OBJDIR)/Collaboration/CheriaClient.o")) nil [11089 11237])
            ("$(call PLUGINNAME,GrapheinServer)" function (:arguments ("PACKAGES" "+=" "MYGLWRAPPERS")) nil [11238 11298])
            ("$(call PLUGINNAME,GrapheinServer)" function (:arguments ("$(OBJDIR)/Collaboration/GrapheinProtocol.o" "$(OBJDIR)/Collaboration/GrapheinServer.o")) nil [11298 11454])
            ("$(call PLUGINNAME,GrapheinClient)" function (:arguments ("$(OBJDIR)/Collaboration/GrapheinProtocol.o" "$(OBJDIR)/Collaboration/GrapheinClient.o")) nil [11455 11611])
            ("$(call PLUGINNAME,AgoraServer)" function (:arguments ("$(OBJDIR)/Collaboration/AgoraProtocol.o" "$(OBJDIR)/Collaboration/AgoraServer.o")) nil [11612 11756])
            ("$(call PLUGINNAME,AgoraClient)" function (:arguments ("PACKAGES" "+=" "MYALSUPPORT" "MYVIDEO" "MYSOUND")) nil [11757 11829])
            (".SECONDARY" function (:arguments ("$(SERVERPLUGIN_NAMES:%=$(OBJDIR)/Collaboration/%.o)")) nil [12427 12491])
            (".SECONDARY" function (:arguments ("$(CLIENTPLUGIN_NAMES:%=$(OBJDIR)/Collaboration/%.o)")) nil [12491 12555])
            ("$(call VISLETNAME,%)" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONCLIENT")) nil [12642 12698])
            ("$(call VISLETNAME,%)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [12698 12746])
            ("$(call VISLETNAME,%)" function (:arguments ("$(OBJDIR)/%Vislet.o")) nil [12746 12816])
            ("$(call VISLETNAME,CollaborationClient)" function (:arguments ("$(OBJDIR)/CollaborationClientVislet.o")) nil [13036 13114])
            (".SECONDARY" function (:arguments ("$(VISLET_NAMES:%=$(OBJDIR)/%Vislet.o)")) nil [13170 13220])
            ("$(MAKECONFIGFILE)" function (:arguments ("config")) nil [13556 14221])
            ("install" function (:arguments ("all")) nil [14652 14665])
            ("uninstall" function nil nil [16224 16990]))          
    :file "makefile"
    :pointmax 16990
    :fsize 16989
    :lastmodtime '(21576 21168 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!nshetty!Code!Vrui!CollaborationInfrastructure-2.6!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
