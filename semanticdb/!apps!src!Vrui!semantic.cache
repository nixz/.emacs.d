;; Object Vrui/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Vrui/"
  :tables
  (list
    (semanticdb-table "makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("INSTALLDIR" variable (:default-value ("/apps/Vrui-2.6")) nil [1575 1604])
            ("VRUI_PACKAGEROOT" variable (:default-value ("$(shell pwd)")) nil [1873 1906])
            ("VRUI_MAKEDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/BuildRoot")) nil [1906 1952])
            ("$(VRUI_MAKEDIR)/SystemDefinitions" include nil nil [2035 2077])
            ("$(VRUI_MAKEDIR)/Packages.System" include nil nil [2077 2117])
            ("$(VRUI_MAKEDIR)/Packages.Vrui" include nil nil [3508 3546])
            ("USE_RPATH" variable (:default-value ("1")) nil [4229 4243])
            ("GLSUPPORT_USE_TLS" variable (:default-value ("0")) nil [4906 4928])
            ("VRUI_VRWINDOW_USE_SWAPGROUPS" variable (:default-value ("0")) nil [5269 5302])
            ("VRDEVICES_USE_INPUT_ABSTRACTION" variable (:default-value ("1")) nil [5493 5529])
            ("VRDEVICES_INPUT_H_HAS_STRUCTS" variable (:default-value ("1")) nil [5764 5798])
            ("VRDEVICES_USE_BLUETOOTH" variable (:default-value ("$(SYSTEM_HAVE_BLUETOOTH)")) nil [6221 6272])
            ("VRUI_VERSION" variable (:default-value ("2006002")) nil [6522 6545])
            ("MAJORLIBVERSION" variable (:default-value ("2")) nil [6545 6565])
            ("MINORLIBVERSION" variable (:default-value ("6")) nil [6565 6585])
            ("VRUI_NAME" variable (:default-value ("Vrui-$(MAJORLIBVERSION).$(MINORLIBVERSION)")) nil [6585 6641])
            ("LIBDESTDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/$(MYLIBEXT)")) nil [6770 6816])
            ("VRUI_INCLUDEDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)")) nil [6877 6915])
            ("VRUI_LIBDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/$(MYLIBEXT)")) nil [6915 6961])
            ("PACKAGES" variable nil nil [9136 9148])
            ("LIBRARIES" variable nil nil [9324 9337])
            ("PLUGINS" variable nil nil [9337 9348])
            ("EXECUTABLES" variable nil nil [9348 9363])
            ("LIBRARY_NAMES" variable (:default-value ("libMisc" "libThreads")) nil [9392 9451])
            ("LIBRARY_NAMES" variable (:default-value ("libIO" "libPlugins" "libRealtime" "libComm" "libCluster" "libMath" "libGeometry" "libGLWrappers" "libGLSupport" "libGLXSupport" "libGLGeometry" "libImages" "libGLMotif" "libSound" "libVideo" "libALSupport" "libSceneGraph" "libVrui")) nil [9516 10089])
            ("LIBRARIES" variable (:default-value ("$(LIBRARY_NAMES:%=$(call LIBRARYNAME,%))")) nil [10090 10144])
            ("VRTOOLS_SOURCES" variable (:default-value ("$(wildcard Vrui/Tools/*.cpp)")) nil [10188 10235])
            ("VRTOOLSDIREXT" variable (:default-value ("VRTools")) nil [10236 10260])
            ("VRTOOLSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRTOOLSDIREXT)")) nil [10260 10303])
            ("VRTOOLS" variable (:default-value ("$(VRTOOLS_SOURCES:Vrui/Tools/%.cpp=$(VRTOOLSDIR)/lib%.$(PLUGINFILEEXT))")) nil [10303 10385])
            ("PLUGINS" variable (:default-value ("$(VRTOOLS)")) nil [10385 10407])
            ("VRVISLETS_SOURCES" variable (:default-value ("$(wildcard Vrui/Vislets/*.cpp)")) nil [10450 10501])
            ("VRVISLETSDIREXT" variable (:default-value ("VRVislets")) nil [10502 10530])
            ("VRVISLETSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRVISLETSDIREXT)")) nil [10530 10578])
            ("VRVISLETS" variable (:default-value ("$(VRVISLETS_SOURCES:Vrui/Vislets/%.cpp=$(VRVISLETSDIR)/lib%.$(PLUGINFILEEXT))")) nil [10578 10668])
            ("PLUGINS" variable (:default-value ("$(VRVISLETS)")) nil [10668 10692])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/VRDeviceDaemon")) nil [10729 10769])
            ("VRDEVICES_IGNORE_SOURCES" variable (:default-value ("VRDeviceDaemon/VRDevices/Joystick.cpp" "VRDeviceDaemon/VRDevices/VRPNConnection.cpp" "VRDeviceDaemon/VRDevices/Wiimote.cpp" "VRDeviceDaemon/VRDevices/WiimoteTracker.cpp" "VRDeviceDaemon/VRDevices/RazerHydra.cpp" "VRDeviceDaemon/VRDevices/RazerHydraDevice.cpp")) nil [10882 11303])
            ("VRDEVICES_SOURCES" variable (:default-value ("$(filter-out $(VRDEVICES_IGNORE_SOURCES),$(wildcard VRDeviceDaemon/VRDevices/*.cpp))")) nil [11304 11409])
            ("VRDEVICESDIREXT" variable (:default-value ("VRDevices")) nil [11740 11768])
            ("VRDEVICESDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRDEVICESDIREXT)")) nil [11768 11816])
            ("VRDEVICES" variable (:default-value ("$(VRDEVICES_SOURCES:VRDeviceDaemon/VRDevices/%.cpp=$(VRDEVICESDIR)/lib%.$(PLUGINFILEEXT))")) nil [11816 11918])
            ("PLUGINS" variable (:default-value ("$(VRDEVICES)")) nil [11918 11942])
            ("VRCALIBRATORS_SOURCES" variable (:default-value ("$(wildcard VRDeviceDaemon/VRCalibrators/*.cpp)")) nil [11986 12057])
            ("VRCALIBRATORSDIREXT" variable (:default-value ("VRCalibrators")) nil [12058 12094])
            ("VRCALIBRATORSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRCALIBRATORSDIREXT)")) nil [12094 12150])
            ("VRCALIBRATORS" variable (:default-value ("$(VRCALIBRATORS_SOURCES:VRDeviceDaemon/VRCalibrators/%.cpp=$(VRCALIBRATORSDIR)/lib%.$(PLUGINFILEEXT))")) nil [12150 12268])
            ("PLUGINS" variable (:default-value ("$(VRCALIBRATORS)")) nil [12268 12296])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/DeviceTest")) nil [12341 12377])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/PrintInputDeviceDataFile")) nil [12429 12479])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/XBackground" "$(EXEDIR)/MeasureEnvironment" "$(EXEDIR)/ScreenCalibrator" "$(EXEDIR)/AlignTrackingMarkers")) nil [12519 12694])
            ("MAKECONFIGFILE" variable (:default-value ("BuildRoot/Configuration.Vrui")) nil [12901 12947])
            ("PKGCONFIGFILE" variable (:default-value ("Share/Vrui.pc")) nil [12997 13027])
            ("ALL" variable (:default-value ("$(LIBRARIES)" "$(EXECUTABLES)" "$(PLUGINS)" "$(MAKEFILEFRAGMENT)" "$(MAKECONFIGFILE)" "$(PKGCONFIGFILE)")) nil [13090 13190])
            (".PHONY" function (:arguments ("all")) nil [13191 13203])
            ("all" function (:arguments ("config" "$(ALL)")) nil [13203 13222])
            ("$(PLUGINS)" function (:arguments ("$(LIBRARIES)")) nil [13223 13248])
            ("$(EXECUTABLES)" function (:arguments ("$(LIBRARIES)")) nil [13248 13277])
            (".PHONY" function (:arguments ("config")) nil [13496 13511])
            ("config" function (:arguments ("Configure-End")) nil [13511 13533])
            (".PHONY" function (:arguments ("Configure-Begin")) nil [13534 13558])
            ("Configure-Begin" function nil nil [13558 13666])
            (".PHONY" function (:arguments ("Configure-End")) nil [13867 13889])
            ("Configure-End" function (:arguments ("Configure-Threads" "Configure-USB" "Configure-Realtime" "Configure-GLSupport" "Configure-Images" "Configure-Sound" "Configure-ALSupport" "Configure-Video" "Configure-Vrui" "Configure-VRDeviceDaemon")) nil [13889 14290])
            (".PHONY" function (:arguments ("extraclean")) nil [14496 14515])
            ("extraclean" function nil nil [14515 14649])
            (".PHONY" function (:arguments ("extrasqueakyclean")) nil [14650 14676])
            ("extrasqueakyclean" function nil nil [14676 14809])
            ("$(VRUI_MAKEDIR)/BasicMakefile" include nil nil [14835 14873])
            ("MISC_HEADERS" variable (:default-value ("$(wildcard Misc/*.h)" "$(wildcard Misc/*.icpp)")) nil [15118 15195])
            ("MISC_SOURCES" variable (:default-value ("$(wildcard Misc/*.cpp)")) nil [15196 15234])
            ("$(MISC_SOURCES)" function (:arguments ("config")) nil [15235 15259])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("PACKAGES" "+=" "$(MYMISC_DEPENDS)")) nil [15260 15319])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYMISC_INCLUDE)")) nil [15319 15388])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("$(call DEPENDENCIES,MYMISC)")) nil [15388 15445])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("$(MISC_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [15445 15510])
            (".PHONY" function (:arguments ("libMisc")) nil [15510 15526])
            ("libMisc" function (:arguments ("$(call LIBRARYNAME,libMisc)")) nil [15526 15563])
            (".PHONY" function (:arguments ("Configure-Threads")) nil [15612 15638])
            ("Configure-Threads" function (:arguments ("Configure-Begin")) nil [15638 15673])
            ("Threads/Config.h" function (:arguments ("Configure-Threads")) nil [16885 16921])
            ("THREADS_HEADERS" variable (:default-value ("$(wildcard Threads/*.h)" "$(wildcard Threads/*.icpp)")) nil [16922 17011])
            ("THREADS_SOURCES" variable (:default-value ("$(wildcard Threads/*.cpp)")) nil [17012 17056])
            ("$(THREADS_SOURCES)" function (:arguments ("config")) nil [17057 17084])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("PACKAGES" "+=" "$(MYTHREADS_DEPENDS)")) nil [17085 17150])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYTHREADS_INCLUDE)")) nil [17150 17225])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("$(call DEPENDENCIES,MYTHREADS)")) nil [17225 17288])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("$(THREADS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [17288 17359])
            (".PHONY" function (:arguments ("libThreads")) nil [17359 17378])
            ("libThreads" function (:arguments ("$(call LIBRARYNAME,libThreads)")) nil [17378 17421])
            (".PHONY" function (:arguments ("Configure-USB")) nil [17459 17481])
            ("Configure-USB" function (:arguments ("Configure-Begin")) nil [17481 17512])
            ("USB/Config.h" function (:arguments ("Configure-USB")) nil [17925 17953])
            ("USB_HEADERS" variable (:default-value ("$(wildcard USB/*.h)" "$(wildcard USB/*.icpp)")) nil [17954 18027])
            ("USB_SOURCES" variable (:default-value ("$(wildcard USB/*.cpp)")) nil [18028 18064])
            ("$(USB_SOURCES)" function (:arguments ("config")) nil [18065 18088])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("PACKAGES" "+=" "$(MYUSB_DEPENDS)")) nil [18089 18146])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYUSB_INCLUDE)")) nil [18146 18213])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("$(call DEPENDENCIES,MYUSB)")) nil [18213 18268])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("$(USB_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [18268 18331])
            (".PHONY" function (:arguments ("libUSB")) nil [18331 18346])
            ("libUSB" function (:arguments ("$(call LIBRARYNAME,libUSB)")) nil [18346 18381])
            ("IO_HEADERS" variable (:default-value ("$(wildcard IO/*.h)" "$(wildcard IO/*.icpp)")) nil [18418 18487])
            ("IO_SOURCES" variable (:default-value ("$(wildcard IO/*.cpp)")) nil [18488 18522])
            ("$(IO_SOURCES)" function (:arguments ("config")) nil [18523 18545])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("PACKAGES" "+=" "$(MYIO_DEPENDS)")) nil [18546 18601])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYIO_INCLUDE)")) nil [18601 18666])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("$(call DEPENDENCIES,MYIO)")) nil [18666 18719])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("$(IO_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [18719 18780])
            (".PHONY" function (:arguments ("libIO")) nil [18780 18794])
            ("libIO" function (:arguments ("$(call LIBRARYNAME,libIO)")) nil [18794 18827])
            ("PLUGINS_HEADERS" variable (:default-value ("$(wildcard Plugins/*.h)" "$(wildcard Plugins/*.icpp)")) nil [18874 18963])
            ("PLUGINS_SOURCES" variable (:default-value ("$(wildcard Plugins/*.cpp)")) nil [18964 19008])
            ("$(PLUGINS_SOURCES)" function (:arguments ("config")) nil [19009 19036])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("PACKAGES" "+=" "$(MYPLUGINS_DEPENDS)")) nil [19037 19102])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYPLUGINS_INCLUDE)")) nil [19102 19177])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("$(call DEPENDENCIES,MYPLUGINS)")) nil [19177 19240])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("$(PLUGINS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [19240 19311])
            (".PHONY" function (:arguments ("libPlugins")) nil [19311 19330])
            ("libPlugins" function (:arguments ("$(call LIBRARYNAME,libPlugins)")) nil [19330 19373])
            (".PHONY" function (:arguments ("Configure-Realtime")) nil [19425 19452])
            ("Configure-Realtime" function (:arguments ("Configure-Begin")) nil [19452 19488])
            ("Realtime/Config.h" function (:arguments ("Configure-Realtime")) nil [19901 19939])
            ("REALTIME_HEADERS" variable (:default-value ("$(wildcard Realtime/*.h)" "$(wildcard Realtime/*.icpp)")) nil [19940 20033])
            ("REALTIME_SOURCES" variable (:default-value ("$(wildcard Realtime/*.cpp)")) nil [20034 20080])
            ("$(REALTIME_SOURCES)" function (:arguments ("config")) nil [20081 20109])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("PACKAGES" "+=" "$(MYREALTIME_DEPENDS)")) nil [20110 20177])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYREALTIME_INCLUDE)")) nil [20177 20254])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("$(call DEPENDENCIES,MYREALTIME)")) nil [20254 20319])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("$(REALTIME_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [20319 20392])
            (".PHONY" function (:arguments ("libRealtime")) nil [20392 20412])
            ("libRealtime" function (:arguments ("$(call LIBRARYNAME,libRealtime)")) nil [20412 20457])
            ("COMM_HEADERS" variable (:default-value ("$(wildcard Comm/*.h)" "$(wildcard Comm/*.icpp)")) nil [20508 20585])
            ("COMM_SOURCES" variable (:default-value ("$(wildcard Comm/*.cpp)")) nil [20586 20624])
            ("$(COMM_SOURCES)" function (:arguments ("config")) nil [20625 20649])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("PACKAGES" "+=" "$(MYCOMM_DEPENDS)")) nil [20650 20709])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCOMM_INCLUDE)")) nil [20709 20778])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("$(call DEPENDENCIES,MYCOMM)")) nil [20778 20835])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("$(COMM_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [20835 20900])
            (".PHONY" function (:arguments ("libComm")) nil [20900 20916])
            ("libComm" function (:arguments ("$(call LIBRARYNAME,libComm)")) nil [20916 20953])
            ("CLUSTER_HEADERS" variable (:default-value ("$(wildcard Cluster/*.h)" "$(wildcard Cluster/*.icpp)")) nil [21003 21092])
            ("CLUSTER_SOURCES" variable (:default-value ("$(wildcard Cluster/*.cpp)")) nil [21093 21137])
            ("$(CLUSTER_SOURCES)" function (:arguments ("config")) nil [21138 21165])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("PACKAGES" "+=" "$(MYCLUSTER_DEPENDS)")) nil [21166 21231])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCLUSTER_INCLUDE)")) nil [21231 21306])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("$(call DEPENDENCIES,MYCLUSTER)")) nil [21306 21369])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("$(CLUSTER_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [21369 21440])
            (".PHONY" function (:arguments ("libCluster")) nil [21440 21459])
            ("libCluster" function (:arguments ("$(call LIBRARYNAME,libCluster)")) nil [21459 21502])
            ("MATH_HEADERS" variable (:default-value ("$(wildcard Math/*.h)" "$(wildcard Math/*.icpp)")) nil [21546 21623])
            ("MATH_SOURCES" variable (:default-value ("$(wildcard Math/*.cpp)")) nil [21624 21662])
            ("$(MATH_SOURCES)" function (:arguments ("config")) nil [21663 21687])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("PACKAGES" "+=" "$(MYMATH_DEPENDS)")) nil [21688 21747])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYMATH_INCLUDE)")) nil [21747 21816])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("$(call DEPENDENCIES,MYMATH)")) nil [21816 21873])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("$(MATH_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [21873 21938])
            (".PHONY" function (:arguments ("libMath")) nil [21938 21954])
            ("libMath" function (:arguments ("$(call LIBRARYNAME,libMath)")) nil [21954 21991])
            ("GEOMETRY_HEADERS" variable (:default-value ("$(wildcard Geometry/*.h)" "$(wildcard Geometry/*.icpp)")) nil [22043 22136])
            ("GEOMETRY_SOURCES" variable (:default-value ("$(wildcard Geometry/*.cpp)")) nil [22137 22183])
            ("$(GEOMETRY_SOURCES)" function (:arguments ("config")) nil [22184 22212])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("PACKAGES" "+=" "$(MYGEOMETRY_DEPENDS)")) nil [22213 22280])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGEOMETRY_INCLUDE)")) nil [22280 22357])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("$(call DEPENDENCIES,MYGEOMETRY)")) nil [22357 22422])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("$(GEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [22422 22495])
            (".PHONY" function (:arguments ("libGeometry")) nil [22495 22515])
            ("libGeometry" function (:arguments ("$(call LIBRARYNAME,libGeometry)")) nil [22515 22560])
            ("MACOSX_HEADERS" variable (:default-value ("$(wildcard MacOSX/*.h)" "$(wildcard MacOSX/*.icpp)")) nil [22605 22690])
            ("GLWRAPPERS_HEADERS" variable (:default-value ("GL/GLTexCoordTemplates.h" "GL/GLMultiTexCoordTemplates.h" "GL/GLColorTemplates.h" "GL/GLSecondaryColorTemplates.h" "GL/GLNormalTemplates.h" "GL/GLFogCoordTemplates.h" "GL/GLVertexTemplates.h" "GL/GLIndexTemplates.h" "GL/GLPrimitiveTemplates.h" "GL/GLScalarLimits.h" "GL/GLScalarConverter.h" "GL/GLColor.h" "GL/GLColorOperations.h" "GL/GLVector.h" "GL/GLBox.h" "GL/GLVertexArrayTemplates.h" "GL/GLVertexArrayParts.h" "GL/GLVertex.h" "GL/GLVertex.icpp" "GL/GLFogEnums.h" "GL/GLFogTemplates.h" "GL/GLFog.h" "GL/GLLightEnums.h" "GL/GLLightTemplates.h" "GL/GLLight.h" "GL/GLLightModelEnums.h" "GL/GLLightModelTemplates.h" "GL/GLMaterialEnums.h" "GL/GLMaterialTemplates.h" "GL/GLMaterial.h" "GL/GLTexEnvEnums.h" "GL/GLTexEnvTemplates.h" "GL/GLMatrixEnums.h" "GL/GLMatrixTemplates.h" "GL/GLMiscTemplates.h" "GL/GLGetTemplates.h" "GL/GLGetPrimitiveTemplates.h" "GL/GLGetFogTemplates.h" "GL/GLGetLightTemplates.h" "GL/GLGetMaterialTemplates.h" "GL/GLGetTexEnvTemplates.h" "GL/GLGetMatrixTemplates.h" "GL/GLGetMiscTemplates.h")) nil [22742 24638])
            ("GLWRAPPERS_SOURCES" variable (:default-value ("GL/GLScalarLimits.cpp" "GL/GLColor.cpp" "GL/GLVertex.cpp" "GL/GLFog.cpp" "GL/GLLight.cpp" "GL/GLMaterial.cpp")) nil [24639 24874])
            ("$(GLWRAPPERS_SOURCES)" function (:arguments ("config")) nil [24875 24905])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("PACKAGES" "+=" "$(MYGLWRAPPERS_DEPENDS)")) nil [24906 24977])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLWRAPPERS_INCLUDE)")) nil [24977 25058])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("CFLAGS" "+=" "$(MYGLWRAPPERS_CFLAGS)")) nil [25058 25126])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("$(call DEPENDENCIES,MYGLWRAPPERS)")) nil [25126 25195])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("$(GLWRAPPERS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [25195 25272])
            (".PHONY" function (:arguments ("libGLWrappers")) nil [25272 25294])
            ("libGLWrappers" function (:arguments ("$(call LIBRARYNAME,libGLWrappers)")) nil [25294 25343])
            (".PHONY" function (:arguments ("Configure-GLSupport")) nil [25390 25418])
            ("Configure-GLSupport" function (:arguments ("Configure-Begin")) nil [25418 25455])
            ("GL/Config.h" function (:arguments ("Configure-GLSupport")) nil [26022 26055])
            ("GLSUPPORT_HEADERS" variable (:default-value ("GL/Config.h" "GL/GLPrintError.h" "GL/GLMarshallers.h" "GL/GLMarshallers.icpp" "GL/GLValueCoders.h" "GL/GLLightTracker.h" "GL/GLClipPlaneTracker.h" "GL/TLSHelper.h" "GL/GLObject.h" "GL/GLContextData.h" "GL/GLExtensions.h" "GL/GLExtensionManager.h" "GL/GLShader.h" "GL/GLGeometryShader.h" "GL/GLAutomaticShader.h" "GL/GLLineLightingShader.h" "GL/GLColorMap.h" "GL/GLNumberRenderer.h" "GL/GLFont.h" "GL/GLString.h" "GL/GLLabel.h" "GL/GLLineIlluminator.h" "GL/GLModels.h")) nil [26056 26961])
            ("GLSUPPORTEXTENSION_HEADERS" variable (:default-value ("$(wildcard GL/Extensions/*.h)" "$(wildcard GL/Extensions/*.icpp)")) nil [26962 27085])
            ("GLSUPPORT_SOURCES" variable (:default-value ("GL/GLPrintError.cpp" "GL/GLMarshallers.cpp" "GL/GLValueCoders.cpp" "GL/GLLightTracker.cpp" "GL/GLClipPlaneTracker.cpp" "GL/GLObject.cpp" "GL/Internal/GLThingManager.cpp" "GL/GLContextData.cpp" "GL/GLExtensions.cpp" "GL/GLExtensionManager.cpp" "$(wildcard GL/Extensions/*.cpp)" "GL/GLShader.cpp" "GL/GLGeometryShader.cpp" "GL/GLAutomaticShader.cpp" "GL/GLLineLightingShader.cpp" "GL/GLColorMap.cpp" "GL/GLNumberRenderer.cpp" "GL/GLFont.cpp" "GL/GLString.cpp" "GL/GLLabel.cpp" "GL/GLLineIlluminator.cpp" "GL/GLModels.cpp")) nil [27086 28031])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSGLFONTDIR='\"$(SHAREINSTALLDIR)/GLFonts\"'")) nil [28164 28243])
            ("$(GLSUPPORT_SOURCES)" function (:arguments ("config")) nil [28244 28273])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("PACKAGES" "+=" "$(MYGLSUPPORT_DEPENDS)")) nil [28274 28343])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLSUPPORT_INCLUDE)")) nil [28343 28422])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("CFLAGS" "+=" "$(MYGLSUPPORT_CFLAGS)")) nil [28422 28488])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("$(call DEPENDENCIES,MYGLSUPPORT)")) nil [28488 28555])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("$(GLSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [28555 28630])
            (".PHONY" function (:arguments ("libGLSupport")) nil [28630 28651])
            ("libGLSupport" function (:arguments ("$(call LIBRARYNAME,libGLSupport)")) nil [28651 28698])
            ("GLXSUPPORT_HEADERS" variable (:default-value ("GL/GLWindow.h")) nil [28750 28785])
            ("GLXSUPPORT_SOURCES" variable (:default-value ("GL/GLWindow.cpp")) nil [28786 28823])
            ("$(GLXSUPPORT_SOURCES)" function (:arguments ("config")) nil [28824 28854])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("PACKAGES" "+=" "$(MYGLXSUPPORT_DEPENDS)")) nil [28855 28926])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLXSUPPORT_INCLUDE)")) nil [28926 29007])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("CFLAGS" "+=" "$(MYGLXSUPPORT_CFLAGS)")) nil [29007 29075])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("$(call DEPENDENCIES,MYGLXSUPPORT)")) nil [29075 29144])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("$(GLXSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [29144 29221])
            (".PHONY" function (:arguments ("libGLXSupport")) nil [29221 29243])
            ("libGLXSupport" function (:arguments ("$(call LIBRARYNAME,libGLXSupport)")) nil [29243 29292])
            ("GLGEOMETRY_HEADERS" variable (:default-value ("GL/GLGeometryWrappers.h" "GL/GLGeometryVertex.h" "GL/GLGeometryVertex.icpp" "GL/GLTransformationWrappers.h" "GL/GLTransformationWrappers.icpp" "GL/GLFrustum.h" "GL/GLFrustum.icpp" "GL/GLPolylineTube.h")) nil [29377 29677])
            ("GLGEOMETRY_SOURCES" variable (:default-value ("GL/GLGeometryVertex.cpp" "GL/GLTransformationWrappers.cpp" "GL/GLFrustum.cpp" "GL/GLPolylineTube.cpp")) nil [29678 29863])
            ("$(GLGEOMETRY_SOURCES)" function (:arguments ("config")) nil [29864 29894])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("PACKAGES" "+=" "$(MYGLGEOMETRY_DEPENDS)")) nil [29895 29966])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLGEOMETRY_INCLUDE)")) nil [29966 30047])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("$(call DEPENDENCIES,MYGLGEOMETRY)")) nil [30047 30116])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("$(GLGEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [30116 30193])
            (".PHONY" function (:arguments ("libGLGeometry")) nil [30193 30215])
            ("libGLGeometry" function (:arguments ("$(call LIBRARYNAME,libGLGeometry)")) nil [30215 30264])
            (".PHONY" function (:arguments ("Configure-Images")) nil [30308 30333])
            ("Configure-Images" function (:arguments ("Configure-Begin")) nil [30333 30367])
            ("Images/Config.h" function (:arguments ("Configure-Images")) nil [31192 31226])
            ("IMAGES_HEADERS" variable (:default-value ("$(wildcard Images/*.h)" "$(wildcard Images/*.icpp)")) nil [31227 31312])
            ("IMAGES_SOURCES" variable (:default-value ("$(wildcard Images/*.cpp)")) nil [31313 31355])
            ("$(IMAGES_SOURCES)" function (:arguments ("config")) nil [31356 31382])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("PACKAGES" "+=" "$(MYIMAGES_DEPENDS)")) nil [31383 31446])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYIMAGES_INCLUDE)")) nil [31446 31519])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("$(call DEPENDENCIES,MYIMAGES)")) nil [31519 31580])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("$(IMAGES_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [31580 31649])
            (".PHONY" function (:arguments ("libImages")) nil [31649 31667])
            ("libImages" function (:arguments ("$(call LIBRARYNAME,libImages)")) nil [31667 31708])
            ("GLMOTIF_HEADERS" variable (:default-value ("$(wildcard GLMotif/*.h)" "$(wildcard GLMotif/*.icpp)")) nil [31774 31863])
            ("GLMOTIF_SOURCES" variable (:default-value ("$(wildcard GLMotif/*.cpp)")) nil [31864 31908])
            ("$(GLMOTIF_SOURCES)" function (:arguments ("config")) nil [31909 31936])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("PACKAGES" "+=" "$(MYGLMOTIF_DEPENDS)")) nil [31937 32002])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLMOTIF_INCLUDE)")) nil [32002 32077])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("$(call DEPENDENCIES,MYGLMOTIF)")) nil [32077 32140])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("$(GLMOTIF_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [32140 32211])
            (".PHONY" function (:arguments ("libGLMotif")) nil [32211 32230])
            ("libGLMotif" function (:arguments ("$(call LIBRARYNAME,libGLMotif)")) nil [32230 32273])
            (".PHONY" function (:arguments ("Configure-Sound")) nil [32313 32337])
            ("Configure-Sound" function (:arguments ("Configure-Begin")) nil [32337 32370])
            ("Sound/Config.h" function (:arguments ("Configure-Sound")) nil [32991 33023])
            ("SOUND_HEADERS" variable (:default-value ("$(wildcard Sound/*.h)" "$(wildcard Sound/*.icpp)")) nil [33024 33105])
            ("SOUND_SOURCES" variable (:default-value ("$(wildcard Sound/*.cpp)")) nil [33472 33512])
            ("$(SOUND_SOURCES)" function (:arguments ("config")) nil [33838 33863])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("PACKAGES" "+=" "$(MYSOUND_DEPENDS)")) nil [33864 33925])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYSOUND_INCLUDE)")) nil [33925 33996])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("$(call DEPENDENCIES,MYSOUND)")) nil [33996 34055])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("$(SOUND_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [34055 34122])
            (".PHONY" function (:arguments ("libSound")) nil [34122 34139])
            ("libSound" function (:arguments ("$(call LIBRARYNAME,libSound)")) nil [34139 34178])
            (".PHONY" function (:arguments ("Configure-Video")) nil [34218 34242])
            ("Configure-Video" function (:arguments ("Configure-Begin")) nil [34242 34275])
            ("Video/Config.h" function (:arguments ("Configure-Video")) nil [35146 35178])
            ("VIDEO_HEADERS" variable (:default-value ("Video/Config.h" "Video/VideoDataFormat.h" "Video/FrameBuffer.h" "Video/ImageExtractor.h" "Video/VideoDevice.h" "Video/Colorspaces.h" "Video/ImageExtractorRGB8.h" "Video/ImageExtractorYUYV.h" "Video/BayerPattern.h" "Video/ImageExtractorBA81.h" "Video/YpCbCr420Texture.h" "Video/VideoPane.h")) nil [35179 35660])
            ("VIDEO_SOURCES" variable (:default-value ("Video/VideoDataFormat.cpp" "Video/VideoDevice.cpp" "Video/ImageExtractorRGB8.cpp" "Video/ImageExtractorYUYV.cpp" "Video/ImageExtractorBA81.cpp" "Video/YpCbCr420Texture.cpp" "Video/VideoPane.cpp")) nil [36399 36705])
            ("$(VIDEO_SOURCES)" function (:arguments ("config")) nil [37351 37376])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("PACKAGES" "+=" "$(MYVIDEO_DEPENDS)")) nil [37377 37438])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVIDEO_INCLUDE)")) nil [37438 37509])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("$(call DEPENDENCIES,MYVIDEO)")) nil [37509 37568])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("$(VIDEO_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [37568 37635])
            (".PHONY" function (:arguments ("libVideo")) nil [37635 37652])
            ("libVideo" function (:arguments ("$(call LIBRARYNAME,libVideo)")) nil [37652 37691])
            (".PHONY" function (:arguments ("Configure-ALSupport")) nil [37738 37766])
            ("Configure-ALSupport" function (:arguments ("Configure-Begin")) nil [37766 37803])
            ("AL/Config.h" function (:arguments ("Configure-ALSupport")) nil [38180 38213])
            ("ALSUPPORT_HEADERS" variable (:default-value ("$(wildcard AL/*.h)" "$(wildcard AL/*.icpp)")) nil [38214 38297])
            ("ALSUPPORT_SOURCES" variable (:default-value ("$(wildcard AL/*.cpp)" "$(wildcard AL/Internal/*.cpp)")) nil [38298 38391])
            ("$(ALSUPPORT_SOURCES)" function (:arguments ("config")) nil [38392 38421])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("PACKAGES" "+=" "$(MYALSUPPORT_DEPENDS)")) nil [38422 38491])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYALSUPPORT_INCLUDE)")) nil [38491 38570])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("$(call DEPENDENCIES,MYALSUPPORT)")) nil [38570 38637])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("$(ALSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [38637 38712])
            (".PHONY" function (:arguments ("libALSupport")) nil [38712 38733])
            ("libALSupport" function (:arguments ("$(call LIBRARYNAME,libALSupport)")) nil [38733 38780])
            ("SCENEGRAPH_HEADERS" variable (:default-value ("$(wildcard SceneGraph/*.h)" "$(wildcard SceneGraph/*.icpp)")) nil [38835 38936])
            ("SCENEGRAPH_SOURCES" variable (:default-value ("$(wildcard SceneGraph/*.cpp)" "$(wildcard SceneGraph/Internal/*.cpp)")) nil [38937 39048])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSCENEGRAPH_DOOM3MATERIALMANAGER_SHADERDIR='\"$(SHAREINSTALLDIR)/Shaders/SceneGraph\"'")) nil [39049 39199])
            ("$(SCENEGRAPH_SOURCES)" function (:arguments ("config")) nil [39200 39230])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("PACKAGES" "+=" "$(MYSCENEGRAPH_DEPENDS)")) nil [39231 39302])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYSCENEGRAPH_INCLUDE)")) nil [39302 39383])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("$(call DEPENDENCIES,MYSCENEGRAPH)")) nil [39383 39452])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("$(SCENEGRAPH_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [39452 39529])
            (".PHONY" function (:arguments ("libSceneGraph")) nil [39529 39551])
            ("libSceneGraph" function (:arguments ("$(call LIBRARYNAME,libSceneGraph)")) nil [39551 39600])
            (".PHONY" function (:arguments ("Configure-Vrui")) nil [39663 39686])
            ("Configure-Vrui" function (:arguments ("Configure-Begin")) nil [39686 39718])
            ("VRUI_HEADERS" variable (:default-value ("$(wildcard Vrui/*.h)" "$(wildcard Vrui/*.icpp)")) nil [40334 40411])
            ("VRUI_IGNORE_SOURCES" variable (:default-value ("Vrui/Internal/InputDeviceDock.cpp" "Vrui/Internal/TheoraMovieSaver.cpp" "Vrui/Internal/KinectRecorder.cpp" "Vrui/Internal/KinectPlayback.cpp")) nil [40516 40745])
            ("VRUI_SOURCES" variable (:default-value ("$(wildcard Vrui/*.cpp)" "$(filter-out $(VRUI_IGNORE_SOURCES),$(wildcard Vrui/Internal/*.cpp))" "$(wildcard Vrui/Internal/$(OSSPECFILEINSERT)/*.cpp)")) nil [40746 40939])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DDEFAULTMOUSECURSORIMAGEFILENAME='\"$(SHAREINSTALLDIR)/Textures/Cursor.Xcur\"'")) nil [41173 41315])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSTOOLDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(VRTOOLSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [41315 41444])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSVISLETDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(VRVISLETSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [41444 41579])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DAUTOSTEREODIRECTORY='\"$(SHAREINSTALLDIR)/Textures\"'")) nil [41579 41670])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DDEFAULTGLYPHRENDERERCURSORFILENAME='\"$(SHAREINSTALLDIR)/Textures/Cursor.Xcur\"'")) nil [41783 41914])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSVRUICONFIGFILE='\"$(ETCINSTALLDIR)/Vrui.cfg\"'" "-DVRUIDEFAULTROOTSECTIONNAME='\"Desktop\"'")) nil [41914 42057])
            ("$(VRUI_SOURCES)" function (:arguments ("config")) nil [42058 42082])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("PACKAGES" "+=" "$(MYVRUI_DEPENDS)")) nil [42083 42142])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [42142 42211])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("$(call DEPENDENCIES,MYVRUI)")) nil [42211 42268])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("$(VRUI_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [42268 42333])
            (".PHONY" function (:arguments ("libVrui")) nil [42333 42349])
            ("libVrui" function (:arguments ("$(call LIBRARYNAME,libVrui)")) nil [42349 42386])
            ("$(VRTOOLSDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [42477 42533])
            ("$(VRTOOLSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [42533 42596])
            ("$(VRTOOLSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [42596 42655])
            ("$(VRTOOLSDIR)" function (:arguments ("$(OBJDIR)/Vrui/Tools/%.o")) nil [43118 43205])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DDEFAULTLIGHTSABERIMAGEFILENAME='\"$(SHAREINSTALLDIR)/Textures/Lightsaber.png\"'")) nil [43427 43550])
            ("$(VRTOOLS_SOURCES)" function (:arguments ("config")) nil [43551 43578])
            (".SECONDARY" function (:arguments ("$(VRTOOLS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [43628 43679])
            (".PHONY" function (:arguments ("VRTools")) nil [43680 43696])
            ("VRTools" function (:arguments ("$(VRTOOLS)")) nil [43696 43716])
            ("$(VRVISLETSDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [43805 43863])
            ("$(VRVISLETSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [43863 43928])
            ("$(VRVISLETSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [43928 43989])
            ("$(VRVISLETSDIR)" function (:arguments ("$(OBJDIR)/Vrui/Vislets/%.o")) nil [44464 44557])
            ("$(VRVISLETSDIR)" function (:arguments ("PACKAGES" "+=" "MYSCENEGRAPH")) nil [44794 44873])
            ("$(VRVISLETS_SOURCES)" function (:arguments ("config")) nil [44874 44903])
            (".SECONDARY" function (:arguments ("$(VRVISLETS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [44952 45005])
            (".PHONY" function (:arguments ("VRVislets")) nil [45006 45024])
            ("VRVislets" function (:arguments ("$(VRVISLETS)")) nil [45024 45048])
            (".PHONY" function (:arguments ("Configure-VRDeviceDaemon")) nil [45085 45118])
            ("Configure-VRDeviceDaemon" function (:arguments ("Configure-Begin")) nil [45118 45160])
            ("VRDEVICEDAEMON_SOURCES" variable (:default-value ("VRDeviceDaemon/VRDevice.cpp" "VRDeviceDaemon/VRCalibrator.cpp" "VRDeviceDaemon/VRDeviceManager.cpp" "Vrui/Internal/VRDevicePipe.cpp" "VRDeviceDaemon/VRDeviceServer.cpp" "VRDeviceDaemon/VRDeviceDaemon.cpp")) nil [45832 46186])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSVRDEVICEDIRECTORY='\"$(PLUGININSTALLDIR)/$(VRDEVICESDIREXT)\"'" "-DSYSVRCALIBRATORDIRECTORY='\"$(PLUGININSTALLDIR)/$(VRCALIBRATORSDIREXT)\"'")) nil [46187 46437])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSVRDEVICEDAEMONCONFIGFILENAME='\"$(ETCINSTALLDIR)/VRDevices.cfg\"'")) nil [46437 46559])
            ("$(VRDEVICEDAEMON_SOURCES)" function (:arguments ("config")) nil [46560 46594])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYIO" "MYTHREADS" "MYMISC" "DL")) nil [46595 46676])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [46676 46742])
            ("$(EXEDIR)" function (:arguments ("CFLAGS" "+=" "-DVERBOSE" "-DSYSDSONAMETEMPLATE='\"lib%s.$(PLUGINFILEEXT)\"'")) nil [46742 46836])
            ("$(EXEDIR)" function (:arguments ("LINKFLAGS" "+=" "$(PLUGINHOSTLINKFLAGS)")) nil [46836 46898])
            ("$(EXEDIR)" function (:arguments ("$(VRDEVICEDAEMON_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [46898 46970])
            (".PHONY" function (:arguments ("VRDeviceDaemon")) nil [46970 46993])
            ("VRDeviceDaemon" function (:arguments ("$(EXEDIR)/VRDeviceDaemon")) nil [46993 47034])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/VRPNConnection.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/VRPNClient.o")) nil [47368 47566])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(BLUETOOTH_LIBDIR)" "$(BLUETOOTH_LIBS)")) nil [47567 47679])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/Wiimote.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/WiimoteTracker.o")) nil [47679 47882])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYUSB")) nil [47883 47955])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(MYUSB_LIBDIR)" "$(MYUSB_LIBS)")) nil [47955 48061])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/RazerHydra.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/RazerHydraDevice.o")) nil [48246 48458])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYTHREADS" "MYMISC")) nil [48497 48583])
            ("$(VRDEVICESDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [48583 48662])
            ("$(VRDEVICESDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)" "-DVERBOSE" "-DSYSDSONAMETEMPLATE='\"lib%s.$(PLUGINFILEEXT)\"'")) nil [48662 48785])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [48785 48846])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/%.o")) nil [48846 48951])
            ("$(VRDEVICES_SOURCES)" function (:arguments ("config")) nil [49151 49180])
            ("VRDeviceDaemon/VRDevices/Wiimote.cpp" function (:arguments ("config")) nil [49180 49309])
            ("VRDeviceDaemon/VRDevices/VRPNConnection.cpp" function (:arguments ("config")) nil [49180 49309])
            (".SECONDARY" function (:arguments ("$(VRDEVICES_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [49368 49421])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYTHREADS" "MYMISC")) nil [49503 49593])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [49593 49676])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)" "-DSYSDSONAMETEMPLATE='\"lib%s.$(PLUGINFILEEXT)\"'")) nil [49676 49793])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [49793 49858])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRCalibrators/%.o")) nil [49858 49975])
            ("$(VRCALIBRATORS_SOURCES)" function (:arguments ("config")) nil [50175 50208])
            (".SECONDARY" function (:arguments ("$(VRCALIBRATORS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [50264 50321])
            (".PHONY" function (:arguments ("VRCalibrators")) nil [50322 50344])
            ("VRCalibrators" function (:arguments ("$(VRCALIBRATORS)")) nil [50344 50376])
            ("Vrui/Utilities/DeviceTest.cpp" function (:arguments ("config")) nil [50419 50457])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [50458 50499])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/DeviceTest.o")) nil [50499 50559])
            (".PHONY" function (:arguments ("DeviceTest")) nil [50559 50578])
            ("DeviceTest" function (:arguments ("$(EXEDIR)/DeviceTest")) nil [50578 50611])
            ("Vrui/Utilities/PrintInputDeviceDataFile.cpp" function (:arguments ("config")) nil [50660 50712])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [50713 50768])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/PrintInputDeviceDataFile.o")) nil [50768 50856])
            (".PHONY" function (:arguments ("PrintInputDeviceDataFile")) nil [50856 50889])
            ("PrintInputDeviceDataFile" function (:arguments ("$(EXEDIR)/PrintInputDeviceDataFile")) nil [50889 50950])
            ("Calibration/XBackground.cpp" function (:arguments ("config")) nil [50993 51029])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "X11")) nil [51030 51069])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [51069 51128])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/XBackground.o")) nil [51128 51187])
            (".PHONY" function (:arguments ("XBackground")) nil [51187 51207])
            ("XBackground" function (:arguments ("$(EXEDIR)/XBackground")) nil [51207 51242])
            ("MEASUREENVIRONMENT_SOURCES" variable (:default-value ("Calibration/TotalStation.cpp" "Calibration/NaturalPointClient.cpp" "Calibration/MeasureEnvironment.cpp")) nil [51275 51465])
            ("$(MEASUREENVIRONMENT_SOURCES)" function (:arguments ("config")) nil [51466 51504])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [51505 51554])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [51554 51620])
            ("$(EXEDIR)" function (:arguments ("$(MEASUREENVIRONMENT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [51620 51700])
            (".PHONY" function (:arguments ("MeasureEnvironment")) nil [51700 51727])
            ("MeasureEnvironment" function (:arguments ("$(EXEDIR)/MeasureEnvironment")) nil [51727 51776])
            ("Calibration/ScreenCalibrator.cpp" function (:arguments ("config")) nil [51827 51868])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [51869 51916])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [51916 51980])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/ScreenCalibrator.o")) nil [51980 52049])
            (".PHONY" function (:arguments ("ScreenCalibrator")) nil [52049 52074])
            ("ScreenCalibrator" function (:arguments ("$(EXEDIR)/ScreenCalibrator")) nil [52074 52119])
            ("ALIGNTRACKINGMARKERS_SOURCES" variable (:default-value ("Calibration/ReadOptiTrackMarkerFile.cpp" "Calibration/NaturalPointClient.cpp" "Calibration/AlignTrackingMarkers.cpp")) nil [52169 52378])
            ("$(ALIGNTRACKINGMARKERS_SOURCES)" function (:arguments ("config")) nil [52379 52419])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [52420 52471])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [52471 52539])
            ("$(EXEDIR)" function (:arguments ("$(ALIGNTRACKINGMARKERS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [52539 52623])
            (".PHONY" function (:arguments ("AlignTrackingMarkers")) nil [52623 52652])
            ("AlignTrackingMarkers" function (:arguments ("$(EXEDIR)/AlignTrackingMarkers")) nil [52652 52705])
            ("SYSTEMPACKAGES" variable (:default-value ("$(sort $(patsubst MY%,,$(PACKAGES_RECEXPAND)))")) nil [52965 53029])
            ("VRUIAPP_INCLUDEDIRS" variable (:default-value ("-I$$(VRUI_INCLUDEDIR)")) nil [53029 53073])
            ("VRUIAPP_INCLUDEDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_INCLUDE)))")) nil [53073 53171])
            ("VRUIAPP_CFLAGS" variable (:default-value ("$(CSYSFLAGS)")) nil [53171 53201])
            ("VRUIAPP_CFLAGS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(PACKAGES_RECEXPAND),$($(PACKAGENAME)_CFLAGS)))")) nil [53201 53297])
            ("VRUIAPP_LDIRS" variable (:default-value ("-L$$(VRUI_LIBDIR)")) nil [53297 53331])
            ("VRUIAPP_LDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_LIBDIR)))")) nil [53331 53422])
            ("VRUIAPP_LIBS" variable (:default-value ("$(patsubst lib%,-l%.$(LDEXT),$(LIBRARY_NAMES))")) nil [53422 53484])
            ("VRUIAPP_LIBS" variable (:default-value ("$(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_LIBS))")) nil [53484 53564])
            ("VRUIAPP_LFLAGS" variable nil nil [53564 53581])
            ("$(MAKEFILEFRAGMENT)" function (:arguments ("PACKAGES" "=" "MYVRUI")) nil [53779 53818])
            ("$(MAKEFILEFRAGMENT)" function (:arguments ("config")) nil [53818 54905])
            ("$(MAKECONFIGFILE)" function (:arguments ("config")) nil [55079 58001])
            ("ROGUE_SYSTEMPACKAGES" variable (:default-value ("$(filter %_,$(foreach PACKAGENAME,$(SYSTEMPACKAGES),$(PACKAGENAME)_$($(PACKAGENAME)_PKGNAME)))")) nil [58002 58120])
            ("ROGUE_INCLUDEDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)INCLUDE)))")) nil [58120 58220])
            ("ROGUE_LIBDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)LIBDIR)))")) nil [58220 58315])
            ("ROGUE_LIBS" variable (:default-value ("$(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)LIBS))")) nil [58315 58397])
            ("$(PKGCONFIGFILE)" function (:arguments ("PACKAGES" "=" "MYVRUI")) nil [58455 58491])
            ("$(PKGCONFIGFILE)" function (:arguments ("config")) nil [58491 59114])
            ("install" function nil nil [59727 59736]))          
      :file "makefile"
      :pointmax 65779
      :fsize 65778
      :lastmodtime '(22477 42715 901051 498000)
      :unmatched-syntax nil))
  :file "!apps!src!Vrui!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
