;; Object Vrui/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Vrui/"
  :tables
  (list
    (semanticdb-table "makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("INSTALLDIR" variable (:default-value ("/home/nshetty/apps/vrui/Vrui-install")) nil [1575 1626])
            ("VRUI_PACKAGEROOT" variable (:default-value ("$(shell pwd)")) nil [1895 1928])
            ("VRUI_MAKEDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/BuildRoot")) nil [1928 1974])
            ("$(VRUI_MAKEDIR)/SystemDefinitions" include nil nil [2057 2099])
            ("$(VRUI_MAKEDIR)/Packages.System" include nil nil [2099 2139])
            ("OPENVR_BASEDIR" variable (:default-value ("$(PWD)/Contributed/OpenVR")) nil [4152 4195])
            ("$(VRUI_MAKEDIR)/Packages.Vrui" include nil nil [5387 5425])
            ("USE_RPATH" variable (:default-value ("1")) nil [6108 6122])
            ("GLSUPPORT_USE_TLS" variable (:default-value ("0")) nil [6785 6807])
            ("LINUX_INPUT_H_HAS_STRUCTS" variable (:default-value ("1")) nil [7119 7149])
            ("VRUI_VRWINDOW_USE_SWAPGROUPS" variable (:default-value ("0")) nil [7490 7523])
            ("VRDEVICES_USE_INPUT_ABSTRACTION" variable (:default-value ("0")) nil [7714 7750])
            ("VRDEVICES_USE_BLUETOOTH" variable (:default-value ("$(SYSTEM_HAVE_BLUETOOTH)")) nil [8173 8224])
            ("VRUI_VERSION" variable (:default-value ("4002004")) nil [8474 8497])
            ("MAJORLIBVERSION" variable (:default-value ("4")) nil [8497 8517])
            ("MINORLIBVERSION" variable (:default-value ("2")) nil [8517 8537])
            ("VRUI_NAME" variable (:default-value ("Vrui-$(MAJORLIBVERSION).$(MINORLIBVERSION)")) nil [8537 8593])
            ("LIBDESTDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/$(MYLIBEXT)")) nil [8722 8768])
            ("VRUI_INCLUDEDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)")) nil [8829 8867])
            ("VRUI_LIBDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/$(MYLIBEXT)")) nil [8867 8913])
            ("PLUGININSTALLDIR" variable (:default-value ("$(LIBINSTALLDIR)")) nil [10529 10565])
            ("PACKAGES" variable nil nil [11813 11825])
            ("LIBRARIES" variable nil nil [12001 12014])
            ("PLUGINS" variable nil nil [12014 12025])
            ("EXECUTABLES" variable nil nil [12025 12040])
            ("LIBRARY_NAMES" variable (:default-value ("libMisc" "libRealtime" "libThreads")) nil [12069 12161])
            ("LIBRARY_NAMES" variable (:default-value ("libIO" "libPlugins" "libComm" "libCluster" "libMath" "libGeometry" "libGLWrappers" "libGLSupport" "libGLXSupport" "libGLGeometry" "libImages" "libGLMotif" "libSound" "libVideo" "libALSupport" "libSceneGraph" "libVrui")) nil [12294 12834])
            ("LIBRARIES" variable (:default-value ("$(LIBRARY_NAMES:%=$(call LIBRARYNAME,%))")) nil [12835 12889])
            ("VRTOOLS_SOURCES" variable (:default-value ("$(wildcard Vrui/Tools/*.cpp)")) nil [12933 12980])
            ("VRTOOLSDIREXT" variable (:default-value ("VRTools")) nil [12981 13005])
            ("VRTOOLSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRTOOLSDIREXT)")) nil [13005 13048])
            ("VRTOOLS" variable (:default-value ("$(VRTOOLS_SOURCES:Vrui/Tools/%.cpp=$(VRTOOLSDIR)/lib%.$(PLUGINFILEEXT))")) nil [13048 13130])
            ("PLUGINS" variable (:default-value ("$(VRTOOLS)")) nil [13130 13152])
            ("VRVISLETS_SOURCES" variable (:default-value ("$(wildcard Vrui/Vislets/*.cpp)")) nil [13195 13246])
            ("VRVISLETSDIREXT" variable (:default-value ("VRVislets")) nil [13247 13275])
            ("VRVISLETSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRVISLETSDIREXT)")) nil [13275 13323])
            ("VRVISLETS" variable (:default-value ("$(VRVISLETS_SOURCES:Vrui/Vislets/%.cpp=$(VRVISLETSDIR)/lib%.$(PLUGINFILEEXT))")) nil [13323 13413])
            ("PLUGINS" variable (:default-value ("$(VRVISLETS)")) nil [13413 13437])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/VRDeviceDaemon")) nil [13474 13514])
            ("VRDEVICES_IGNORE_SOURCES" variable (:default-value ("VRDeviceDaemon/VRDevices/Joystick.cpp" "VRDeviceDaemon/VRDevices/VRPNConnection.cpp" "VRDeviceDaemon/VRDevices/Wiimote.cpp" "VRDeviceDaemon/VRDevices/WiimoteTracker.cpp" "VRDeviceDaemon/VRDevices/RazerHydra.cpp" "VRDeviceDaemon/VRDevices/RazerHydraDevice.cpp" "VRDeviceDaemon/VRDevices/OculusRift.cpp" "VRDeviceDaemon/VRDevices/OpenVRHost.cpp")) nil [13627 14186])
            ("VRDEVICES_SOURCES" variable (:default-value ("$(filter-out $(VRDEVICES_IGNORE_SOURCES),$(wildcard VRDeviceDaemon/VRDevices/*.cpp))")) nil [14187 14292])
            ("VRDEVICESDIREXT" variable (:default-value ("VRDevices")) nil [14789 14817])
            ("VRDEVICESDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRDEVICESDIREXT)")) nil [14817 14865])
            ("VRDEVICES" variable (:default-value ("$(VRDEVICES_SOURCES:VRDeviceDaemon/VRDevices/%.cpp=$(VRDEVICESDIR)/lib%.$(PLUGINFILEEXT))")) nil [14865 14967])
            ("PLUGINS" variable (:default-value ("$(VRDEVICES)")) nil [14967 14991])
            ("VRCALIBRATORS_SOURCES" variable (:default-value ("$(wildcard VRDeviceDaemon/VRCalibrators/*.cpp)")) nil [15035 15106])
            ("VRCALIBRATORSDIREXT" variable (:default-value ("VRCalibrators")) nil [15107 15143])
            ("VRCALIBRATORSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRCALIBRATORSDIREXT)")) nil [15143 15199])
            ("VRCALIBRATORS" variable (:default-value ("$(VRCALIBRATORS_SOURCES:VRDeviceDaemon/VRCalibrators/%.cpp=$(VRCALIBRATORSDIR)/lib%.$(PLUGINFILEEXT))")) nil [15199 15317])
            ("PLUGINS" variable (:default-value ("$(VRCALIBRATORS)")) nil [15317 15345])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/DeviceTest" "$(EXEDIR)/TrackingTest")) nil [15563 15639])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/RoomSetup")) nil [15683 15718])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/EyeCalibrator")) nil [15760 15799])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/PrintInputDeviceDataFile")) nil [15851 15901])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/XBackground" "$(EXEDIR)/MeasureEnvironment" "$(EXEDIR)/ScreenCalibrator" "$(EXEDIR)/AlignTrackingMarkers" "$(EXEDIR)/SampleTrackerField")) nil [15941 16162])
            ("MAKECONFIGFILE" variable (:default-value ("BuildRoot/Configuration.Vrui")) nil [16452 16498])
            ("PKGCONFIGFILE" variable (:default-value ("Share/Vrui.pc")) nil [16548 16578])
            ("TEMPLATEMAKEFILE" variable (:default-value ("BuildRoot/makefile")) nil [16620 16658])
            ("ALL" variable (:default-value ("$(LIBRARIES)" "$(EXECUTABLES)" "$(PLUGINS)")) nil [16721 16766])
            (".PHONY" function (:arguments ("all")) nil [16767 16779])
            ("all" function (:arguments ("$(ALL)")) nil [16779 16791])
            ("$(PLUGINS)" function (:arguments ("|" "$(LIBRARIES)")) nil [16850 16877])
            ("$(EXECUTABLES)" function (:arguments ("|" "$(LIBRARIES)")) nil [16877 16908])
            (".PHONY" function (:arguments ("config" "config-invalidate")) nil [17127 17160])
            ("config" function (:arguments ("config-invalidate" "$(DEPDIR)/config")) nil [17160 17203])
            ("config-invalidate" function nil nil [17204 17257])
            ("$(DEPDIR)" function nil nil [17258 17353])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Realtime" "$(DEPDIR)/Configure-Threads" "$(DEPDIR)/Configure-USB" "$(DEPDIR)/Configure-GLSupport" "$(DEPDIR)/Configure-Images" "$(DEPDIR)/Configure-Sound" "$(DEPDIR)/Configure-ALSupport" "$(DEPDIR)/Configure-Video" "$(DEPDIR)/Configure-SceneGraph" "$(DEPDIR)/Configure-Vrui" "$(DEPDIR)/Configure-VRDeviceDaemon")) nil [17517 18218])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Install")) nil [19470 19608])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Makefiles")) nil [19609 19682])
            (".PHONY" function (:arguments ("extraclean")) nil [19888 19907])
            ("extraclean" function nil nil [19907 20104])
            (".PHONY" function (:arguments ("extrasqueakyclean")) nil [20105 20131])
            ("extrasqueakyclean" function nil nil [20131 20327])
            ("$(VRUI_MAKEDIR)/BasicMakefile" include nil nil [20353 20391])
            ("MISC_HEADERS" variable (:default-value ("$(wildcard Misc/*.h)" "$(wildcard Misc/*.icpp)")) nil [20636 20713])
            ("MISC_SOURCES" variable (:default-value ("$(wildcard Misc/*.cpp)")) nil [20714 20752])
            ("$(MISC_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [20753 20809])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("PACKAGES" "+=" "$(MYMISC_DEPENDS)")) nil [20810 20869])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYMISC_INCLUDE)")) nil [20869 20938])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("|" "$(call DEPENDENCIES,MYMISC)")) nil [20938 20997])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("$(MISC_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [20997 21062])
            (".PHONY" function (:arguments ("libMisc")) nil [21062 21078])
            ("libMisc" function (:arguments ("$(call LIBRARYNAME,libMisc)")) nil [21078 21115])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Begin")) nil [21167 21223])
            ("REALTIME_HEADERS" variable (:default-value ("$(wildcard Realtime/*.h)" "$(wildcard Realtime/*.icpp)")) nil [21862 21955])
            ("REALTIME_SOURCES" variable (:default-value ("$(wildcard Realtime/*.cpp)")) nil [21956 22002])
            ("$(REALTIME_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [22003 22063])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("PACKAGES" "+=" "$(MYREALTIME_DEPENDS)")) nil [22064 22131])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYREALTIME_INCLUDE)")) nil [22131 22208])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("|" "$(call DEPENDENCIES,MYREALTIME)")) nil [22208 22275])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("$(REALTIME_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [22275 22348])
            (".PHONY" function (:arguments ("libRealtime")) nil [22348 22368])
            ("libRealtime" function (:arguments ("$(call LIBRARYNAME,libRealtime)")) nil [22368 22413])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Realtime")) nil [22462 22520])
            ("THREADS_HEADERS" variable (:default-value ("$(wildcard Threads/*.h)" "$(wildcard Threads/*.icpp)")) nil [23769 23858])
            ("THREADS_SOURCES" variable (:default-value ("$(wildcard Threads/*.cpp)")) nil [23859 23903])
            ("$(THREADS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [23904 23963])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("PACKAGES" "+=" "$(MYTHREADS_DEPENDS)")) nil [23964 24029])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYTHREADS_INCLUDE)")) nil [24029 24104])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("|" "$(call DEPENDENCIES,MYTHREADS)")) nil [24104 24169])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("$(THREADS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [24169 24240])
            (".PHONY" function (:arguments ("libThreads")) nil [24240 24259])
            ("libThreads" function (:arguments ("$(call LIBRARYNAME,libThreads)")) nil [24259 24302])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Threads")) nil [24340 24393])
            ("USB_HEADERS" variable (:default-value ("$(wildcard USB/*.h)" "$(wildcard USB/*.icpp)")) nil [25365 25438])
            ("USB_SOURCES" variable (:default-value ("$(wildcard USB/*.cpp)")) nil [25439 25475])
            ("$(USB_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [25476 25531])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("PACKAGES" "+=" "$(MYUSB_DEPENDS)")) nil [25532 25589])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYUSB_INCLUDE)")) nil [25589 25656])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("|" "$(call DEPENDENCIES,MYUSB)")) nil [25656 25713])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("$(USB_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [25713 25776])
            (".PHONY" function (:arguments ("libUSB")) nil [25776 25791])
            ("libUSB" function (:arguments ("$(call LIBRARYNAME,libUSB)")) nil [25791 25826])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-USB")) nil [25872 25924])
            ("RAWHID_HEADERS" variable (:default-value ("$(wildcard RawHID/*.h)" "$(wildcard RawHID/*.icpp)")) nil [26128 26213])
            ("RAWHID_SOURCES" variable (:default-value ("$(wildcard RawHID/*.cpp)" "$(wildcard RawHID/Internal/*.cpp)")) nil [26214 26309])
            ("$(RAWHID_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [26310 26368])
            ("$(call LIBRARYNAME,libRawHID)" function (:arguments ("PACKAGES" "+=" "$(MYRAWHID_DEPENDS)")) nil [26369 26432])
            ("$(call LIBRARYNAME,libRawHID)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYRAWHID_INCLUDE)")) nil [26432 26505])
            ("$(call LIBRARYNAME,libRawHID)" function (:arguments ("|" "$(call DEPENDENCIES,MYRAWHID)")) nil [26505 26568])
            ("$(call LIBRARYNAME,libRawHID)" function (:arguments ("$(RAWHID_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [26568 26637])
            (".PHONY" function (:arguments ("libRawHID")) nil [26637 26655])
            ("libRawHID" function (:arguments ("$(call LIBRARYNAME,libRawHID)")) nil [26655 26696])
            ("IO_HEADERS" variable (:default-value ("$(wildcard IO/*.h)" "$(wildcard IO/*.icpp)")) nil [26733 26802])
            ("IO_SOURCES" variable (:default-value ("$(wildcard IO/*.cpp)")) nil [26803 26837])
            ("$(IO_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [26838 26892])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("PACKAGES" "+=" "$(MYIO_DEPENDS)")) nil [26893 26948])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYIO_INCLUDE)")) nil [26948 27013])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("|" "$(call DEPENDENCIES,MYIO)")) nil [27013 27068])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("$(IO_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [27068 27129])
            (".PHONY" function (:arguments ("libIO")) nil [27129 27143])
            ("libIO" function (:arguments ("$(call LIBRARYNAME,libIO)")) nil [27143 27176])
            ("PLUGINS_HEADERS" variable (:default-value ("$(wildcard Plugins/*.h)" "$(wildcard Plugins/*.icpp)")) nil [27223 27312])
            ("PLUGINS_SOURCES" variable (:default-value ("$(wildcard Plugins/*.cpp)")) nil [27313 27357])
            ("$(PLUGINS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [27358 27417])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("PACKAGES" "+=" "$(MYPLUGINS_DEPENDS)")) nil [27418 27483])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYPLUGINS_INCLUDE)")) nil [27483 27558])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("|" "$(call DEPENDENCIES,MYPLUGINS)")) nil [27558 27623])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("$(PLUGINS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [27623 27694])
            (".PHONY" function (:arguments ("libPlugins")) nil [27694 27713])
            ("libPlugins" function (:arguments ("$(call LIBRARYNAME,libPlugins)")) nil [27713 27756])
            ("COMM_HEADERS" variable (:default-value ("$(wildcard Comm/*.h)" "$(wildcard Comm/*.icpp)")) nil [27807 27884])
            ("COMM_SOURCES" variable (:default-value ("$(wildcard Comm/*.cpp)")) nil [27885 27923])
            ("$(COMM_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [27924 27980])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("PACKAGES" "+=" "$(MYCOMM_DEPENDS)")) nil [27981 28040])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCOMM_INCLUDE)")) nil [28040 28109])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("|" "$(call DEPENDENCIES,MYCOMM)")) nil [28109 28168])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("$(COMM_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [28168 28233])
            (".PHONY" function (:arguments ("libComm")) nil [28233 28249])
            ("libComm" function (:arguments ("$(call LIBRARYNAME,libComm)")) nil [28249 28286])
            ("CLUSTER_HEADERS" variable (:default-value ("$(wildcard Cluster/*.h)" "$(wildcard Cluster/*.icpp)")) nil [28336 28425])
            ("CLUSTER_SOURCES" variable (:default-value ("$(wildcard Cluster/*.cpp)")) nil [28426 28470])
            ("$(CLUSTER_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [28471 28530])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("PACKAGES" "+=" "$(MYCLUSTER_DEPENDS)")) nil [28531 28596])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCLUSTER_INCLUDE)")) nil [28596 28671])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("|" "$(call DEPENDENCIES,MYCLUSTER)")) nil [28671 28736])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("$(CLUSTER_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [28736 28807])
            (".PHONY" function (:arguments ("libCluster")) nil [28807 28826])
            ("libCluster" function (:arguments ("$(call LIBRARYNAME,libCluster)")) nil [28826 28869])
            ("MATH_HEADERS" variable (:default-value ("$(wildcard Math/*.h)" "$(wildcard Math/*.icpp)")) nil [28913 28990])
            ("MATH_SOURCES" variable (:default-value ("$(wildcard Math/*.cpp)")) nil [28991 29029])
            ("$(MATH_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [29030 29086])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("PACKAGES" "+=" "$(MYMATH_DEPENDS)")) nil [29087 29146])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYMATH_INCLUDE)")) nil [29146 29215])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("|" "$(call DEPENDENCIES,MYMATH)")) nil [29215 29274])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("$(MATH_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [29274 29339])
            (".PHONY" function (:arguments ("libMath")) nil [29339 29355])
            ("libMath" function (:arguments ("$(call LIBRARYNAME,libMath)")) nil [29355 29392])
            ("GEOMETRY_HEADERS" variable (:default-value ("$(wildcard Geometry/*.h)" "$(wildcard Geometry/*.icpp)")) nil [29444 29537])
            ("GEOMETRY_SOURCES" variable (:default-value ("$(wildcard Geometry/*.cpp)")) nil [29538 29584])
            ("$(GEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [29585 29645])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("PACKAGES" "+=" "$(MYGEOMETRY_DEPENDS)")) nil [29646 29713])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGEOMETRY_INCLUDE)")) nil [29713 29790])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("|" "$(call DEPENDENCIES,MYGEOMETRY)")) nil [29790 29857])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("$(GEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [29857 29930])
            (".PHONY" function (:arguments ("libGeometry")) nil [29930 29950])
            ("libGeometry" function (:arguments ("$(call LIBRARYNAME,libGeometry)")) nil [29950 29995])
            ("MACOSX_HEADERS" variable (:default-value ("$(wildcard MacOSX/*.h)" "$(wildcard MacOSX/*.icpp)")) nil [30040 30125])
            ("GLWRAPPERS_HEADERS" variable (:default-value ("GL/GLTexCoordTemplates.h" "GL/GLMultiTexCoordTemplates.h" "GL/GLColorTemplates.h" "GL/GLSecondaryColorTemplates.h" "GL/GLNormalTemplates.h" "GL/GLVertexTemplates.h" "GL/GLIndexTemplates.h" "GL/GLPrimitiveTemplates.h" "GL/GLScalarLimits.h" "GL/GLScalarConverter.h" "GL/GLColor.h" "GL/GLColorOperations.h" "GL/GLVector.h" "GL/GLBox.h" "GL/GLVertexArrayTemplates.h" "GL/GLVertexArrayParts.h" "GL/GLVertex.h" "GL/GLVertex.icpp" "GL/GLFogEnums.h" "GL/GLFogTemplates.h" "GL/GLFog.h" "GL/GLLightEnums.h" "GL/GLLightTemplates.h" "GL/GLLight.h" "GL/GLLightModelEnums.h" "GL/GLLightModelTemplates.h" "GL/GLMaterialEnums.h" "GL/GLMaterialTemplates.h" "GL/GLMaterial.h" "GL/GLTexEnvEnums.h" "GL/GLTexEnvTemplates.h" "GL/GLMatrixEnums.h" "GL/GLMatrixTemplates.h" "GL/GLMiscTemplates.h" "GL/GLGetTemplates.h" "GL/GLGetPrimitiveTemplates.h" "GL/GLGetFogTemplates.h" "GL/GLGetLightTemplates.h" "GL/GLGetMaterialTemplates.h" "GL/GLGetTexEnvTemplates.h" "GL/GLGetMatrixTemplates.h" "GL/GLGetMiscTemplates.h")) nil [30177 32025])
            ("GLWRAPPERS_SOURCES" variable (:default-value ("GL/GLScalarLimits.cpp" "GL/GLColor.cpp" "GL/GLVertex.cpp" "GL/GLFog.cpp" "GL/GLLight.cpp" "GL/GLMaterial.cpp")) nil [32026 32261])
            ("$(GLWRAPPERS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [32262 32324])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("PACKAGES" "+=" "$(MYGLWRAPPERS_DEPENDS)")) nil [32325 32396])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLWRAPPERS_INCLUDE)")) nil [32396 32477])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("CFLAGS" "+=" "$(MYGLWRAPPERS_CFLAGS)")) nil [32477 32545])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLWRAPPERS)")) nil [32545 32616])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("$(GLWRAPPERS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [32616 32693])
            (".PHONY" function (:arguments ("libGLWrappers")) nil [32693 32715])
            ("libGLWrappers" function (:arguments ("$(call LIBRARYNAME,libGLWrappers)")) nil [32715 32764])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-RawHID")) nil [32811 32869])
            ("GLSUPPORT_HEADERS" variable (:default-value ("GL/Config.h" "GL/GLPrintError.h" "GL/GLMarshallers.h" "GL/GLMarshallers.icpp" "GL/GLValueCoders.h" "GL/GLLightTracker.h" "GL/GLClipPlaneTracker.h" "GL/TLSHelper.h" "GL/GLObject.h" "GL/GLContextData.h" "GL/GLExtensions.h" "GL/GLExtensionManager.h" "GL/GLTextureObject.h" "GL/GLShader.h" "GL/GLGeometryShader.h" "GL/GLAutomaticShader.h" "GL/GLLineLightingShader.h" "GL/GLColorMap.h" "GL/GLNumberRenderer.h" "GL/GLFont.h" "GL/GLString.h" "GL/GLLabel.h" "GL/GLLineIlluminator.h" "GL/GLModels.h")) nil [33755 34703])
            ("GLSUPPORTEXTENSION_HEADERS" variable (:default-value ("$(wildcard GL/Extensions/*.h)" "$(wildcard GL/Extensions/*.icpp)")) nil [34704 34827])
            ("GLSUPPORT_SOURCES" variable (:default-value ("GL/GLPrintError.cpp" "GL/GLMarshallers.cpp" "GL/GLValueCoders.cpp" "GL/GLLightTracker.cpp" "GL/GLClipPlaneTracker.cpp" "GL/GLObject.cpp" "GL/Internal/GLThingManager.cpp" "GL/GLContextData.cpp" "GL/GLExtensions.cpp" "GL/GLExtensionManager.cpp" "$(wildcard GL/Extensions/*.cpp)" "GL/GLTextureObject.cpp" "GL/GLShader.cpp" "GL/GLGeometryShader.cpp" "GL/GLAutomaticShader.cpp" "GL/GLLineLightingShader.cpp" "GL/GLColorMap.cpp" "GL/GLNumberRenderer.cpp" "GL/GLFont.cpp" "GL/GLString.cpp" "GL/GLLabel.cpp" "GL/GLLineIlluminator.cpp" "GL/GLModels.cpp")) nil [34828 35818])
            ("$(GLSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [35819 35880])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("PACKAGES" "+=" "$(MYGLSUPPORT_DEPENDS)")) nil [35881 35950])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLSUPPORT_INCLUDE)")) nil [35950 36029])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("CFLAGS" "+=" "$(MYGLSUPPORT_CFLAGS)")) nil [36029 36095])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLSUPPORT)")) nil [36095 36164])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("$(GLSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [36164 36239])
            (".PHONY" function (:arguments ("libGLSupport")) nil [36239 36260])
            ("libGLSupport" function (:arguments ("$(call LIBRARYNAME,libGLSupport)")) nil [36260 36307])
            ("GLXSUPPORT_HEADERS" variable (:default-value ("GL/GLContext.h" "GL/GLWindow.h")) nil [36359 36432])
            ("GLXSUPPORT_SOURCES" variable (:default-value ("GL/GLContext.cpp" "GL/GLWindow.cpp")) nil [36433 36510])
            ("$(GLXSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [36511 36573])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("PACKAGES" "+=" "$(MYGLXSUPPORT_DEPENDS)")) nil [36574 36645])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLXSUPPORT_INCLUDE)")) nil [36645 36726])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("CFLAGS" "+=" "$(MYGLXSUPPORT_CFLAGS)")) nil [36726 36794])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLXSUPPORT)")) nil [36794 36865])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("$(GLXSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [36865 36942])
            (".PHONY" function (:arguments ("libGLXSupport")) nil [36942 36964])
            ("libGLXSupport" function (:arguments ("$(call LIBRARYNAME,libGLXSupport)")) nil [36964 37013])
            ("GLGEOMETRY_HEADERS" variable (:default-value ("GL/GLGeometryWrappers.h" "GL/GLGeometryVertex.h" "GL/GLGeometryVertex.icpp" "GL/GLTransformationWrappers.h" "GL/GLTransformationWrappers.icpp" "GL/GLFrustum.h" "GL/GLFrustum.icpp" "GL/GLPolylineTube.h")) nil [37098 37398])
            ("GLGEOMETRY_SOURCES" variable (:default-value ("GL/GLGeometryVertex.cpp" "GL/GLTransformationWrappers.cpp" "GL/GLFrustum.cpp" "GL/GLPolylineTube.cpp")) nil [37399 37584])
            ("$(GLGEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [37585 37647])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("PACKAGES" "+=" "$(MYGLGEOMETRY_DEPENDS)")) nil [37648 37719])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLGEOMETRY_INCLUDE)")) nil [37719 37800])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLGEOMETRY)")) nil [37800 37871])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("$(GLGEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [37871 37948])
            (".PHONY" function (:arguments ("libGLGeometry")) nil [37948 37970])
            ("libGLGeometry" function (:arguments ("$(call LIBRARYNAME,libGLGeometry)")) nil [37970 38019])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-GLSupport")) nil [38063 38121])
            ("IMAGES_HEADERS" variable (:default-value ("$(wildcard Images/*.h)" "$(wildcard Images/*.icpp)")) nil [38982 39067])
            ("IMAGES_SOURCES" variable (:default-value ("$(wildcard Images/*.cpp)")) nil [39068 39110])
            ("$(IMAGES_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [39111 39169])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("PACKAGES" "+=" "$(MYIMAGES_DEPENDS)")) nil [39170 39233])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYIMAGES_INCLUDE)")) nil [39233 39306])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("|" "$(call DEPENDENCIES,MYIMAGES)")) nil [39306 39369])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("$(IMAGES_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [39369 39438])
            (".PHONY" function (:arguments ("libImages")) nil [39438 39456])
            ("libImages" function (:arguments ("$(call LIBRARYNAME,libImages)")) nil [39456 39497])
            ("GLMOTIF_HEADERS" variable (:default-value ("$(wildcard GLMotif/*.h)" "$(wildcard GLMotif/*.icpp)")) nil [39563 39652])
            ("GLMOTIF_SOURCES" variable (:default-value ("$(wildcard GLMotif/*.cpp)")) nil [39653 39697])
            ("$(GLMOTIF_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [39698 39757])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("PACKAGES" "+=" "$(MYGLMOTIF_DEPENDS)")) nil [39758 39823])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLMOTIF_INCLUDE)")) nil [39823 39898])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLMOTIF)")) nil [39898 39963])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("$(GLMOTIF_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [39963 40034])
            (".PHONY" function (:arguments ("libGLMotif")) nil [40034 40053])
            ("libGLMotif" function (:arguments ("$(call LIBRARYNAME,libGLMotif)")) nil [40053 40096])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Images")) nil [40136 40190])
            ("SOUND_HEADERS" variable (:default-value ("$(wildcard Sound/*.h)" "$(wildcard Sound/*.icpp)")) nil [40846 40927])
            ("SOUND_SOURCES" variable (:default-value ("$(wildcard Sound/*.cpp)")) nil [41294 41334])
            ("$(SOUND_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [41660 41717])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("PACKAGES" "+=" "$(MYSOUND_DEPENDS)")) nil [41718 41779])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYSOUND_INCLUDE)")) nil [41779 41850])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("|" "$(call DEPENDENCIES,MYSOUND)")) nil [41850 41911])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("$(SOUND_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [41911 41978])
            (".PHONY" function (:arguments ("libSound")) nil [41978 41995])
            ("libSound" function (:arguments ("$(call LIBRARYNAME,libSound)")) nil [41995 42034])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Sound")) nil [42074 42127])
            ("VIDEO_HEADERS" variable (:default-value ("Video/Config.h" "Video/VideoDataFormat.h" "Video/FrameBuffer.h" "Video/ImageExtractor.h" "Video/VideoDevice.h" "Video/Colorspaces.h" "Video/ImageExtractorRGB8.h" "Video/ImageExtractorY8.h" "Video/ImageExtractorY10B.h" "Video/ImageExtractorYUYV.h" "Video/ImageExtractorUYVY.h" "Video/ImageExtractorYV12.h" "Video/BayerPattern.h" "Video/ImageExtractorBA81.h" "Video/YpCbCr420Texture.h" "Video/VideoPane.h")) nil [43033 43692])
            ("VIDEO_SOURCES" variable (:default-value ("Video/VideoDataFormat.cpp" "Video/VideoDevice.cpp" "Video/ImageExtractorRGB8.cpp" "Video/ImageExtractorY8.cpp" "Video/ImageExtractorY10B.cpp" "Video/ImageExtractorYUYV.cpp" "Video/ImageExtractorUYVY.cpp" "Video/ImageExtractorYV12.cpp" "Video/ImageExtractorBA81.cpp" "Video/YpCbCr420Texture.cpp" "Video/VideoPane.cpp")) nil [44499 44991])
            ("$(VIDEO_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [45699 45756])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("PACKAGES" "+=" "$(MYVIDEO_DEPENDS)")) nil [45757 45818])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVIDEO_INCLUDE)")) nil [45818 45889])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("|" "$(call DEPENDENCIES,MYVIDEO)")) nil [45889 45950])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("$(VIDEO_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [45950 46017])
            (".PHONY" function (:arguments ("libVideo")) nil [46017 46034])
            ("libVideo" function (:arguments ("$(call LIBRARYNAME,libVideo)")) nil [46034 46073])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Video")) nil [46120 46177])
            ("ALSUPPORT_HEADERS" variable (:default-value ("$(wildcard AL/*.h)" "$(wildcard AL/*.icpp)")) nil [46593 46676])
            ("ALSUPPORT_SOURCES" variable (:default-value ("$(wildcard AL/*.cpp)" "$(wildcard AL/Internal/*.cpp)")) nil [46677 46770])
            ("$(ALSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [46771 46832])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("PACKAGES" "+=" "$(MYALSUPPORT_DEPENDS)")) nil [46833 46902])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYALSUPPORT_INCLUDE)")) nil [46902 46981])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("|" "$(call DEPENDENCIES,MYALSUPPORT)")) nil [46981 47050])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("$(ALSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [47050 47125])
            (".PHONY" function (:arguments ("libALSupport")) nil [47125 47146])
            ("libALSupport" function (:arguments ("$(call LIBRARYNAME,libALSupport)")) nil [47146 47193])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-ALSupport")) nil [47248 47772])
            ("SCENEGRAPH_HEADERS" variable (:default-value ("$(wildcard SceneGraph/*.h)" "$(wildcard SceneGraph/*.icpp)")) nil [47773 47874])
            ("SCENEGRAPH_SOURCES" variable (:default-value ("$(wildcard SceneGraph/*.cpp)" "$(wildcard SceneGraph/Internal/*.cpp)")) nil [47875 47986])
            ("$(SCENEGRAPH_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [47987 48049])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("PACKAGES" "+=" "$(MYSCENEGRAPH_DEPENDS)")) nil [48050 48121])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYSCENEGRAPH_INCLUDE)")) nil [48121 48202])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("|" "$(call DEPENDENCIES,MYSCENEGRAPH)")) nil [48202 48273])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("$(SCENEGRAPH_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [48273 48350])
            (".PHONY" function (:arguments ("libSceneGraph")) nil [48350 48372])
            ("libSceneGraph" function (:arguments ("$(call LIBRARYNAME,libSceneGraph)")) nil [48372 48421])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-SceneGraph")) nil [48484 48541])
            ("VRUI_HEADERS" variable (:default-value ("$(wildcard Vrui/*.h)" "$(wildcard Vrui/*.icpp)")) nil [51527 51604])
            ("VRUI_IGNORE_SOURCES" variable (:default-value ("Vrui/Internal/InputDeviceDock.cpp" "Vrui/Internal/TheoraMovieSaver.cpp" "Vrui/Internal/KinectRecorder.cpp" "Vrui/Internal/KinectPlayback.cpp" "Vrui/Internal/Linux/ScreenSaverInhibitorDBus.cpp")) nil [51709 52011])
            ("VRUI_SOURCES" variable (:default-value ("$(filter-out $(VRUI_IGNORE_SOURCES),$(wildcard Vrui/*.cpp) \\
                                                   $(wildcard Vrui/Internal/*.cpp) \\
                                                   $(wildcard Vrui/Internal/$(OSSPECFILEINSERT)/*.cpp))")) nil [52012 52277])
            ("$(VRUI_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [52475 52531])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DVRUI_INTERNAL_CONFIG_TOOLDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(VRTOOLSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [52575 52722])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DVRUI_INTERNAL_CONFIG_VISLETDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(VRVISLETSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [52722 52875])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DVRUI_INTERNAL_CONFIG_LIBDIR='\"$(LIBINSTALLDIR)\"'" "-DVRUI_INTERNAL_CONFIG_EXECUTABLEDIR='\"$(EXECUTABLEINSTALLDIR)\"'" "-DVRUI_INTERNAL_CONFIG_PLUGINDIR='\"$(PLUGININSTALLDIR)\"'")) nil [52875 53208])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("PACKAGES" "+=" "$(MYVRUI_DEPENDS)")) nil [53209 53268])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [53268 53337])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("|" "$(call DEPENDENCIES,MYVRUI)")) nil [53337 53396])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("$(VRUI_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [53396 53461])
            (".PHONY" function (:arguments ("libVrui")) nil [53461 53477])
            ("libVrui" function (:arguments ("$(call LIBRARYNAME,libVrui)")) nil [53477 53514])
            ("$(VRTOOLSDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [53605 53661])
            ("$(VRTOOLSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [53661 53724])
            ("$(VRTOOLSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [53724 53783])
            ("$(VRTOOLSDIR)" function (:arguments ("$(OBJDIR)/Vrui/Tools/%.o")) nil [54246 54333])
            ("$(VRTOOLS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [54533 54592])
            (".SECONDARY" function (:arguments ("$(VRTOOLS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [54642 54693])
            (".PHONY" function (:arguments ("VRTools")) nil [54694 54710])
            ("VRTools" function (:arguments ("$(VRTOOLS)")) nil [54710 54730])
            ("$(VRVISLETSDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [54819 54877])
            ("$(VRVISLETSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [54877 54942])
            ("$(VRVISLETSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [54942 55003])
            ("$(VRVISLETSDIR)" function (:arguments ("$(OBJDIR)/Vrui/Vislets/%.o")) nil [55478 55571])
            ("$(VRVISLETSDIR)" function (:arguments ("PACKAGES" "+=" "MYSCENEGRAPH")) nil [55808 55887])
            ("$(VRVISLETSDIR)" function (:arguments ("PACKAGES" "+=" "MYRAWHID")) nil [55887 55959])
            ("$(VRVISLETS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [55960 56021])
            (".SECONDARY" function (:arguments ("$(VRVISLETS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [56070 56123])
            (".PHONY" function (:arguments ("VRVislets")) nil [56124 56142])
            ("VRVislets" function (:arguments ("$(VRVISLETS)")) nil [56142 56166])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Vrui")) nil [56203 56264])
            ("VRDEVICEDAEMON_SOURCES" variable (:default-value ("VRDeviceDaemon/VRDevice.cpp" "VRDeviceDaemon/VRCalibrator.cpp" "VRDeviceDaemon/VRDeviceManager.cpp" "Vrui/Internal/VRDeviceDescriptor.cpp" "Vrui/Internal/HMDConfiguration.cpp" "Vrui/Internal/VRDevicePipe.cpp" "VRDeviceDaemon/VRDeviceServer.cpp" "VRDeviceDaemon/VRDeviceDaemon.cpp")) nil [58638 59118])
            ("$(VRDEVICEDAEMON_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [59119 59185])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYIO" "MYTHREADS" "MYMISC" "DL")) nil [59186 59267])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [59267 59333])
            ("$(EXEDIR)" function (:arguments ("CFLAGS" "+=" "-DVERBOSE")) nil [59333 59379])
            ("$(EXEDIR)" function (:arguments ("LINKFLAGS" "+=" "$(PLUGINHOSTLINKFLAGS)")) nil [59379 59441])
            ("$(EXEDIR)" function (:arguments ("$(VRDEVICEDAEMON_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [59441 59513])
            (".PHONY" function (:arguments ("VRDeviceDaemon")) nil [59513 59536])
            ("VRDeviceDaemon" function (:arguments ("$(EXEDIR)/VRDeviceDaemon")) nil [59536 59577])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/VRPNConnection.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/VRPNClient.o")) nil [59779 59977])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(BLUETOOTH_LIBDIR)" "$(BLUETOOTH_LIBS)")) nil [59978 60090])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/Wiimote.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/WiimoteTracker.o")) nil [60090 60293])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYUSB")) nil [60294 60366])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(MYUSB_LIBDIR)" "$(MYUSB_LIBS)")) nil [60366 60472])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/RazerHydra.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/RazerHydraDevice.o")) nil [60657 60869])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYUSB")) nil [60870 60936])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(MYUSB_LIBDIR)" "$(MYUSB_LIBS)")) nil [60936 61036])
            ("$(VRDEVICESDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-I$(OPENVR_BASEDIR)/headers")) nil [61216 61314])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYTHREADS" "MYMISC")) nil [61353 61439])
            ("$(VRDEVICESDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [61439 61518])
            ("$(VRDEVICESDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)" "-DVERBOSE")) nil [61518 61593])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [61593 61654])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/%.o")) nil [61654 61759])
            ("$(VRDEVICES_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [61959 62020])
            ("$(OBJDIR)" function (:arguments ("|" "$(DEPDIR)/config")) nil [62020 62185])
            ("$(OBJDIR)" function (:arguments ("|" "$(DEPDIR)/config")) nil [62020 62185])
            (".SECONDARY" function (:arguments ("$(VRDEVICES_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [62244 62297])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYTHREADS" "MYMISC")) nil [62379 62469])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [62469 62552])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [62552 62621])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [62621 62686])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRCalibrators/%.o")) nil [62686 62803])
            ("$(VRCALIBRATORS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [63003 63068])
            (".SECONDARY" function (:arguments ("$(VRCALIBRATORS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [63124 63181])
            (".PHONY" function (:arguments ("VRCalibrators")) nil [63182 63204])
            ("VRCalibrators" function (:arguments ("$(VRCALIBRATORS)")) nil [63204 63236])
            ("$(EXEDIR)" function nil nil [63327 64087])
            ("UTILITIES_SOURCES" variable (:default-value ("$(wildcard Vrui/Utilities/*.cpp)" "$(wildcard Calibration/*.cpp)")) nil [64133 64241])
            ("$(UTILITIES_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [64241 64302])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [64346 64387])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/DeviceTest.o")) nil [64387 64447])
            (".PHONY" function (:arguments ("DeviceTest")) nil [64447 64466])
            ("DeviceTest" function (:arguments ("$(EXEDIR)/DeviceTest")) nil [64466 64499])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [64500 64543])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/TrackingTest.o")) nil [64543 64607])
            (".PHONY" function (:arguments ("TrackingTest")) nil [64607 64628])
            ("TrackingTest" function (:arguments ("$(EXEDIR)/TrackingTest")) nil [64628 64665])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [64709 64749])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/RoomSetup.o")) nil [64749 64807])
            (".PHONY" function (:arguments ("RoomSetup")) nil [64807 64825])
            ("RoomSetup" function (:arguments ("$(EXEDIR)/RoomSetup")) nil [64825 64856])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [64898 64942])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/EyeCalibrator.o")) nil [64942 65008])
            (".PHONY" function (:arguments ("EyeCalibrator")) nil [65008 65030])
            ("EyeCalibrator" function (:arguments ("$(EXEDIR)/EyeCalibrator")) nil [65030 65069])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [65118 65173])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/PrintInputDeviceDataFile.o")) nil [65173 65261])
            (".PHONY" function (:arguments ("PrintInputDeviceDataFile")) nil [65261 65294])
            ("PrintInputDeviceDataFile" function (:arguments ("$(EXEDIR)/PrintInputDeviceDataFile")) nil [65294 65355])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "X11")) nil [65398 65437])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [65437 65496])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/XBackground.o")) nil [65496 65555])
            (".PHONY" function (:arguments ("XBackground")) nil [65555 65575])
            ("XBackground" function (:arguments ("$(EXEDIR)/XBackground")) nil [65575 65610])
            ("MEASUREENVIRONMENT_SOURCES" variable (:default-value ("Calibration/TotalStation.cpp" "Calibration/NaturalPointClient.cpp" "Calibration/MeasureEnvironment.cpp")) nil [65643 65833])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [65834 65883])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [65883 65949])
            ("$(EXEDIR)" function (:arguments ("$(MEASUREENVIRONMENT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [65949 66029])
            (".PHONY" function (:arguments ("MeasureEnvironment")) nil [66029 66056])
            ("MeasureEnvironment" function (:arguments ("$(EXEDIR)/MeasureEnvironment")) nil [66056 66105])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [66156 66203])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [66203 66267])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/OGTransformCalculator.o" "$(OBJDIR)/Calibration/ScreenCalibrator.o")) nil [66267 66412])
            (".PHONY" function (:arguments ("ScreenCalibrator")) nil [66412 66437])
            ("ScreenCalibrator" function (:arguments ("$(EXEDIR)/ScreenCalibrator")) nil [66437 66482])
            ("ALIGNTRACKINGMARKERS_SOURCES" variable (:default-value ("Calibration/ReadOptiTrackMarkerFile.cpp" "Calibration/NaturalPointClient.cpp" "Calibration/AlignTrackingMarkers.cpp")) nil [66532 66741])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [66742 66793])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [66793 66861])
            ("$(EXEDIR)" function (:arguments ("$(ALIGNTRACKINGMARKERS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [66861 66945])
            (".PHONY" function (:arguments ("AlignTrackingMarkers")) nil [66945 66974])
            ("AlignTrackingMarkers" function (:arguments ("$(EXEDIR)/AlignTrackingMarkers")) nil [66974 67027])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [67071 67120])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [67120 67186])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/SampleTrackerField.o")) nil [67186 67259])
            (".PHONY" function (:arguments ("SampleTrackerField")) nil [67259 67286])
            ("SampleTrackerField" function (:arguments ("$(EXEDIR)/SampleTrackerField")) nil [67286 67335])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI" "MYUSB")) nil [67379 67432])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [67432 67496])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/OculusCalibrator.o")) nil [67496 67565])
            (".PHONY" function (:arguments ("OculusCalibrator")) nil [67565 67590])
            ("OculusCalibrator" function (:arguments ("$(EXEDIR)/OculusCalibrator")) nil [67590 67635])
            ("$(DEPDIR)" function (:arguments ("$(MAKEFILEFRAGMENT)" "$(MAKECONFIGFILE)" "$(PKGCONFIGFILE)" "$(TEMPLATEMAKEFILE)" "ExamplePrograms/makefile" "ExamplePrograms/MeshEditor/makefile" "ExamplePrograms/VRMLViewer/makefile")) nil [67895 68334])
            ("SYSTEMPACKAGES" variable (:default-value ("$(sort $(patsubst MY%,,$(PACKAGES_RECEXPAND)))")) nil [68335 68399])
            ("VRUIAPP_INCLUDEDIRS" variable (:default-value ("-I$$(VRUI_INCLUDEDIR)")) nil [68399 68443])
            ("VRUIAPP_INCLUDEDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_INCLUDE)))")) nil [68443 68541])
            ("VRUIAPP_CFLAGS" variable (:default-value ("$(CSYSFLAGS)")) nil [68541 68571])
            ("VRUIAPP_CFLAGS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(PACKAGES_RECEXPAND),$($(PACKAGENAME)_CFLAGS)))")) nil [68571 68667])
            ("VRUIAPP_LDIRS" variable (:default-value ("-L$$(VRUI_LIBDIR)")) nil [68667 68701])
            ("VRUIAPP_LDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_LIBDIR)))")) nil [68701 68792])
            ("VRUIAPP_LIBS" variable (:default-value ("$(patsubst lib%,-l%.$(LDEXT),$(LIBRARY_NAMES))")) nil [68792 68854])
            ("VRUIAPP_LIBS" variable (:default-value ("$(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_LIBS))")) nil [68854 68934])
            ("VRUIAPP_LFLAGS" variable nil nil [68934 68951])
            ("$(MAKEFILEFRAGMENT)" function (:arguments ("PACKAGES" "=" "MYVRUI")) nil [69149 69188])
            ("$(MAKEFILEFRAGMENT)" function (:arguments ("$(DEPDIR)/Configure-End")) nil [69188 70292])
            ("$(MAKECONFIGFILE)" function (:arguments ("$(DEPDIR)/Configure-End")) nil [70466 73397])
            ("ROGUE_SYSTEMPACKAGES" variable (:default-value ("$(filter %_,$(foreach PACKAGENAME,$(SYSTEMPACKAGES),$(PACKAGENAME)_$($(PACKAGENAME)_PKGNAME)))")) nil [73398 73516])
            ("ROGUE_INCLUDEDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)INCLUDE)))")) nil [73516 73616])
            ("ROGUE_LIBDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)LIBDIR)))")) nil [73616 73711])
            ("ROGUE_LIBS" variable (:default-value ("$(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)LIBS))")) nil [73711 73793])
            ("$(PKGCONFIGFILE)" function (:arguments ("PACKAGES" "=" "MYVRUI")) nil [73851 73887])
            ("$(PKGCONFIGFILE)" function (:arguments ("$(DEPDIR)/Configure-End")) nil [73887 74527])
            ("$(TEMPLATEMAKEFILE)" function (:arguments ("$(DEPDIR)/Configure-End")) nil [75191 75581])
            ("ExamplePrograms/makefile" function (:arguments ("$(DEPDIR)/Configure-End")) nil [75640 76085])
            ("ExamplePrograms/MeshEditor/makefile" function (:arguments ("$(DEPDIR)/Configure-End")) nil [76155 76711])
            ("ExamplePrograms/VRMLViewer/makefile" function (:arguments ("$(DEPDIR)/Configure-End")) nil [76781 77338])
            ("install" function nil nil [77338 77347])
            ("installudevrules" function nil nil [83795 83813])
            ("uninstall" function nil nil [84007 84018])
            ("uninstalludevrules" function nil nil [88754 88774]))          
      :file "makefile"
      :pointmax 88914
      :fsize 88913
      :lastmodtime '(22557 1128 423367 689000)
      :unmatched-syntax nil))
  :file "!home!nshetty!apps!vrui!Vrui!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
