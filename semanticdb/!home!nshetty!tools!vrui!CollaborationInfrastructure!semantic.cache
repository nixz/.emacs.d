;; Object CollaborationInfrastructure/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "CollaborationInfrastructure/"
  :tables
  (list
    (semanticdb-table "makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("VRUI_MAKEDIR" variable (:default-value ("$(HOME)/Vrui-3.1/share/make")) nil [1276 1320])
            ("COLLABORATIONPLUGINSDIREXT" variable (:default-value ("CollaborationPlugins")) nil [1456 1506])
            ("PACKAGEROOT" variable (:default-value ("$(shell pwd)")) nil [1862 1890])
            ("COLLABORATION_VERSION" variable (:default-value ("2006")) nil [1945 1974])
            ("MAJORLIBVERSION" variable (:default-value ("2")) nil [1974 1994])
            ("MINORLIBVERSION" variable (:default-value ("6")) nil [1994 2014])
            ("COLLABORATION_NAME" variable (:default-value ("Collaboration-$(MAJORLIBVERSION).$(MINORLIBVERSION)")) nil [2014 2088])
            ("$(VRUI_MAKEDIR)/SystemDefinitions" include nil nil [2169 2211])
            ("$(VRUI_MAKEDIR)/Packages.System" include nil nil [2211 2251])
            ("$(VRUI_MAKEDIR)/Configuration.Vrui" include nil nil [2251 2294])
            ("$(VRUI_MAKEDIR)/Packages.Vrui" include nil nil [2294 2332])
            ("$(PACKAGEROOT)/BuildRoot/Packages.Collaboration" include nil nil [2332 2388])
            ("EXTRACINCLUDEFLAGS" variable (:default-value ("-I$(PACKAGEROOT)")) nil [2449 2488])
            ("EXTRALINKDIRFLAGS" variable (:default-value ("-L$(PACKAGEROOT)/$(MYLIBEXT)")) nil [2488 2538])
            ("LIBDESTDIR" variable (:default-value ("$(PACKAGEROOT)/$(MYLIBEXT)")) nil [2594 2635])
            ("VISLETDESTDIR" variable (:default-value ("$(LIBDESTDIR)/Vislets")) nil [2635 2674])
            ("PLUGINDESTDIR" variable (:default-value ("$(LIBDESTDIR)/Plugins")) nil [2674 2713])
            ("VISLETNAME" variable (:default-value ("$(VISLETDESTDIR)/lib$(1).$(PLUGINFILEEXT)")) nil [3145 3200])
            ("PLUGINNAME" variable (:default-value ("$(PLUGINDESTDIR)/lib$(1).$(PLUGINFILEEXT)")) nil [3200 3255])
            ("PACKAGES" variable nil nil [3516 3528])
            ("LIBRARIES" variable nil nil [3704 3717])
            ("PLUGINS" variable nil nil [3717 3728])
            ("VISLETS" variable nil nil [3728 3739])
            ("EXECUTABLES" variable nil nil [3739 3754])
            ("LIBRARY_NAMES" variable (:default-value ("libCollaborationServer" "libCollaborationClient")) nil [3801 3881])
            ("LIBRARIES" variable (:default-value ("$(LIBRARY_NAMES:%=$(call LIBRARYNAME,%))")) nil [3882 3936])
            ("SERVERPLUGIN_NAMES" variable (:default-value ("FooServer" "CheriaServer" "GrapheinServer" "AgoraServer")) nil [3966 4106])
            ("SERVERPLUGINS" variable (:default-value ("$(SERVERPLUGIN_NAMES:%=$(call PLUGINNAME,%))")) nil [4107 4168])
            ("PLUGINS" variable (:default-value ("$(SERVERPLUGINS)")) nil [4169 4197])
            ("CLIENTPLUGIN_NAMES" variable (:default-value ("FooClient" "CheriaClient" "GrapheinClient" "AgoraClient")) nil [4198 4338])
            ("CLIENTPLUGINS" variable (:default-value ("$(CLIENTPLUGIN_NAMES:%=$(call PLUGINNAME,%))")) nil [4339 4400])
            ("PLUGINS" variable (:default-value ("$(CLIENTPLUGINS)")) nil [4401 4429])
            ("VISLET_NAMES" variable (:default-value ("CollaborationClient")) nil [4457 4492])
            ("VISLETS" variable (:default-value ("$(VISLET_NAMES:%=$(call VISLETNAME,%))")) nil [4493 4543])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/CollaborationServer")) nil [4590 4635])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/CollaborationClientTest")) nil [4682 4731])
            ("MAKECONFIGFILE" variable (:default-value ("share/Configuration.Collaboration")) nil [4779 4830])
            ("ALL" variable (:default-value ("$(LIBRARIES)" "$(EXECUTABLES)" "$(PLUGINS)" "$(VISLETS)" "$(MAKECONFIGFILE)")) nil [4831 4905])
            (".PHONY" function (:arguments ("all")) nil [4906 4918])
            ("all" function (:arguments ("config" "$(ALL)")) nil [4918 4937])
            ("$(EXEDIR)" function (:arguments ("$(call LIBRARYNAME,libCollaborationServer)")) nil [5007 5098])
            ("$(SERVERPLUGINS)" function (:arguments ("$(call LIBRARYNAME,libCollaborationServer)")) nil [5007 5098])
            ("$(VISLETS)" function (:arguments ("$(call LIBRARYNAME,libCollaborationClient)")) nil [5168 5274])
            ("$(CLIENTPLUGINS)" function (:arguments ("$(call LIBRARYNAME,libCollaborationClient)")) nil [5168 5274])
            (".PHONY" function (:arguments ("config")) nil [5469 5484])
            ("config" function (:arguments ("Configure-End")) nil [5484 5506])
            (".PHONY" function (:arguments ("Configure-Begin")) nil [5507 5531])
            ("Configure-Begin" function nil nil [5531 5835])
            (".PHONY" function (:arguments ("Configure-End")) nil [6266 6288])
            ("Configure-End" function (:arguments ("Configure-Begin")) nil [6288 6319])
            ("Configure-End" function nil nil [6319 6352])
            ("$(wildcard *.cpp Collaboration/*.cpp)" function (:arguments ("config")) nil [6353 6399])
            (".PHONY" function (:arguments ("extraclean")) nil [6605 6624])
            ("extraclean" function nil nil [6624 6852])
            (".PHONY" function (:arguments ("extrasqueakyclean")) nil [6853 6879])
            ("extrasqueakyclean" function nil nil [6879 6947])
            ("$(VRUI_MAKEDIR)/BasicMakefile" include nil nil [6973 7011])
            ("LIBCOLLABORATION_HEADERS" variable (:default-value ("Collaboration/Protocol.h" "Collaboration/ProtocolServer.h" "Collaboration/ProtocolClient.h" "Collaboration/CollaborationProtocol.h" "Collaboration/CollaborationServer.h" "Collaboration/CollaborationClient.h")) nil [7254 7623])
            ("LIBCOLLABORATIONSERVER_SOURCES" variable (:default-value ("Collaboration/CollaborationProtocol.cpp" "Collaboration/ProtocolServer.cpp" "Collaboration/CollaborationServer.cpp")) nil [7684 7898])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_PLUGINDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(COLLABORATIONPLUGINSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [7899 8071])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_CONFIGFILENAME='\"$(ETCINSTALLDIR)/Collaboration.cfg\"'")) nil [8071 8198])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("PACKAGES" "+=" "$(MYCOLLABORATIONSERVER_DEPENDS)")) nil [8199 8288])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCOLLABORATIONSERVER_INCLUDE)")) nil [8288 8387])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("CFLAGS" "+=" "$(MYCOLLABORATIONSERVER_CFLAGS)")) nil [8387 8473])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("$(LIBCOLLABORATIONSERVER_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [8473 8571])
            (".PHONY" function (:arguments ("libCollaborationServer")) nil [8571 8602])
            ("libCollaborationServer" function (:arguments ("$(call LIBRARYNAME,libCollaborationServer)")) nil [8602 8669])
            ("LIBCOLLABORATIONCLIENT_SOURCES" variable (:default-value ("Collaboration/CollaborationProtocol.cpp" "Collaboration/ProtocolClient.cpp" "Collaboration/CollaborationClient.cpp")) nil [8730 8944])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_PLUGINDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(COLLABORATIONPLUGINSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [8945 9117])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_CONFIGFILENAME='\"$(ETCINSTALLDIR)/Collaboration.cfg\"'")) nil [9117 9244])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("PACKAGES" "+=" "$(MYCOLLABORATIONCLIENT_DEPENDS)")) nil [9245 9334])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCOLLABORATIONCLIENT_INCLUDE)")) nil [9334 9433])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("CFLAGS" "+=" "$(MYCOLLABORATIONCLIENT_CFLAGS)")) nil [9433 9519])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("$(LIBCOLLABORATIONCLIENT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [9519 9617])
            (".PHONY" function (:arguments ("libCollaborationClient")) nil [9617 9648])
            ("libCollaborationClient" function (:arguments ("$(call LIBRARYNAME,libCollaborationClient)")) nil [9648 9715])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONSERVER" "MYMISC")) nil [9762 9834])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/CollaborationServerMain.o")) nil [9834 9901])
            (".PHONY" function (:arguments ("CollaborationServer")) nil [9901 9929])
            ("CollaborationServer" function (:arguments ("$(EXEDIR)/CollaborationServer")) nil [9929 9980])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONCLIENT" "MYVRUI" "MYGLMOTIF" "MYMISC")) nil [10027 10120])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/CollaborationClientTest.o")) nil [10120 10191])
            (".PHONY" function (:arguments ("CollaborationClientTest")) nil [10191 10223])
            ("CollaborationClientTest" function (:arguments ("$(EXEDIR)/CollaborationClientTest")) nil [10223 10282])
            ("$(call PLUGINNAME,%)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [10374 10422])
            ("$(call PLUGINNAME,%)" function (:arguments ("$(OBJDIR)/Collaboration/%.o")) nil [10422 10500])
            ("$(SERVERPLUGIN_NAMES:%=$(call PLUGINNAME,%))" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONSERVER")) nil [10758 10838])
            ("$(CLIENTPLUGIN_NAMES:%=$(call PLUGINNAME,%))" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONCLIENT")) nil [10838 10918])
            ("$(call PLUGINNAME,CheriaServer)" function (:arguments ("$(OBJDIR)/Collaboration/CheriaProtocol.o" "$(OBJDIR)/Collaboration/CheriaServer.o")) nil [10919 11067])
            ("$(call PLUGINNAME,CheriaClient)" function (:arguments ("$(OBJDIR)/Collaboration/CheriaProtocol.o" "$(OBJDIR)/Collaboration/CheriaClient.o")) nil [11068 11216])
            ("$(call PLUGINNAME,GrapheinServer)" function (:arguments ("PACKAGES" "+=" "MYGLWRAPPERS")) nil [11217 11277])
            ("$(call PLUGINNAME,GrapheinServer)" function (:arguments ("$(OBJDIR)/Collaboration/GrapheinProtocol.o" "$(OBJDIR)/Collaboration/GrapheinServer.o")) nil [11277 11433])
            ("$(call PLUGINNAME,GrapheinClient)" function (:arguments ("$(OBJDIR)/Collaboration/GrapheinProtocol.o" "$(OBJDIR)/Collaboration/GrapheinClient.o")) nil [11434 11590])
            ("$(call PLUGINNAME,AgoraServer)" function (:arguments ("$(OBJDIR)/Collaboration/AgoraProtocol.o" "$(OBJDIR)/Collaboration/AgoraServer.o")) nil [11591 11735])
            ("$(call PLUGINNAME,AgoraClient)" function (:arguments ("PACKAGES" "+=" "MYALSUPPORT" "MYVIDEO" "MYSOUND")) nil [11736 11808])
            (".SECONDARY" function (:arguments ("$(SERVERPLUGIN_NAMES:%=$(OBJDIR)/Collaboration/%.o)")) nil [12406 12470])
            (".SECONDARY" function (:arguments ("$(CLIENTPLUGIN_NAMES:%=$(OBJDIR)/Collaboration/%.o)")) nil [12470 12534])
            ("$(call VISLETNAME,%)" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONCLIENT")) nil [12621 12677])
            ("$(call VISLETNAME,%)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [12677 12725])
            ("$(call VISLETNAME,%)" function (:arguments ("$(OBJDIR)/%Vislet.o")) nil [12725 12795])
            ("$(call VISLETNAME,CollaborationClient)" function (:arguments ("$(OBJDIR)/CollaborationClientVislet.o")) nil [13015 13093])
            (".SECONDARY" function (:arguments ("$(VISLET_NAMES:%=$(OBJDIR)/%Vislet.o)")) nil [13149 13199])
            ("$(MAKECONFIGFILE)" function (:arguments ("config")) nil [13535 14200])
            ("install" function (:arguments ("all")) nil [14631 14644])
            ("uninstall" function nil nil [16203 16969]))          
      :file "makefile"
      :pointmax 16969
      :fsize 16968
      :lastmodtime '(21726 28881 466163 677000)
      :unmatched-syntax nil))
  :file "!home!nshetty!tools!vrui!CollaborationInfrastructure!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
