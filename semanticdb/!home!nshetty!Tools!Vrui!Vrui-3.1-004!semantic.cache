;; Object Vrui-3.1-004/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Vrui-3.1-004/"
  :tables
  (list
    (semanticdb-table "makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("INSTALLDIR" variable (:default-value ("$(HOME)/Tools/Vrui/Vrui-3.1-004-install")) nil [1575 1629])
            ("VRUI_PACKAGEROOT" variable (:default-value ("$(shell pwd)")) nil [1898 1931])
            ("VRUI_MAKEDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/BuildRoot")) nil [1931 1977])
            ("$(VRUI_MAKEDIR)/SystemDefinitions" include nil nil [2060 2102])
            ("$(VRUI_MAKEDIR)/Packages.System" include nil nil [2102 2142])
            ("$(VRUI_MAKEDIR)/Packages.Vrui" include nil nil [3908 3946])
            ("USE_RPATH" variable (:default-value ("1")) nil [4629 4643])
            ("GLSUPPORT_USE_TLS" variable (:default-value ("0")) nil [5306 5328])
            ("VRUI_VRWINDOW_USE_SWAPGROUPS" variable (:default-value ("0")) nil [5669 5702])
            ("VRDEVICES_USE_INPUT_ABSTRACTION" variable (:default-value ("0")) nil [5893 5929])
            ("VRDEVICES_INPUT_H_HAS_STRUCTS" variable (:default-value ("1")) nil [6164 6198])
            ("VRDEVICES_USE_BLUETOOTH" variable (:default-value ("$(SYSTEM_HAVE_BLUETOOTH)")) nil [6621 6672])
            ("VRUI_VERSION" variable (:default-value ("3001004")) nil [6922 6945])
            ("MAJORLIBVERSION" variable (:default-value ("3")) nil [6945 6965])
            ("MINORLIBVERSION" variable (:default-value ("1")) nil [6965 6985])
            ("VRUI_NAME" variable (:default-value ("Vrui-$(MAJORLIBVERSION).$(MINORLIBVERSION)")) nil [6985 7041])
            ("LIBDESTDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/$(MYLIBEXT)")) nil [7170 7216])
            ("VRUI_INCLUDEDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)")) nil [7277 7315])
            ("VRUI_LIBDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/$(MYLIBEXT)")) nil [7315 7361])
            ("PLUGININSTALLDIR" variable (:default-value ("$(LIBINSTALLDIR)")) nil [8679 8715])
            ("PACKAGES" variable nil nil [9509 9521])
            ("LIBRARIES" variable nil nil [9697 9710])
            ("PLUGINS" variable nil nil [9710 9721])
            ("EXECUTABLES" variable nil nil [9721 9736])
            ("LIBRARY_NAMES" variable (:default-value ("libMisc" "libThreads")) nil [9765 9824])
            ("LIBRARY_NAMES" variable (:default-value ("libIO" "libPlugins" "libRealtime" "libComm" "libCluster" "libMath" "libGeometry" "libGLWrappers" "libGLSupport" "libGLXSupport" "libGLGeometry" "libImages" "libGLMotif" "libSound" "libVideo" "libALSupport" "libSceneGraph" "libVrui")) nil [9889 10462])
            ("LIBRARIES" variable (:default-value ("$(LIBRARY_NAMES:%=$(call LIBRARYNAME,%))")) nil [10463 10517])
            ("VRTOOLS_SOURCES" variable (:default-value ("$(wildcard Vrui/Tools/*.cpp)")) nil [10561 10608])
            ("VRTOOLSDIREXT" variable (:default-value ("VRTools")) nil [10609 10633])
            ("VRTOOLSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRTOOLSDIREXT)")) nil [10633 10676])
            ("VRTOOLS" variable (:default-value ("$(VRTOOLS_SOURCES:Vrui/Tools/%.cpp=$(VRTOOLSDIR)/lib%.$(PLUGINFILEEXT))")) nil [10676 10758])
            ("PLUGINS" variable (:default-value ("$(VRTOOLS)")) nil [10758 10780])
            ("VRVISLETS_SOURCES" variable (:default-value ("$(wildcard Vrui/Vislets/*.cpp)")) nil [10823 10874])
            ("VRVISLETSDIREXT" variable (:default-value ("VRVislets")) nil [10875 10903])
            ("VRVISLETSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRVISLETSDIREXT)")) nil [10903 10951])
            ("VRVISLETS" variable (:default-value ("$(VRVISLETS_SOURCES:Vrui/Vislets/%.cpp=$(VRVISLETSDIR)/lib%.$(PLUGINFILEEXT))")) nil [10951 11041])
            ("PLUGINS" variable (:default-value ("$(VRVISLETS)")) nil [11041 11065])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/VRDeviceDaemon")) nil [11102 11142])
            ("VRDEVICES_IGNORE_SOURCES" variable (:default-value ("VRDeviceDaemon/VRDevices/Joystick.cpp" "VRDeviceDaemon/VRDevices/VRPNConnection.cpp" "VRDeviceDaemon/VRDevices/Wiimote.cpp" "VRDeviceDaemon/VRDevices/WiimoteTracker.cpp" "VRDeviceDaemon/VRDevices/RazerHydra.cpp" "VRDeviceDaemon/VRDevices/RazerHydraDevice.cpp" "VRDeviceDaemon/VRDevices/OculusRift.cpp")) nil [11255 11745])
            ("VRDEVICES_SOURCES" variable (:default-value ("$(filter-out $(VRDEVICES_IGNORE_SOURCES),$(wildcard VRDeviceDaemon/VRDevices/*.cpp))")) nil [11746 11851])
            ("VRDEVICESDIREXT" variable (:default-value ("VRDevices")) nil [12247 12275])
            ("VRDEVICESDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRDEVICESDIREXT)")) nil [12275 12323])
            ("VRDEVICES" variable (:default-value ("$(VRDEVICES_SOURCES:VRDeviceDaemon/VRDevices/%.cpp=$(VRDEVICESDIR)/lib%.$(PLUGINFILEEXT))")) nil [12323 12425])
            ("PLUGINS" variable (:default-value ("$(VRDEVICES)")) nil [12425 12449])
            ("VRCALIBRATORS_SOURCES" variable (:default-value ("$(wildcard VRDeviceDaemon/VRCalibrators/*.cpp)")) nil [12493 12564])
            ("VRCALIBRATORSDIREXT" variable (:default-value ("VRCalibrators")) nil [12565 12601])
            ("VRCALIBRATORSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRCALIBRATORSDIREXT)")) nil [12601 12657])
            ("VRCALIBRATORS" variable (:default-value ("$(VRCALIBRATORS_SOURCES:VRDeviceDaemon/VRCalibrators/%.cpp=$(VRCALIBRATORSDIR)/lib%.$(PLUGINFILEEXT))")) nil [12657 12775])
            ("PLUGINS" variable (:default-value ("$(VRCALIBRATORS)")) nil [12775 12803])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/DeviceTest")) nil [12848 12884])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/EyeCalibrator")) nil [12926 12965])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/PrintInputDeviceDataFile")) nil [13017 13067])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/XBackground" "$(EXEDIR)/MeasureEnvironment" "$(EXEDIR)/ScreenCalibrator" "$(EXEDIR)/AlignTrackingMarkers")) nil [13107 13282])
            ("MAKECONFIGFILE" variable (:default-value ("BuildRoot/Configuration.Vrui")) nil [13572 13618])
            ("PKGCONFIGFILE" variable (:default-value ("Share/Vrui.pc")) nil [13668 13698])
            ("ALL" variable (:default-value ("$(LIBRARIES)" "$(EXECUTABLES)" "$(PLUGINS)" "$(MAKEFILEFRAGMENT)" "$(MAKECONFIGFILE)" "$(PKGCONFIGFILE)")) nil [13761 13861])
            (".PHONY" function (:arguments ("all")) nil [13862 13874])
            ("all" function (:arguments ("config" "$(ALL)")) nil [13874 13893])
            ("$(PLUGINS)" function (:arguments ("|" "$(LIBRARIES)")) nil [13952 13979])
            ("$(EXECUTABLES)" function (:arguments ("|" "$(LIBRARIES)")) nil [13979 14010])
            (".PHONY" function (:arguments ("config")) nil [14229 14244])
            ("config" function (:arguments ("Configure-End")) nil [14244 14266])
            (".PHONY" function (:arguments ("Configure-Begin")) nil [14267 14291])
            ("Configure-Begin" function nil nil [14291 14355])
            (".PHONY" function (:arguments ("Configure-Install")) nil [14485 14511])
            ("Configure-Install" function (:arguments ("Configure-Threads" "Configure-USB" "Configure-Realtime" "Configure-GLSupport" "Configure-Images" "Configure-Sound" "Configure-ALSupport" "Configure-Video" "Configure-Vrui" "Configure-VRDeviceDaemon")) nil [14511 14950])
            (".PHONY" function (:arguments ("Configure-End")) nil [15813 15835])
            ("Configure-End" function (:arguments ("Configure-Install")) nil [15835 15921])
            (".PHONY" function (:arguments ("extraclean")) nil [16127 16146])
            ("extraclean" function nil nil [16146 16280])
            (".PHONY" function (:arguments ("extrasqueakyclean")) nil [16281 16307])
            ("extrasqueakyclean" function nil nil [16307 16440])
            ("$(VRUI_MAKEDIR)/BasicMakefile" include nil nil [16466 16504])
            ("MISC_HEADERS" variable (:default-value ("$(wildcard Misc/*.h)" "$(wildcard Misc/*.icpp)")) nil [16749 16826])
            ("MISC_SOURCES" variable (:default-value ("$(wildcard Misc/*.cpp)")) nil [16827 16865])
            ("$(MISC_SOURCES)" function (:arguments ("config")) nil [16866 16890])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("PACKAGES" "+=" "$(MYMISC_DEPENDS)")) nil [16891 16950])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYMISC_INCLUDE)")) nil [16950 17019])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("|" "$(call DEPENDENCIES,MYMISC)")) nil [17019 17078])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("$(MISC_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [17078 17143])
            (".PHONY" function (:arguments ("libMisc")) nil [17143 17159])
            ("libMisc" function (:arguments ("$(call LIBRARYNAME,libMisc)")) nil [17159 17196])
            (".PHONY" function (:arguments ("Configure-Threads")) nil [17245 17271])
            ("Configure-Threads" function (:arguments ("Configure-Begin")) nil [17271 17306])
            ("Threads/Config.h" function (:arguments ("Configure-Threads")) nil [18518 18554])
            ("THREADS_HEADERS" variable (:default-value ("$(wildcard Threads/*.h)" "$(wildcard Threads/*.icpp)")) nil [18555 18644])
            ("THREADS_SOURCES" variable (:default-value ("$(wildcard Threads/*.cpp)")) nil [18645 18689])
            ("$(THREADS_SOURCES)" function (:arguments ("config")) nil [18690 18717])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("PACKAGES" "+=" "$(MYTHREADS_DEPENDS)")) nil [18718 18783])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYTHREADS_INCLUDE)")) nil [18783 18858])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("|" "$(call DEPENDENCIES,MYTHREADS)")) nil [18858 18923])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("$(THREADS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [18923 18994])
            (".PHONY" function (:arguments ("libThreads")) nil [18994 19013])
            ("libThreads" function (:arguments ("$(call LIBRARYNAME,libThreads)")) nil [19013 19056])
            (".PHONY" function (:arguments ("Configure-USB")) nil [19094 19116])
            ("Configure-USB" function (:arguments ("Configure-Begin")) nil [19116 19147])
            ("USB/Config.h" function (:arguments ("Configure-USB")) nil [19832 19860])
            ("USB_HEADERS" variable (:default-value ("$(wildcard USB/*.h)" "$(wildcard USB/*.icpp)")) nil [19861 19934])
            ("USB_SOURCES" variable (:default-value ("$(wildcard USB/*.cpp)")) nil [19935 19971])
            ("$(USB_SOURCES)" function (:arguments ("config")) nil [19972 19995])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("PACKAGES" "+=" "$(MYUSB_DEPENDS)")) nil [19996 20053])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYUSB_INCLUDE)")) nil [20053 20120])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("|" "$(call DEPENDENCIES,MYUSB)")) nil [20120 20177])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("$(USB_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [20177 20240])
            (".PHONY" function (:arguments ("libUSB")) nil [20240 20255])
            ("libUSB" function (:arguments ("$(call LIBRARYNAME,libUSB)")) nil [20255 20290])
            ("IO_HEADERS" variable (:default-value ("$(wildcard IO/*.h)" "$(wildcard IO/*.icpp)")) nil [20327 20396])
            ("IO_SOURCES" variable (:default-value ("$(wildcard IO/*.cpp)")) nil [20397 20431])
            ("$(IO_SOURCES)" function (:arguments ("config")) nil [20432 20454])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("PACKAGES" "+=" "$(MYIO_DEPENDS)")) nil [20455 20510])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYIO_INCLUDE)")) nil [20510 20575])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("|" "$(call DEPENDENCIES,MYIO)")) nil [20575 20630])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("$(IO_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [20630 20691])
            (".PHONY" function (:arguments ("libIO")) nil [20691 20705])
            ("libIO" function (:arguments ("$(call LIBRARYNAME,libIO)")) nil [20705 20738])
            ("PLUGINS_HEADERS" variable (:default-value ("$(wildcard Plugins/*.h)" "$(wildcard Plugins/*.icpp)")) nil [20785 20874])
            ("PLUGINS_SOURCES" variable (:default-value ("$(wildcard Plugins/*.cpp)")) nil [20875 20919])
            ("$(PLUGINS_SOURCES)" function (:arguments ("config")) nil [20920 20947])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("PACKAGES" "+=" "$(MYPLUGINS_DEPENDS)")) nil [20948 21013])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYPLUGINS_INCLUDE)")) nil [21013 21088])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("|" "$(call DEPENDENCIES,MYPLUGINS)")) nil [21088 21153])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("$(PLUGINS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [21153 21224])
            (".PHONY" function (:arguments ("libPlugins")) nil [21224 21243])
            ("libPlugins" function (:arguments ("$(call LIBRARYNAME,libPlugins)")) nil [21243 21286])
            (".PHONY" function (:arguments ("Configure-Realtime")) nil [21338 21365])
            ("Configure-Realtime" function (:arguments ("Configure-Begin")) nil [21365 21401])
            ("Realtime/Config.h" function (:arguments ("Configure-Realtime")) nil [21814 21852])
            ("REALTIME_HEADERS" variable (:default-value ("$(wildcard Realtime/*.h)" "$(wildcard Realtime/*.icpp)")) nil [21853 21946])
            ("REALTIME_SOURCES" variable (:default-value ("$(wildcard Realtime/*.cpp)")) nil [21947 21993])
            ("$(REALTIME_SOURCES)" function (:arguments ("config")) nil [21994 22022])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("PACKAGES" "+=" "$(MYREALTIME_DEPENDS)")) nil [22023 22090])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYREALTIME_INCLUDE)")) nil [22090 22167])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("|" "$(call DEPENDENCIES,MYREALTIME)")) nil [22167 22234])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("$(REALTIME_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [22234 22307])
            (".PHONY" function (:arguments ("libRealtime")) nil [22307 22327])
            ("libRealtime" function (:arguments ("$(call LIBRARYNAME,libRealtime)")) nil [22327 22372])
            ("COMM_HEADERS" variable (:default-value ("$(wildcard Comm/*.h)" "$(wildcard Comm/*.icpp)")) nil [22423 22500])
            ("COMM_SOURCES" variable (:default-value ("$(wildcard Comm/*.cpp)")) nil [22501 22539])
            ("$(COMM_SOURCES)" function (:arguments ("config")) nil [22540 22564])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("PACKAGES" "+=" "$(MYCOMM_DEPENDS)")) nil [22565 22624])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCOMM_INCLUDE)")) nil [22624 22693])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("|" "$(call DEPENDENCIES,MYCOMM)")) nil [22693 22752])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("$(COMM_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [22752 22817])
            (".PHONY" function (:arguments ("libComm")) nil [22817 22833])
            ("libComm" function (:arguments ("$(call LIBRARYNAME,libComm)")) nil [22833 22870])
            ("CLUSTER_HEADERS" variable (:default-value ("$(wildcard Cluster/*.h)" "$(wildcard Cluster/*.icpp)")) nil [22920 23009])
            ("CLUSTER_SOURCES" variable (:default-value ("$(wildcard Cluster/*.cpp)")) nil [23010 23054])
            ("$(CLUSTER_SOURCES)" function (:arguments ("config")) nil [23055 23082])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("PACKAGES" "+=" "$(MYCLUSTER_DEPENDS)")) nil [23083 23148])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCLUSTER_INCLUDE)")) nil [23148 23223])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("|" "$(call DEPENDENCIES,MYCLUSTER)")) nil [23223 23288])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("$(CLUSTER_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [23288 23359])
            (".PHONY" function (:arguments ("libCluster")) nil [23359 23378])
            ("libCluster" function (:arguments ("$(call LIBRARYNAME,libCluster)")) nil [23378 23421])
            ("MATH_HEADERS" variable (:default-value ("$(wildcard Math/*.h)" "$(wildcard Math/*.icpp)")) nil [23465 23542])
            ("MATH_SOURCES" variable (:default-value ("$(wildcard Math/*.cpp)")) nil [23543 23581])
            ("$(MATH_SOURCES)" function (:arguments ("config")) nil [23582 23606])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("PACKAGES" "+=" "$(MYMATH_DEPENDS)")) nil [23607 23666])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYMATH_INCLUDE)")) nil [23666 23735])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("|" "$(call DEPENDENCIES,MYMATH)")) nil [23735 23794])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("$(MATH_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [23794 23859])
            (".PHONY" function (:arguments ("libMath")) nil [23859 23875])
            ("libMath" function (:arguments ("$(call LIBRARYNAME,libMath)")) nil [23875 23912])
            ("GEOMETRY_HEADERS" variable (:default-value ("$(wildcard Geometry/*.h)" "$(wildcard Geometry/*.icpp)")) nil [23964 24057])
            ("GEOMETRY_SOURCES" variable (:default-value ("$(wildcard Geometry/*.cpp)")) nil [24058 24104])
            ("$(GEOMETRY_SOURCES)" function (:arguments ("config")) nil [24105 24133])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("PACKAGES" "+=" "$(MYGEOMETRY_DEPENDS)")) nil [24134 24201])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGEOMETRY_INCLUDE)")) nil [24201 24278])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("|" "$(call DEPENDENCIES,MYGEOMETRY)")) nil [24278 24345])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("$(GEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [24345 24418])
            (".PHONY" function (:arguments ("libGeometry")) nil [24418 24438])
            ("libGeometry" function (:arguments ("$(call LIBRARYNAME,libGeometry)")) nil [24438 24483])
            ("MACOSX_HEADERS" variable (:default-value ("$(wildcard MacOSX/*.h)" "$(wildcard MacOSX/*.icpp)")) nil [24528 24613])
            ("GLWRAPPERS_HEADERS" variable (:default-value ("GL/GLTexCoordTemplates.h" "GL/GLMultiTexCoordTemplates.h" "GL/GLColorTemplates.h" "GL/GLSecondaryColorTemplates.h" "GL/GLNormalTemplates.h" "GL/GLVertexTemplates.h" "GL/GLIndexTemplates.h" "GL/GLPrimitiveTemplates.h" "GL/GLScalarLimits.h" "GL/GLScalarConverter.h" "GL/GLColor.h" "GL/GLColorOperations.h" "GL/GLVector.h" "GL/GLBox.h" "GL/GLVertexArrayTemplates.h" "GL/GLVertexArrayParts.h" "GL/GLVertex.h" "GL/GLVertex.icpp" "GL/GLFogEnums.h" "GL/GLFogTemplates.h" "GL/GLFog.h" "GL/GLLightEnums.h" "GL/GLLightTemplates.h" "GL/GLLight.h" "GL/GLLightModelEnums.h" "GL/GLLightModelTemplates.h" "GL/GLMaterialEnums.h" "GL/GLMaterialTemplates.h" "GL/GLMaterial.h" "GL/GLTexEnvEnums.h" "GL/GLTexEnvTemplates.h" "GL/GLMatrixEnums.h" "GL/GLMatrixTemplates.h" "GL/GLMiscTemplates.h" "GL/GLGetTemplates.h" "GL/GLGetPrimitiveTemplates.h" "GL/GLGetFogTemplates.h" "GL/GLGetLightTemplates.h" "GL/GLGetMaterialTemplates.h" "GL/GLGetTexEnvTemplates.h" "GL/GLGetMatrixTemplates.h" "GL/GLGetMiscTemplates.h")) nil [24665 26513])
            ("GLWRAPPERS_SOURCES" variable (:default-value ("GL/GLScalarLimits.cpp" "GL/GLColor.cpp" "GL/GLVertex.cpp" "GL/GLFog.cpp" "GL/GLLight.cpp" "GL/GLMaterial.cpp")) nil [26514 26749])
            ("$(GLWRAPPERS_SOURCES)" function (:arguments ("config")) nil [26750 26780])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("PACKAGES" "+=" "$(MYGLWRAPPERS_DEPENDS)")) nil [26781 26852])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLWRAPPERS_INCLUDE)")) nil [26852 26933])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("CFLAGS" "+=" "$(MYGLWRAPPERS_CFLAGS)")) nil [26933 27001])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLWRAPPERS)")) nil [27001 27072])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("$(GLWRAPPERS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [27072 27149])
            (".PHONY" function (:arguments ("libGLWrappers")) nil [27149 27171])
            ("libGLWrappers" function (:arguments ("$(call LIBRARYNAME,libGLWrappers)")) nil [27171 27220])
            (".PHONY" function (:arguments ("Configure-GLSupport")) nil [27267 27295])
            ("Configure-GLSupport" function (:arguments ("Configure-Begin")) nil [27295 27332])
            ("GL/Config.h" function (:arguments ("Configure-GLSupport")) nil [27899 27932])
            ("GLSUPPORT_HEADERS" variable (:default-value ("GL/Config.h" "GL/GLPrintError.h" "GL/GLMarshallers.h" "GL/GLMarshallers.icpp" "GL/GLValueCoders.h" "GL/GLLightTracker.h" "GL/GLClipPlaneTracker.h" "GL/TLSHelper.h" "GL/GLObject.h" "GL/GLContextData.h" "GL/GLExtensions.h" "GL/GLExtensionManager.h" "GL/GLShader.h" "GL/GLGeometryShader.h" "GL/GLAutomaticShader.h" "GL/GLLineLightingShader.h" "GL/GLColorMap.h" "GL/GLNumberRenderer.h" "GL/GLFont.h" "GL/GLString.h" "GL/GLLabel.h" "GL/GLLineIlluminator.h" "GL/GLModels.h")) nil [27933 28838])
            ("GLSUPPORTEXTENSION_HEADERS" variable (:default-value ("$(wildcard GL/Extensions/*.h)" "$(wildcard GL/Extensions/*.icpp)")) nil [28839 28962])
            ("GLSUPPORT_SOURCES" variable (:default-value ("GL/GLPrintError.cpp" "GL/GLMarshallers.cpp" "GL/GLValueCoders.cpp" "GL/GLLightTracker.cpp" "GL/GLClipPlaneTracker.cpp" "GL/GLObject.cpp" "GL/Internal/GLThingManager.cpp" "GL/GLContextData.cpp" "GL/GLExtensions.cpp" "GL/GLExtensionManager.cpp" "$(wildcard GL/Extensions/*.cpp)" "GL/GLShader.cpp" "GL/GLGeometryShader.cpp" "GL/GLAutomaticShader.cpp" "GL/GLLineLightingShader.cpp" "GL/GLColorMap.cpp" "GL/GLNumberRenderer.cpp" "GL/GLFont.cpp" "GL/GLString.cpp" "GL/GLLabel.cpp" "GL/GLLineIlluminator.cpp" "GL/GLModels.cpp")) nil [28963 29908])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSGLFONTDIR='\"$(SHAREINSTALLDIR)/GLFonts\"'")) nil [30041 30120])
            ("$(GLSUPPORT_SOURCES)" function (:arguments ("config")) nil [30121 30150])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("PACKAGES" "+=" "$(MYGLSUPPORT_DEPENDS)")) nil [30151 30220])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLSUPPORT_INCLUDE)")) nil [30220 30299])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("CFLAGS" "+=" "$(MYGLSUPPORT_CFLAGS)")) nil [30299 30365])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLSUPPORT)")) nil [30365 30434])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("$(GLSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [30434 30509])
            (".PHONY" function (:arguments ("libGLSupport")) nil [30509 30530])
            ("libGLSupport" function (:arguments ("$(call LIBRARYNAME,libGLSupport)")) nil [30530 30577])
            ("GLXSUPPORT_HEADERS" variable (:default-value ("GL/GLContext.h" "GL/GLWindow.h")) nil [30629 30702])
            ("GLXSUPPORT_SOURCES" variable (:default-value ("GL/GLContext.cpp" "GL/GLWindow.cpp")) nil [30703 30780])
            ("$(GLXSUPPORT_SOURCES)" function (:arguments ("config")) nil [30781 30811])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("PACKAGES" "+=" "$(MYGLXSUPPORT_DEPENDS)")) nil [30812 30883])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLXSUPPORT_INCLUDE)")) nil [30883 30964])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("CFLAGS" "+=" "$(MYGLXSUPPORT_CFLAGS)")) nil [30964 31032])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLXSUPPORT)")) nil [31032 31103])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("$(GLXSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [31103 31180])
            (".PHONY" function (:arguments ("libGLXSupport")) nil [31180 31202])
            ("libGLXSupport" function (:arguments ("$(call LIBRARYNAME,libGLXSupport)")) nil [31202 31251])
            ("GLGEOMETRY_HEADERS" variable (:default-value ("GL/GLGeometryWrappers.h" "GL/GLGeometryVertex.h" "GL/GLGeometryVertex.icpp" "GL/GLTransformationWrappers.h" "GL/GLTransformationWrappers.icpp" "GL/GLFrustum.h" "GL/GLFrustum.icpp" "GL/GLPolylineTube.h")) nil [31336 31636])
            ("GLGEOMETRY_SOURCES" variable (:default-value ("GL/GLGeometryVertex.cpp" "GL/GLTransformationWrappers.cpp" "GL/GLFrustum.cpp" "GL/GLPolylineTube.cpp")) nil [31637 31822])
            ("$(GLGEOMETRY_SOURCES)" function (:arguments ("config")) nil [31823 31853])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("PACKAGES" "+=" "$(MYGLGEOMETRY_DEPENDS)")) nil [31854 31925])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLGEOMETRY_INCLUDE)")) nil [31925 32006])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLGEOMETRY)")) nil [32006 32077])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("$(GLGEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [32077 32154])
            (".PHONY" function (:arguments ("libGLGeometry")) nil [32154 32176])
            ("libGLGeometry" function (:arguments ("$(call LIBRARYNAME,libGLGeometry)")) nil [32176 32225])
            (".PHONY" function (:arguments ("Configure-Images")) nil [32269 32294])
            ("Configure-Images" function (:arguments ("Configure-Begin")) nil [32294 32328])
            ("Images/Config.h" function (:arguments ("Configure-Images")) nil [33153 33187])
            ("IMAGES_HEADERS" variable (:default-value ("$(wildcard Images/*.h)" "$(wildcard Images/*.icpp)")) nil [33188 33273])
            ("IMAGES_SOURCES" variable (:default-value ("$(wildcard Images/*.cpp)")) nil [33274 33316])
            ("$(IMAGES_SOURCES)" function (:arguments ("config")) nil [33317 33343])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("PACKAGES" "+=" "$(MYIMAGES_DEPENDS)")) nil [33344 33407])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYIMAGES_INCLUDE)")) nil [33407 33480])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("|" "$(call DEPENDENCIES,MYIMAGES)")) nil [33480 33543])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("$(IMAGES_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [33543 33612])
            (".PHONY" function (:arguments ("libImages")) nil [33612 33630])
            ("libImages" function (:arguments ("$(call LIBRARYNAME,libImages)")) nil [33630 33671])
            ("GLMOTIF_HEADERS" variable (:default-value ("$(wildcard GLMotif/*.h)" "$(wildcard GLMotif/*.icpp)")) nil [33737 33826])
            ("GLMOTIF_SOURCES" variable (:default-value ("$(wildcard GLMotif/*.cpp)")) nil [33827 33871])
            ("$(GLMOTIF_SOURCES)" function (:arguments ("config")) nil [33872 33899])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("PACKAGES" "+=" "$(MYGLMOTIF_DEPENDS)")) nil [33900 33965])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLMOTIF_INCLUDE)")) nil [33965 34040])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLMOTIF)")) nil [34040 34105])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("$(GLMOTIF_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [34105 34176])
            (".PHONY" function (:arguments ("libGLMotif")) nil [34176 34195])
            ("libGLMotif" function (:arguments ("$(call LIBRARYNAME,libGLMotif)")) nil [34195 34238])
            (".PHONY" function (:arguments ("Configure-Sound")) nil [34278 34302])
            ("Configure-Sound" function (:arguments ("Configure-Begin")) nil [34302 34335])
            ("Sound/Config.h" function (:arguments ("Configure-Sound")) nil [34956 34988])
            ("SOUND_HEADERS" variable (:default-value ("$(wildcard Sound/*.h)" "$(wildcard Sound/*.icpp)")) nil [34989 35070])
            ("SOUND_SOURCES" variable (:default-value ("$(wildcard Sound/*.cpp)")) nil [35437 35477])
            ("$(SOUND_SOURCES)" function (:arguments ("config")) nil [35803 35828])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("PACKAGES" "+=" "$(MYSOUND_DEPENDS)")) nil [35829 35890])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYSOUND_INCLUDE)")) nil [35890 35961])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("|" "$(call DEPENDENCIES,MYSOUND)")) nil [35961 36022])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("$(SOUND_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [36022 36089])
            (".PHONY" function (:arguments ("libSound")) nil [36089 36106])
            ("libSound" function (:arguments ("$(call LIBRARYNAME,libSound)")) nil [36106 36145])
            (".PHONY" function (:arguments ("Configure-Video")) nil [36185 36209])
            ("Configure-Video" function (:arguments ("Configure-Begin")) nil [36209 36242])
            ("Video/Config.h" function (:arguments ("Configure-Video")) nil [37113 37145])
            ("VIDEO_HEADERS" variable (:default-value ("Video/Config.h" "Video/VideoDataFormat.h" "Video/FrameBuffer.h" "Video/ImageExtractor.h" "Video/VideoDevice.h" "Video/Colorspaces.h" "Video/ImageExtractorRGB8.h" "Video/ImageExtractorY10B.h" "Video/ImageExtractorYUYV.h" "Video/ImageExtractorUYVY.h" "Video/ImageExtractorYV12.h" "Video/BayerPattern.h" "Video/ImageExtractorBA81.h" "Video/YpCbCr420Texture.h" "Video/VideoPane.h")) nil [37146 37762])
            ("VIDEO_SOURCES" variable (:default-value ("Video/VideoDataFormat.cpp" "Video/VideoDevice.cpp" "Video/ImageExtractorRGB8.cpp" "Video/ImageExtractorY10B.cpp" "Video/ImageExtractorYUYV.cpp" "Video/ImageExtractorUYVY.cpp" "Video/ImageExtractorYV12.cpp" "Video/ImageExtractorBA81.cpp" "Video/YpCbCr420Texture.cpp" "Video/VideoPane.cpp")) nil [38501 38948])
            ("$(VIDEO_SOURCES)" function (:arguments ("config")) nil [39594 39619])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("PACKAGES" "+=" "$(MYVIDEO_DEPENDS)")) nil [39620 39681])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVIDEO_INCLUDE)")) nil [39681 39752])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("|" "$(call DEPENDENCIES,MYVIDEO)")) nil [39752 39813])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("$(VIDEO_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [39813 39880])
            (".PHONY" function (:arguments ("libVideo")) nil [39880 39897])
            ("libVideo" function (:arguments ("$(call LIBRARYNAME,libVideo)")) nil [39897 39936])
            (".PHONY" function (:arguments ("Configure-ALSupport")) nil [39983 40011])
            ("Configure-ALSupport" function (:arguments ("Configure-Begin")) nil [40011 40048])
            ("AL/Config.h" function (:arguments ("Configure-ALSupport")) nil [40425 40458])
            ("ALSUPPORT_HEADERS" variable (:default-value ("$(wildcard AL/*.h)" "$(wildcard AL/*.icpp)")) nil [40459 40542])
            ("ALSUPPORT_SOURCES" variable (:default-value ("$(wildcard AL/*.cpp)" "$(wildcard AL/Internal/*.cpp)")) nil [40543 40636])
            ("$(ALSUPPORT_SOURCES)" function (:arguments ("config")) nil [40637 40666])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("PACKAGES" "+=" "$(MYALSUPPORT_DEPENDS)")) nil [40667 40736])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYALSUPPORT_INCLUDE)")) nil [40736 40815])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("|" "$(call DEPENDENCIES,MYALSUPPORT)")) nil [40815 40884])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("$(ALSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [40884 40959])
            (".PHONY" function (:arguments ("libALSupport")) nil [40959 40980])
            ("libALSupport" function (:arguments ("$(call LIBRARYNAME,libALSupport)")) nil [40980 41027])
            ("SCENEGRAPH_HEADERS" variable (:default-value ("$(wildcard SceneGraph/*.h)" "$(wildcard SceneGraph/*.icpp)")) nil [41082 41183])
            ("SCENEGRAPH_SOURCES" variable (:default-value ("$(wildcard SceneGraph/*.cpp)" "$(wildcard SceneGraph/Internal/*.cpp)")) nil [41184 41295])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSCENEGRAPH_DOOM3MATERIALMANAGER_SHADERDIR='\"$(SHAREINSTALLDIR)/Shaders/SceneGraph\"'")) nil [41296 41446])
            ("$(SCENEGRAPH_SOURCES)" function (:arguments ("config")) nil [41447 41477])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("PACKAGES" "+=" "$(MYSCENEGRAPH_DEPENDS)")) nil [41478 41549])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYSCENEGRAPH_INCLUDE)")) nil [41549 41630])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("|" "$(call DEPENDENCIES,MYSCENEGRAPH)")) nil [41630 41701])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("$(SCENEGRAPH_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [41701 41778])
            (".PHONY" function (:arguments ("libSceneGraph")) nil [41778 41800])
            ("libSceneGraph" function (:arguments ("$(call LIBRARYNAME,libSceneGraph)")) nil [41800 41849])
            (".PHONY" function (:arguments ("Configure-Vrui")) nil [41912 41935])
            ("Configure-Vrui" function (:arguments ("Configure-Begin")) nil [41935 41967])
            ("VRUI_HEADERS" variable (:default-value ("$(wildcard Vrui/*.h)" "$(wildcard Vrui/*.icpp)")) nil [42583 42660])
            ("VRUI_IGNORE_SOURCES" variable (:default-value ("Vrui/Internal/InputDeviceDock.cpp" "Vrui/Internal/TheoraMovieSaver.cpp" "Vrui/Internal/KinectRecorder.cpp" "Vrui/Internal/KinectPlayback.cpp")) nil [42765 42994])
            ("VRUI_SOURCES" variable (:default-value ("$(wildcard Vrui/*.cpp)" "$(filter-out $(VRUI_IGNORE_SOURCES),$(wildcard Vrui/Internal/*.cpp))" "$(wildcard Vrui/Internal/$(OSSPECFILEINSERT)/*.cpp)")) nil [42995 43188])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DDEFAULTMOUSECURSORIMAGEFILENAME='\"$(SHAREINSTALLDIR)/Textures/Cursor.Xcur\"'")) nil [43422 43564])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSTOOLDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(VRTOOLSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [43564 43693])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSVISLETDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(VRVISLETSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [43693 43828])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DAUTOSTEREODIRECTORY='\"$(SHAREINSTALLDIR)/Textures\"'")) nil [43828 43919])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DDEFAULTGLYPHRENDERERCURSORFILENAME='\"$(SHAREINSTALLDIR)/Textures/Cursor.Xcur\"'")) nil [44032 44163])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSVRUICONFIGFILE='\"$(ETCINSTALLDIR)/Vrui.cfg\"'" "-DVRUIDEFAULTROOTSECTIONNAME='\"Desktop\"'" "-DVRUIVERSION=$(VRUI_VERSION)" "-DVRUILIBDIR='\"$(LIBINSTALLDIR)\"'" "-DVRUIEXECUTABLEDIR='\"$(EXECUTABLEINSTALLDIR)\"'" "-DVRUIPLUGINDIR='\"$(PLUGININSTALLDIR)\"'" "-DVRUIETCDIR='\"$(ETCINSTALLDIR)\"'" "-DVRUISHAREDIR='\"$(SHAREINSTALLDIR)\"'")) nil [44163 44908])
            ("$(VRUI_SOURCES)" function (:arguments ("config")) nil [44909 44933])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("PACKAGES" "+=" "$(MYVRUI_DEPENDS)")) nil [44934 44993])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [44993 45062])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("|" "$(call DEPENDENCIES,MYVRUI)")) nil [45062 45121])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("$(VRUI_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [45121 45186])
            (".PHONY" function (:arguments ("libVrui")) nil [45186 45202])
            ("libVrui" function (:arguments ("$(call LIBRARYNAME,libVrui)")) nil [45202 45239])
            ("$(VRTOOLSDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [45330 45386])
            ("$(VRTOOLSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [45386 45449])
            ("$(VRTOOLSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [45449 45508])
            ("$(VRTOOLSDIR)" function (:arguments ("$(OBJDIR)/Vrui/Tools/%.o")) nil [45971 46058])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DDEFAULTLIGHTSABERIMAGEFILENAME='\"$(SHAREINSTALLDIR)/Textures/Lightsaber.png\"'")) nil [46280 46403])
            ("$(VRTOOLS_SOURCES)" function (:arguments ("config")) nil [46404 46431])
            (".SECONDARY" function (:arguments ("$(VRTOOLS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [46481 46532])
            (".PHONY" function (:arguments ("VRTools")) nil [46533 46549])
            ("VRTools" function (:arguments ("$(VRTOOLS)")) nil [46549 46569])
            ("$(VRVISLETSDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [46658 46716])
            ("$(VRVISLETSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [46716 46781])
            ("$(VRVISLETSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [46781 46842])
            ("$(VRVISLETSDIR)" function (:arguments ("$(OBJDIR)/Vrui/Vislets/%.o")) nil [47317 47410])
            ("$(VRVISLETSDIR)" function (:arguments ("PACKAGES" "+=" "MYSCENEGRAPH")) nil [47647 47726])
            ("$(VRVISLETS_SOURCES)" function (:arguments ("config")) nil [47727 47756])
            (".SECONDARY" function (:arguments ("$(VRVISLETS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [47805 47858])
            (".PHONY" function (:arguments ("VRVislets")) nil [47859 47877])
            ("VRVislets" function (:arguments ("$(VRVISLETS)")) nil [47877 47901])
            (".PHONY" function (:arguments ("Configure-VRDeviceDaemon")) nil [47938 47971])
            ("Configure-VRDeviceDaemon" function (:arguments ("Configure-Begin")) nil [47971 48013])
            ("VRDEVICEDAEMON_SOURCES" variable (:default-value ("VRDeviceDaemon/VRDevice.cpp" "VRDeviceDaemon/VRCalibrator.cpp" "VRDeviceDaemon/VRDeviceManager.cpp" "Vrui/Internal/VRDeviceDescriptor.cpp" "Vrui/Internal/VRDevicePipe.cpp" "VRDeviceDaemon/VRDeviceServer.cpp" "VRDeviceDaemon/VRDeviceDaemon.cpp")) nil [48717 49135])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSVRDEVICEDIRECTORY='\"$(PLUGININSTALLDIR)/$(VRDEVICESDIREXT)\"'" "-DSYSVRCALIBRATORDIRECTORY='\"$(PLUGININSTALLDIR)/$(VRCALIBRATORSDIREXT)\"'")) nil [49136 49386])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DSYSVRDEVICEDAEMONCONFIGFILENAME='\"$(ETCINSTALLDIR)/VRDevices.cfg\"'")) nil [49386 49508])
            ("$(VRDEVICEDAEMON_SOURCES)" function (:arguments ("config")) nil [49509 49543])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYIO" "MYTHREADS" "MYMISC" "DL")) nil [49544 49625])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [49625 49691])
            ("$(EXEDIR)" function (:arguments ("CFLAGS" "+=" "-DVERBOSE" "-DSYSDSONAMETEMPLATE='\"lib%s.$(PLUGINFILEEXT)\"'")) nil [49691 49785])
            ("$(EXEDIR)" function (:arguments ("LINKFLAGS" "+=" "$(PLUGINHOSTLINKFLAGS)")) nil [49785 49847])
            ("$(EXEDIR)" function (:arguments ("$(VRDEVICEDAEMON_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [49847 49919])
            (".PHONY" function (:arguments ("VRDeviceDaemon")) nil [49919 49942])
            ("VRDeviceDaemon" function (:arguments ("$(EXEDIR)/VRDeviceDaemon")) nil [49942 49983])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/VRPNConnection.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/VRPNClient.o")) nil [50317 50515])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(BLUETOOTH_LIBDIR)" "$(BLUETOOTH_LIBS)")) nil [50516 50628])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/Wiimote.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/WiimoteTracker.o")) nil [50628 50831])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYUSB")) nil [50832 50904])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(MYUSB_LIBDIR)" "$(MYUSB_LIBS)")) nil [50904 51010])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/RazerHydra.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/RazerHydraDevice.o")) nil [51195 51407])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYUSB")) nil [51408 51474])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(MYUSB_LIBDIR)" "$(MYUSB_LIBS)")) nil [51474 51574])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYTHREADS" "MYMISC")) nil [51792 51878])
            ("$(VRDEVICESDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [51878 51957])
            ("$(VRDEVICESDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)" "-DVERBOSE" "-DSYSDSONAMETEMPLATE='\"lib%s.$(PLUGINFILEEXT)\"'")) nil [51957 52080])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [52080 52141])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/%.o")) nil [52141 52246])
            ("$(VRDEVICES_SOURCES)" function (:arguments ("config")) nil [52446 52475])
            ("VRDeviceDaemon/VRDevices/Wiimote.cpp" function (:arguments ("config")) nil [52475 52604])
            ("VRDeviceDaemon/VRDevices/VRPNConnection.cpp" function (:arguments ("config")) nil [52475 52604])
            (".SECONDARY" function (:arguments ("$(VRDEVICES_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [52663 52716])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYTHREADS" "MYMISC")) nil [52798 52888])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [52888 52971])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)" "-DSYSDSONAMETEMPLATE='\"lib%s.$(PLUGINFILEEXT)\"'")) nil [52971 53088])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [53088 53153])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRCalibrators/%.o")) nil [53153 53270])
            ("$(VRCALIBRATORS_SOURCES)" function (:arguments ("config")) nil [53470 53503])
            (".SECONDARY" function (:arguments ("$(VRCALIBRATORS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [53559 53616])
            (".PHONY" function (:arguments ("VRCalibrators")) nil [53617 53639])
            ("VRCalibrators" function (:arguments ("$(VRCALIBRATORS)")) nil [53639 53671])
            ("Vrui/Utilities/DeviceTest.cpp" function (:arguments ("config")) nil [53714 53752])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [53753 53794])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/DeviceTest.o")) nil [53794 53854])
            (".PHONY" function (:arguments ("DeviceTest")) nil [53854 53873])
            ("DeviceTest" function (:arguments ("$(EXEDIR)/DeviceTest")) nil [53873 53906])
            ("Vrui/Utilities/EyeCalibrator.cpp" function (:arguments ("config")) nil [53948 53989])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [53990 54034])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/EyeCalibrator.o")) nil [54034 54100])
            (".PHONY" function (:arguments ("EyeCalibrator")) nil [54100 54122])
            ("EyeCalibrator" function (:arguments ("$(EXEDIR)/EyeCalibrator")) nil [54122 54161])
            ("Vrui/Utilities/PrintInputDeviceDataFile.cpp" function (:arguments ("config")) nil [54210 54262])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [54263 54318])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/PrintInputDeviceDataFile.o")) nil [54318 54406])
            (".PHONY" function (:arguments ("PrintInputDeviceDataFile")) nil [54406 54439])
            ("PrintInputDeviceDataFile" function (:arguments ("$(EXEDIR)/PrintInputDeviceDataFile")) nil [54439 54500])
            ("Calibration/XBackground.cpp" function (:arguments ("config")) nil [54543 54579])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "X11")) nil [54580 54619])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [54619 54678])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/XBackground.o")) nil [54678 54737])
            (".PHONY" function (:arguments ("XBackground")) nil [54737 54757])
            ("XBackground" function (:arguments ("$(EXEDIR)/XBackground")) nil [54757 54792])
            ("MEASUREENVIRONMENT_SOURCES" variable (:default-value ("Calibration/TotalStation.cpp" "Calibration/NaturalPointClient.cpp" "Calibration/MeasureEnvironment.cpp")) nil [54825 55015])
            ("$(MEASUREENVIRONMENT_SOURCES)" function (:arguments ("config")) nil [55016 55054])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [55055 55104])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [55104 55170])
            ("$(EXEDIR)" function (:arguments ("$(MEASUREENVIRONMENT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [55170 55250])
            (".PHONY" function (:arguments ("MeasureEnvironment")) nil [55250 55277])
            ("MeasureEnvironment" function (:arguments ("$(EXEDIR)/MeasureEnvironment")) nil [55277 55326])
            ("Calibration/ScreenCalibrator.cpp" function (:arguments ("config")) nil [55377 55418])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [55419 55466])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [55466 55530])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/ScreenCalibrator.o")) nil [55530 55599])
            (".PHONY" function (:arguments ("ScreenCalibrator")) nil [55599 55624])
            ("ScreenCalibrator" function (:arguments ("$(EXEDIR)/ScreenCalibrator")) nil [55624 55669])
            ("ALIGNTRACKINGMARKERS_SOURCES" variable (:default-value ("Calibration/ReadOptiTrackMarkerFile.cpp" "Calibration/NaturalPointClient.cpp" "Calibration/AlignTrackingMarkers.cpp")) nil [55719 55928])
            ("$(ALIGNTRACKINGMARKERS_SOURCES)" function (:arguments ("config")) nil [55929 55969])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [55970 56021])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [56021 56089])
            ("$(EXEDIR)" function (:arguments ("$(ALIGNTRACKINGMARKERS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [56089 56173])
            (".PHONY" function (:arguments ("AlignTrackingMarkers")) nil [56173 56202])
            ("AlignTrackingMarkers" function (:arguments ("$(EXEDIR)/AlignTrackingMarkers")) nil [56202 56255])
            ("Calibration/OculusCalibrator.cpp" function (:arguments ("config")) nil [56299 56340])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI" "MYUSB")) nil [56341 56394])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [56394 56458])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/OculusCalibrator.o")) nil [56458 56527])
            (".PHONY" function (:arguments ("OculusCalibrator")) nil [56527 56552])
            ("OculusCalibrator" function (:arguments ("$(EXEDIR)/OculusCalibrator")) nil [56552 56597])
            ("SYSTEMPACKAGES" variable (:default-value ("$(sort $(patsubst MY%,,$(PACKAGES_RECEXPAND)))")) nil [56857 56921])
            ("VRUIAPP_INCLUDEDIRS" variable (:default-value ("-I$$(VRUI_INCLUDEDIR)")) nil [56921 56965])
            ("VRUIAPP_INCLUDEDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_INCLUDE)))")) nil [56965 57063])
            ("VRUIAPP_CFLAGS" variable (:default-value ("$(CSYSFLAGS)")) nil [57063 57093])
            ("VRUIAPP_CFLAGS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(PACKAGES_RECEXPAND),$($(PACKAGENAME)_CFLAGS)))")) nil [57093 57189])
            ("VRUIAPP_LDIRS" variable (:default-value ("-L$$(VRUI_LIBDIR)")) nil [57189 57223])
            ("VRUIAPP_LDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_LIBDIR)))")) nil [57223 57314])
            ("VRUIAPP_LIBS" variable (:default-value ("$(patsubst lib%,-l%.$(LDEXT),$(LIBRARY_NAMES))")) nil [57314 57376])
            ("VRUIAPP_LIBS" variable (:default-value ("$(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_LIBS))")) nil [57376 57456])
            ("VRUIAPP_LFLAGS" variable nil nil [57456 57473])
            ("$(MAKEFILEFRAGMENT)" function (:arguments ("PACKAGES" "=" "MYVRUI")) nil [57671 57710])
            ("$(MAKEFILEFRAGMENT)" function (:arguments ("config")) nil [57710 58797])
            ("$(MAKECONFIGFILE)" function (:arguments ("config")) nil [58971 61893])
            ("ROGUE_SYSTEMPACKAGES" variable (:default-value ("$(filter %_,$(foreach PACKAGENAME,$(SYSTEMPACKAGES),$(PACKAGENAME)_$($(PACKAGENAME)_PKGNAME)))")) nil [61894 62012])
            ("ROGUE_INCLUDEDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)INCLUDE)))")) nil [62012 62112])
            ("ROGUE_LIBDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)LIBDIR)))")) nil [62112 62207])
            ("ROGUE_LIBS" variable (:default-value ("$(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)LIBS))")) nil [62207 62289])
            ("$(PKGCONFIGFILE)" function (:arguments ("PACKAGES" "=" "MYVRUI")) nil [62347 62383])
            ("$(PKGCONFIGFILE)" function (:arguments ("config")) nil [62383 63006])
            ("install" function nil nil [63619 63628]))          
      :file "makefile"
      :pointmax 69902
      :fsize 69901
      :lastmodtime '(22386 57584 857716 705000)
      :unmatched-syntax nil))
  :file "!home!nshetty!Tools!Vrui!Vrui-3.1-004!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
