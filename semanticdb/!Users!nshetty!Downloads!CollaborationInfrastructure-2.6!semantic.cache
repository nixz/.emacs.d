;; Object CollaborationInfrastructure-2.6/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "CollaborationInfrastructure-2.6/"
  :tables
  (list
    (semanticdb-table "makefile"
      :major-mode 'makefile-bsdmake-mode
      :tags 
        '( ("VRUI_MAKEDIR" variable (:default-value ("$(HOME)/Vrui-3.0/share/make")) nil [1276 1320])
            ("COLLABORATIONPLUGINSDIREXT" variable (:default-value ("CollaborationPlugins")) nil [1456 1506])
            ("PACKAGEROOT" variable (:default-value ("$(shell pwd)")) nil [1862 1890])
            ("COLLABORATION_VERSION" variable (:default-value ("2006")) nil [1945 1974])
            ("MAJORLIBVERSION" variable (:default-value ("2")) nil [1974 1994])
            ("MINORLIBVERSION" variable (:default-value ("6")) nil [1994 2014])
            ("COLLABORATION_NAME" variable (:default-value ("Collaboration-$(MAJORLIBVERSION).$(MINORLIBVERSION)")) nil [2014 2088])
            ("$(VRUI_MAKEDIR)/SystemDefinitions" include nil nil [2169 2211])
            ("$(VRUI_MAKEDIR)/Packages.System" include nil nil [2211 2251])
            ("$(VRUI_MAKEDIR)/Configuration.Vrui" include nil nil [2251 2294])
            ("$(VRUI_MAKEDIR)/Packages.Vrui" include nil nil [2294 2332])
            ("$(PACKAGEROOT)/BuildRoot/Packages.Collaboration" include nil nil [2332 2388])
            ("EXTRACINCLUDEFLAGS" variable (:default-value ("-I$(PACKAGEROOT)")) nil [2449 2488])
            ("EXTRALINKDIRFLAGS" variable (:default-value ("-L$(PACKAGEROOT)/$(MYLIBEXT)")) nil [2488 2538])
            ("LIBDESTDIR" variable (:default-value ("$(PACKAGEROOT)/$(MYLIBEXT)")) nil [2594 2635])
            ("VISLETDESTDIR" variable (:default-value ("$(LIBDESTDIR)/Vislets")) nil [2635 2674])
            ("PLUGINDESTDIR" variable (:default-value ("$(LIBDESTDIR)/Plugins")) nil [2674 2713])
            ("VISLETNAME" variable (:default-value ("$(VISLETDESTDIR)/lib$(1).$(PLUGINFILEEXT)")) nil [3145 3200])
            ("PLUGINNAME" variable (:default-value ("$(PLUGINDESTDIR)/lib$(1).$(PLUGINFILEEXT)")) nil [3200 3255])
            ("PACKAGES" variable nil nil [3516 3528])
            ("LIBRARIES" variable nil nil [3704 3717])
            ("PLUGINS" variable nil nil [3717 3728])
            ("VISLETS" variable nil nil [3728 3739])
            ("EXECUTABLES" variable nil nil [3739 3754])
            ("LIBRARY_NAMES" variable (:default-value ("libCollaborationServer" "libCollaborationClient")) nil [3801 3881])
            ("LIBRARIES" variable (:default-value ("$(LIBRARY_NAMES:%=$(call LIBRARYNAME,%))")) nil [3882 3936])
            ("SERVERPLUGIN_NAMES" variable (:default-value ("FooServer" "CheriaServer" "GrapheinServer" "AgoraServer")) nil [3966 4106])
            ("SERVERPLUGINS" variable (:default-value ("$(SERVERPLUGIN_NAMES:%=$(call PLUGINNAME,%))")) nil [4107 4168])
            ("PLUGINS" variable (:default-value ("$(SERVERPLUGINS)")) nil [4169 4197])
            ("CLIENTPLUGIN_NAMES" variable (:default-value ("FooClient" "CheriaClient" "GrapheinClient" "AgoraClient")) nil [4198 4338])
            ("CLIENTPLUGINS" variable (:default-value ("$(CLIENTPLUGIN_NAMES:%=$(call PLUGINNAME,%))")) nil [4339 4400])
            ("PLUGINS" variable (:default-value ("$(CLIENTPLUGINS)")) nil [4401 4429])
            ("VISLET_NAMES" variable (:default-value ("CollaborationClient")) nil [4457 4492])
            ("VISLETS" variable (:default-value ("$(VISLET_NAMES:%=$(call VISLETNAME,%))")) nil [4493 4543])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/CollaborationServer")) nil [4590 4635])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/CollaborationClientTest")) nil [4682 4731])
            ("MAKECONFIGFILE" variable (:default-value ("share/Configuration.Collaboration")) nil [4779 4830])
            ("ALL" variable (:default-value ("$(LIBRARIES)" "$(EXECUTABLES)" "$(PLUGINS)" "$(VISLETS)" "$(MAKECONFIGFILE)")) nil [4831 4905])
            (".PHONY" function (:arguments ("all")) nil [4906 4918])
            ("all" function (:arguments ("config" "$(ALL)")) nil [4918 4937])
            ("$(EXEDIR)" function (:arguments ("$(call LIBRARYNAME,libCollaborationServer)")) nil [5007 5098])
            ("$(SERVERPLUGINS)" function (:arguments ("$(call LIBRARYNAME,libCollaborationServer)")) nil [5007 5098])
            ("$(VISLETS)" function (:arguments ("$(call LIBRARYNAME,libCollaborationClient)")) nil [5168 5274])
            ("$(CLIENTPLUGINS)" function (:arguments ("$(call LIBRARYNAME,libCollaborationClient)")) nil [5168 5274])
            (".PHONY" function (:arguments ("config")) nil [5469 5484])
            ("config" function (:arguments ("Configure-End")) nil [5484 5506])
            (".PHONY" function (:arguments ("Configure-Begin")) nil [5507 5531])
            ("Configure-Begin" function nil nil [5531 5835])
            (".PHONY" function (:arguments ("Configure-End")) nil [6266 6288])
            ("Configure-End" function (:arguments ("Configure-Begin")) nil [6288 6319])
            ("Configure-End" function nil nil [6319 6352])
            ("$(wildcard *.cpp Collaboration/*.cpp)" function (:arguments ("config")) nil [6353 6399])
            (".PHONY" function (:arguments ("extraclean")) nil [6605 6624])
            ("extraclean" function nil nil [6624 6852])
            (".PHONY" function (:arguments ("extrasqueakyclean")) nil [6853 6879])
            ("extrasqueakyclean" function nil nil [6879 6947])
            ("$(VRUI_MAKEDIR)/BasicMakefile" include nil nil [6973 7011])
            ("LIBCOLLABORATION_HEADERS" variable (:default-value ("Collaboration/Protocol.h" "Collaboration/ProtocolServer.h" "Collaboration/ProtocolClient.h" "Collaboration/CollaborationProtocol.h" "Collaboration/CollaborationServer.h" "Collaboration/CollaborationClient.h")) nil [7254 7623])
            ("LIBCOLLABORATIONSERVER_SOURCES" variable (:default-value ("Collaboration/CollaborationProtocol.cpp" "Collaboration/ProtocolServer.cpp" "Collaboration/CollaborationServer.cpp")) nil [7684 7898])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_PLUGINDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(COLLABORATIONPLUGINSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [7899 8071])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_CONFIGFILENAME='\"$(ETCINSTALLDIR)/Collaboration.cfg\"'")) nil [8071 8198])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("PACKAGES" "+=" "$(MYCOLLABORATIONSERVER_DEPENDS)")) nil [8199 8288])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCOLLABORATIONSERVER_INCLUDE)")) nil [8288 8387])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("CFLAGS" "+=" "$(MYCOLLABORATIONSERVER_CFLAGS)")) nil [8387 8473])
            ("$(call LIBRARYNAME,libCollaborationServer)" function (:arguments ("$(LIBCOLLABORATIONSERVER_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [8473 8571])
            (".PHONY" function (:arguments ("libCollaborationServer")) nil [8571 8602])
            ("libCollaborationServer" function (:arguments ("$(call LIBRARYNAME,libCollaborationServer)")) nil [8602 8669])
            ("LIBCOLLABORATIONCLIENT_SOURCES" variable (:default-value ("Collaboration/CollaborationProtocol.cpp" "Collaboration/ProtocolClient.cpp" "Collaboration/CollaborationClient.cpp")) nil [8730 8944])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_PLUGINDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(COLLABORATIONPLUGINSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [8945 9117])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DCOLLABORATION_CONFIGFILENAME='\"$(ETCINSTALLDIR)/Collaboration.cfg\"'")) nil [9117 9244])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("PACKAGES" "+=" "$(MYCOLLABORATIONCLIENT_DEPENDS)")) nil [9245 9334])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCOLLABORATIONCLIENT_INCLUDE)")) nil [9334 9433])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("CFLAGS" "+=" "$(MYCOLLABORATIONCLIENT_CFLAGS)")) nil [9433 9519])
            ("$(call LIBRARYNAME,libCollaborationClient)" function (:arguments ("$(LIBCOLLABORATIONCLIENT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [9519 9617])
            (".PHONY" function (:arguments ("libCollaborationClient")) nil [9617 9648])
            ("libCollaborationClient" function (:arguments ("$(call LIBRARYNAME,libCollaborationClient)")) nil [9648 9715])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONSERVER" "MYMISC")) nil [9762 9834])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/CollaborationServerMain.o")) nil [9834 9901])
            (".PHONY" function (:arguments ("CollaborationServer")) nil [9901 9929])
            ("CollaborationServer" function (:arguments ("$(EXEDIR)/CollaborationServer")) nil [9929 9980])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONCLIENT" "MYVRUI" "MYGLMOTIF" "MYMISC")) nil [10027 10120])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/CollaborationClientTest.o")) nil [10120 10191])
            (".PHONY" function (:arguments ("CollaborationClientTest")) nil [10191 10223])
            ("CollaborationClientTest" function (:arguments ("$(EXEDIR)/CollaborationClientTest")) nil [10223 10282])
            ("$(call PLUGINNAME,%)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [10374 10422])
            ("$(call PLUGINNAME,%)" function (:arguments ("$(OBJDIR)/Collaboration/%.o")) nil [10422 10500])
            ("$(SERVERPLUGIN_NAMES:%=$(call PLUGINNAME,%))" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONSERVER")) nil [10758 10838])
            ("$(CLIENTPLUGIN_NAMES:%=$(call PLUGINNAME,%))" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONCLIENT")) nil [10838 10918])
            ("$(call PLUGINNAME,CheriaServer)" function (:arguments ("$(OBJDIR)/Collaboration/CheriaProtocol.o" "$(OBJDIR)/Collaboration/CheriaServer.o")) nil [10919 11067])
            ("$(call PLUGINNAME,CheriaClient)" function (:arguments ("$(OBJDIR)/Collaboration/CheriaProtocol.o" "$(OBJDIR)/Collaboration/CheriaClient.o")) nil [11068 11216])
            ("$(call PLUGINNAME,GrapheinServer)" function (:arguments ("PACKAGES" "+=" "MYGLWRAPPERS")) nil [11217 11277])
            ("$(call PLUGINNAME,GrapheinServer)" function (:arguments ("$(OBJDIR)/Collaboration/GrapheinProtocol.o" "$(OBJDIR)/Collaboration/GrapheinServer.o")) nil [11277 11433])
            ("$(call PLUGINNAME,GrapheinClient)" function (:arguments ("$(OBJDIR)/Collaboration/GrapheinProtocol.o" "$(OBJDIR)/Collaboration/GrapheinClient.o")) nil [11434 11590])
            ("$(call PLUGINNAME,AgoraServer)" function (:arguments ("$(OBJDIR)/Collaboration/AgoraProtocol.o" "$(OBJDIR)/Collaboration/AgoraServer.o")) nil [11591 11735])
            ("$(call PLUGINNAME,AgoraClient)" function (:arguments ("PACKAGES" "+=" "MYALSUPPORT" "MYVIDEO" "MYSOUND")) nil [11736 11808])
            (".SECONDARY" function (:arguments ("$(SERVERPLUGIN_NAMES:%=$(OBJDIR)/Collaboration/%.o)")) nil [12406 12470])
            (".SECONDARY" function (:arguments ("$(CLIENTPLUGIN_NAMES:%=$(OBJDIR)/Collaboration/%.o)")) nil [12470 12534])
            ("$(call VISLETNAME,%)" function (:arguments ("PACKAGES" "+=" "MYCOLLABORATIONCLIENT")) nil [12621 12677])
            ("$(call VISLETNAME,%)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [12677 12725])
            ("$(call VISLETNAME,%)" function (:arguments ("$(OBJDIR)/%Vislet.o")) nil [12725 12795])
            ("$(call VISLETNAME,CollaborationClient)" function (:arguments ("$(OBJDIR)/CollaborationClientVislet.o")) nil [13015 13093])
            (".SECONDARY" function (:arguments ("$(VISLET_NAMES:%=$(OBJDIR)/%Vislet.o)")) nil [13149 13199])
            ("$(MAKECONFIGFILE)" function (:arguments ("config")) nil [13535 14200])
            ("install" function (:arguments ("all")) nil [14631 14644])
            ("uninstall" function nil nil [16203 16969]))          
      :file "makefile"
      :pointmax 16969
      :fsize 16968
      :lastmodtime '(21002 45272 0 0)
      :unmatched-syntax '((shell-command 16916 . 16968) (bol 16915 . 16915) (shell-command 16144 . 16201) (bol 16143 . 16143) (shell-command 16070 . 16142) (bol 16069 . 16069) (shell-command 16039 . 16068) (bol 16038 . 16038) (shell-command 15999 . 16037) (bol 15998 . 15998) (shell-command 15870 . 15932) (bol 15869 . 15869) (shell-command 15840 . 15868) (bol 15839 . 15839) (shell-command 15799 . 15838) (bol 15798 . 15798) (shell-command 15698 . 15745) (bol 15697 . 15697) (shell-command 15661 . 15696) (bol 15660 . 15660) (shell-command 15628 . 15659) (bol 15627 . 15627) (shell-command 15520 . 15578) (bol 15519 . 15519) (shell-command 15468 . 15518) (bol 15467 . 15467) (shell-command 15432 . 15466) (bol 15431 . 15431) (shell-command 15295 . 15364) (bol 15294 . 15294) (shell-command 15232 . 15293) (bol 15231 . 15231) (shell-command 15194 . 15230) (bol 15193 . 15193) (shell-command 15044 . 15113) (bol 15043 . 15043) (shell-command 15006 . 15042) (bol 15005 . 15005) (shell-command 14966 . 15004) (bol 14965 . 14965) (shell-command 14936 . 14964) (bol 14935 . 14935) (shell-command 14905 . 14934) (bol 14904 . 14904) (shell-command 14774 . 14857) (bol 14773 . 14773) (shell-command 14727 . 14772) (bol 14726 . 14726) (shell-command 14693 . 14725) (bol 14692 . 14692) (semantic-list 14607 . 14623) (punctuation 14606 . 14607) (symbol 14605 . 14606) (semantic-list 14590 . 14605) (punctuation 14589 . 14590) (punctuation 14587 . 14588) (punctuation 14586 . 14587) (symbol 14571 . 14585) (bol 14569 . 14569) (semantic-list 14551 . 14568) (punctuation 14550 . 14551) (symbol 14549 . 14550) (semantic-list 14534 . 14549) (punctuation 14533 . 14534) (punctuation 14531 . 14532) (punctuation 14530 . 14531) (symbol 14514 . 14529) (bol 14512 . 14512) (semantic-list 14496 . 14511) (punctuation 14495 . 14496) (symbol 14494 . 14495) (semantic-list 14479 . 14494) (punctuation 14478 . 14479) (punctuation 14476 . 14477) (punctuation 14475 . 14476) (symbol 14461 . 14474) (bol 14459 . 14459) (semantic-list 14436 . 14458) (punctuation 14435 . 14436) (symbol 14434 . 14435) (semantic-list 14419 . 14434) (punctuation 14418 . 14419) (punctuation 14416 . 14417) (punctuation 14415 . 14416) (symbol 14394 . 14414) (bol 14392 . 14392) (semantic-list 14373 . 14391) (punctuation 14372 . 14373) (symbol 14371 . 14372) (semantic-list 14356 . 14371) (punctuation 14355 . 14356) (punctuation 14353 . 14354) (punctuation 14352 . 14353) (symbol 14335 . 14351) (bol 14333 . 14333) (semantic-list 14317 . 14332) (punctuation 14316 . 14317) (symbol 14315 . 14316) (semantic-list 14300 . 14315) (punctuation 14299 . 14300) (punctuation 14297 . 14298) (punctuation 14296 . 14297) (symbol 14282 . 14295) (bol 14280 . 14280) (semantic-list 14261 . 14279) (punctuation 14260 . 14261) (symbol 14259 . 14260) (semantic-list 14244 . 14259) (punctuation 14243 . 14244) (punctuation 14241 . 14242) (punctuation 14240 . 14241) (symbol 14223 . 14239) (bol 14221 . 14221) (shell-command 12924 . 13007) (bol 12923 . 12923) (shell-command 12903 . 12922) (bol 12902 . 12902) (shell-command 12814 . 12896) (bol 12813 . 12813) (symbol 12313 . 12341) (semantic-list 12305 . 12313) (punctuation 12304 . 12305) (symbol 12237 . 12267) (semantic-list 12229 . 12237) (punctuation 12228 . 12229) (punctuation 12226 . 12227) (semantic-list 12197 . 12226) (punctuation 12196 . 12197) (bol 12194 . 12194) (symbol 12160 . 12188) (semantic-list 12152 . 12160) (punctuation 12151 . 12152) (symbol 12084 . 12114) (semantic-list 12076 . 12084) (punctuation 12075 . 12076) (symbol 12009 . 12038) (semantic-list 12001 . 12009) (punctuation 12000 . 12001) (symbol 11934 . 11963) (semantic-list 11926 . 11934) (punctuation 11925 . 11926) (punctuation 11923 . 11924) (semantic-list 11894 . 11923) (punctuation 11893 . 11894) (bol 11891 . 11891) (symbol 11885 . 11890) (punctuation 11883 . 11884) (punctuation 11882 . 11883) (symbol 11873 . 11881) (punctuation 11871 . 11872) (semantic-list 11842 . 11871) (punctuation 11841 . 11842) (bol 11839 . 11839) (shell-command 10629 . 10712) (bol 10628 . 10628) (shell-command 10608 . 10627) (bol 10607 . 10607) (shell-command 10519 . 10601) (bol 10518 . 10518) (shell-command 6211 . 6258) (bol 6210 . 6210) (shell-command 6158 . 6204) (bol 6157 . 6157) (shell-command 6075 . 6127) (bol 6074 . 6074) (shell-command 6017 . 6068) (bol 6016 . 6016) (shell-command 5925 . 5977) (bol 5924 . 5924) (shell-command 5867 . 5918) (bol 5866 . 5866) (semantic-list 3115 . 3138) (punctuation 3114 . 3115) (symbol 3113 . 3114) (semantic-list 3101 . 3113) (punctuation 3100 . 3101) (punctuation 3099 . 3100) (symbol 3088 . 3099) (bol 3086 . 3086) (semantic-list 3074 . 3085) (punctuation 3073 . 3074) (punctuation 3071 . 3072) (punctuation 3070 . 3071) (symbol 3063 . 3069) (bol 3061 . 3061) (symbol 3049 . 3055) (punctuation 3047 . 3048) (symbol 3037 . 3046) (bol 3035 . 3035) (symbol 3032 . 3034) (semantic-list 3025 . 3032) (punctuation 3024 . 3025) (symbol 3023 . 3024) (semantic-list 3020 . 3023) (punctuation 3019 . 3020) (symbol 3018 . 3019) (semantic-list 3006 . 3018) (punctuation 3005 . 3006) (punctuation 3003 . 3004) (symbol 2991 . 3002) (bol 2989 . 2989) (symbol 1365 . 1371) (semantic-list 1351 . 1365) (punctuation 1350 . 1351) (punctuation 1348 . 1349) (punctuation 1347 . 1348) (symbol 1334 . 1346) (bol 1332 . 1332)))
    (semanticdb-table "CollaborationServerMain.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("string.h" include (:system-flag t) nil [1079 1098])
            ("stdlib.h" include (:system-flag t) nil [1099 1118])
            ("signal.h" include (:system-flag t) nil [1119 1138])
            ("iostream" include (:system-flag t) nil [1139 1158])
            ("Misc/SelfDestructPointer.h" include (:system-flag t) nil [1159 1196])
            ("Misc/Time.h" include (:system-flag t) nil [1197 1219])
            ("Collaboration/CollaborationServer.h" include (:system-flag t) nil [1221 1267])
            ("runServerLoop" variable
               (:typemodifiers ("volatile")
                :default-value "true"
                :type "bool")
                nil [1269 1302])
            ("termSignalHandler" function
               (:arguments 
                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [1327 1331]))                  
                :type "void")
                nil [1304 1359])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [1370 1379])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1379 1392]))                  
                :type "int")
                nil [1361 3703]))          
      :file "CollaborationServerMain.cpp"
      :pointmax 3704
      :fsize 3717
      :lastmodtime '(20319 56089 0 0)
      :unmatched-syntax nil))
  :file "!Users!nshetty!Downloads!CollaborationInfrastructure-2.6!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
