;; Object Vrui/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Vrui/"
  :tables
  (list
    (semanticdb-table "makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("INSTALLDIR" variable (:default-value ("/apps/Vrui-4.2")) nil [1575 1604])
            ("VRUI_PACKAGEROOT" variable (:default-value ("$(shell pwd)")) nil [1873 1906])
            ("VRUI_MAKEDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/BuildRoot")) nil [1906 1952])
            ("$(VRUI_MAKEDIR)/SystemDefinitions" include nil nil [2035 2077])
            ("$(VRUI_MAKEDIR)/Packages.System" include nil nil [2077 2117])
            ("OPENVR_BASEDIR" variable (:default-value ("$(PWD)/Contributed/OpenVR")) nil [4130 4173])
            ("$(VRUI_MAKEDIR)/Packages.Vrui" include nil nil [5365 5403])
            ("USE_RPATH" variable (:default-value ("1")) nil [6086 6100])
            ("GLSUPPORT_USE_TLS" variable (:default-value ("0")) nil [6763 6785])
            ("LINUX_INPUT_H_HAS_STRUCTS" variable (:default-value ("1")) nil [7097 7127])
            ("VRUI_VRWINDOW_USE_SWAPGROUPS" variable (:default-value ("0")) nil [7468 7501])
            ("VRDEVICES_USE_INPUT_ABSTRACTION" variable (:default-value ("0")) nil [7692 7728])
            ("VRDEVICES_USE_BLUETOOTH" variable (:default-value ("$(SYSTEM_HAVE_BLUETOOTH)")) nil [8151 8202])
            ("VRUI_VERSION" variable (:default-value ("4002004")) nil [8452 8475])
            ("MAJORLIBVERSION" variable (:default-value ("4")) nil [8475 8495])
            ("MINORLIBVERSION" variable (:default-value ("2")) nil [8495 8515])
            ("VRUI_NAME" variable (:default-value ("Vrui-$(MAJORLIBVERSION).$(MINORLIBVERSION)")) nil [8515 8571])
            ("LIBDESTDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/$(MYLIBEXT)")) nil [8700 8746])
            ("VRUI_INCLUDEDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)")) nil [8807 8845])
            ("VRUI_LIBDIR" variable (:default-value ("$(VRUI_PACKAGEROOT)/$(MYLIBEXT)")) nil [8845 8891])
            ("PLUGININSTALLDIR" variable (:default-value ("$(LIBINSTALLDIR)")) nil [10507 10543])
            ("PACKAGES" variable nil nil [11791 11803])
            ("LIBRARIES" variable nil nil [11979 11992])
            ("PLUGINS" variable nil nil [11992 12003])
            ("EXECUTABLES" variable nil nil [12003 12018])
            ("LIBRARY_NAMES" variable (:default-value ("libMisc" "libRealtime" "libThreads")) nil [12047 12139])
            ("LIBRARY_NAMES" variable (:default-value ("libIO" "libPlugins" "libComm" "libCluster" "libMath" "libGeometry" "libGLWrappers" "libGLSupport" "libGLXSupport" "libGLGeometry" "libImages" "libGLMotif" "libSound" "libVideo" "libALSupport" "libSceneGraph" "libVrui")) nil [12272 12812])
            ("LIBRARIES" variable (:default-value ("$(LIBRARY_NAMES:%=$(call LIBRARYNAME,%))")) nil [12813 12867])
            ("VRTOOLS_SOURCES" variable (:default-value ("$(wildcard Vrui/Tools/*.cpp)")) nil [12911 12958])
            ("VRTOOLSDIREXT" variable (:default-value ("VRTools")) nil [12959 12983])
            ("VRTOOLSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRTOOLSDIREXT)")) nil [12983 13026])
            ("VRTOOLS" variable (:default-value ("$(VRTOOLS_SOURCES:Vrui/Tools/%.cpp=$(VRTOOLSDIR)/lib%.$(PLUGINFILEEXT))")) nil [13026 13108])
            ("PLUGINS" variable (:default-value ("$(VRTOOLS)")) nil [13108 13130])
            ("VRVISLETS_SOURCES" variable (:default-value ("$(wildcard Vrui/Vislets/*.cpp)")) nil [13173 13224])
            ("VRVISLETSDIREXT" variable (:default-value ("VRVislets")) nil [13225 13253])
            ("VRVISLETSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRVISLETSDIREXT)")) nil [13253 13301])
            ("VRVISLETS" variable (:default-value ("$(VRVISLETS_SOURCES:Vrui/Vislets/%.cpp=$(VRVISLETSDIR)/lib%.$(PLUGINFILEEXT))")) nil [13301 13391])
            ("PLUGINS" variable (:default-value ("$(VRVISLETS)")) nil [13391 13415])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/VRDeviceDaemon")) nil [13452 13492])
            ("VRDEVICES_IGNORE_SOURCES" variable (:default-value ("VRDeviceDaemon/VRDevices/Joystick.cpp" "VRDeviceDaemon/VRDevices/VRPNConnection.cpp" "VRDeviceDaemon/VRDevices/Wiimote.cpp" "VRDeviceDaemon/VRDevices/WiimoteTracker.cpp" "VRDeviceDaemon/VRDevices/RazerHydra.cpp" "VRDeviceDaemon/VRDevices/RazerHydraDevice.cpp" "VRDeviceDaemon/VRDevices/OculusRift.cpp" "VRDeviceDaemon/VRDevices/OpenVRHost.cpp")) nil [13605 14164])
            ("VRDEVICES_SOURCES" variable (:default-value ("$(filter-out $(VRDEVICES_IGNORE_SOURCES),$(wildcard VRDeviceDaemon/VRDevices/*.cpp))")) nil [14165 14270])
            ("VRDEVICESDIREXT" variable (:default-value ("VRDevices")) nil [14767 14795])
            ("VRDEVICESDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRDEVICESDIREXT)")) nil [14795 14843])
            ("VRDEVICES" variable (:default-value ("$(VRDEVICES_SOURCES:VRDeviceDaemon/VRDevices/%.cpp=$(VRDEVICESDIR)/lib%.$(PLUGINFILEEXT))")) nil [14843 14945])
            ("PLUGINS" variable (:default-value ("$(VRDEVICES)")) nil [14945 14969])
            ("VRCALIBRATORS_SOURCES" variable (:default-value ("$(wildcard VRDeviceDaemon/VRCalibrators/*.cpp)")) nil [15013 15084])
            ("VRCALIBRATORSDIREXT" variable (:default-value ("VRCalibrators")) nil [15085 15121])
            ("VRCALIBRATORSDIR" variable (:default-value ("$(LIBDESTDIR)/$(VRCALIBRATORSDIREXT)")) nil [15121 15177])
            ("VRCALIBRATORS" variable (:default-value ("$(VRCALIBRATORS_SOURCES:VRDeviceDaemon/VRCalibrators/%.cpp=$(VRCALIBRATORSDIR)/lib%.$(PLUGINFILEEXT))")) nil [15177 15295])
            ("PLUGINS" variable (:default-value ("$(VRCALIBRATORS)")) nil [15295 15323])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/DeviceTest" "$(EXEDIR)/TrackingTest")) nil [15541 15617])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/RoomSetup")) nil [15661 15696])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/EyeCalibrator")) nil [15738 15777])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/PrintInputDeviceDataFile")) nil [15829 15879])
            ("EXECUTABLES" variable (:default-value ("$(EXEDIR)/XBackground" "$(EXEDIR)/MeasureEnvironment" "$(EXEDIR)/ScreenCalibrator" "$(EXEDIR)/AlignTrackingMarkers" "$(EXEDIR)/SampleTrackerField")) nil [15919 16140])
            ("MAKECONFIGFILE" variable (:default-value ("BuildRoot/Configuration.Vrui")) nil [16430 16476])
            ("PKGCONFIGFILE" variable (:default-value ("Share/Vrui.pc")) nil [16526 16556])
            ("TEMPLATEMAKEFILE" variable (:default-value ("BuildRoot/makefile")) nil [16598 16636])
            ("ALL" variable (:default-value ("$(LIBRARIES)" "$(EXECUTABLES)" "$(PLUGINS)")) nil [16699 16744])
            (".PHONY" function (:arguments ("all")) nil [16745 16757])
            ("all" function (:arguments ("$(ALL)")) nil [16757 16769])
            ("$(PLUGINS)" function (:arguments ("|" "$(LIBRARIES)")) nil [16828 16855])
            ("$(EXECUTABLES)" function (:arguments ("|" "$(LIBRARIES)")) nil [16855 16886])
            (".PHONY" function (:arguments ("config" "config-invalidate")) nil [17105 17138])
            ("config" function (:arguments ("config-invalidate" "$(DEPDIR)/config")) nil [17138 17181])
            ("config-invalidate" function nil nil [17182 17235])
            ("$(DEPDIR)" function nil nil [17236 17331])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Realtime" "$(DEPDIR)/Configure-Threads" "$(DEPDIR)/Configure-USB" "$(DEPDIR)/Configure-GLSupport" "$(DEPDIR)/Configure-Images" "$(DEPDIR)/Configure-Sound" "$(DEPDIR)/Configure-ALSupport" "$(DEPDIR)/Configure-Video" "$(DEPDIR)/Configure-SceneGraph" "$(DEPDIR)/Configure-Vrui" "$(DEPDIR)/Configure-VRDeviceDaemon")) nil [17495 18196])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Install")) nil [19448 19586])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Makefiles")) nil [19587 19660])
            (".PHONY" function (:arguments ("extraclean")) nil [19866 19885])
            ("extraclean" function nil nil [19885 20082])
            (".PHONY" function (:arguments ("extrasqueakyclean")) nil [20083 20109])
            ("extrasqueakyclean" function nil nil [20109 20305])
            ("$(VRUI_MAKEDIR)/BasicMakefile" include nil nil [20331 20369])
            ("MISC_HEADERS" variable (:default-value ("$(wildcard Misc/*.h)" "$(wildcard Misc/*.icpp)")) nil [20614 20691])
            ("MISC_SOURCES" variable (:default-value ("$(wildcard Misc/*.cpp)")) nil [20692 20730])
            ("$(MISC_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [20731 20787])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("PACKAGES" "+=" "$(MYMISC_DEPENDS)")) nil [20788 20847])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYMISC_INCLUDE)")) nil [20847 20916])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("|" "$(call DEPENDENCIES,MYMISC)")) nil [20916 20975])
            ("$(call LIBRARYNAME,libMisc)" function (:arguments ("$(MISC_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [20975 21040])
            (".PHONY" function (:arguments ("libMisc")) nil [21040 21056])
            ("libMisc" function (:arguments ("$(call LIBRARYNAME,libMisc)")) nil [21056 21093])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Begin")) nil [21145 21201])
            ("REALTIME_HEADERS" variable (:default-value ("$(wildcard Realtime/*.h)" "$(wildcard Realtime/*.icpp)")) nil [21840 21933])
            ("REALTIME_SOURCES" variable (:default-value ("$(wildcard Realtime/*.cpp)")) nil [21934 21980])
            ("$(REALTIME_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [21981 22041])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("PACKAGES" "+=" "$(MYREALTIME_DEPENDS)")) nil [22042 22109])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYREALTIME_INCLUDE)")) nil [22109 22186])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("|" "$(call DEPENDENCIES,MYREALTIME)")) nil [22186 22253])
            ("$(call LIBRARYNAME,libRealtime)" function (:arguments ("$(REALTIME_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [22253 22326])
            (".PHONY" function (:arguments ("libRealtime")) nil [22326 22346])
            ("libRealtime" function (:arguments ("$(call LIBRARYNAME,libRealtime)")) nil [22346 22391])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Realtime")) nil [22440 22498])
            ("THREADS_HEADERS" variable (:default-value ("$(wildcard Threads/*.h)" "$(wildcard Threads/*.icpp)")) nil [23747 23836])
            ("THREADS_SOURCES" variable (:default-value ("$(wildcard Threads/*.cpp)")) nil [23837 23881])
            ("$(THREADS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [23882 23941])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("PACKAGES" "+=" "$(MYTHREADS_DEPENDS)")) nil [23942 24007])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYTHREADS_INCLUDE)")) nil [24007 24082])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("|" "$(call DEPENDENCIES,MYTHREADS)")) nil [24082 24147])
            ("$(call LIBRARYNAME,libThreads)" function (:arguments ("$(THREADS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [24147 24218])
            (".PHONY" function (:arguments ("libThreads")) nil [24218 24237])
            ("libThreads" function (:arguments ("$(call LIBRARYNAME,libThreads)")) nil [24237 24280])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Threads")) nil [24318 24371])
            ("USB_HEADERS" variable (:default-value ("$(wildcard USB/*.h)" "$(wildcard USB/*.icpp)")) nil [25343 25416])
            ("USB_SOURCES" variable (:default-value ("$(wildcard USB/*.cpp)")) nil [25417 25453])
            ("$(USB_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [25454 25509])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("PACKAGES" "+=" "$(MYUSB_DEPENDS)")) nil [25510 25567])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYUSB_INCLUDE)")) nil [25567 25634])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("|" "$(call DEPENDENCIES,MYUSB)")) nil [25634 25691])
            ("$(call LIBRARYNAME,libUSB)" function (:arguments ("$(USB_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [25691 25754])
            (".PHONY" function (:arguments ("libUSB")) nil [25754 25769])
            ("libUSB" function (:arguments ("$(call LIBRARYNAME,libUSB)")) nil [25769 25804])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-USB")) nil [25850 25902])
            ("RAWHID_HEADERS" variable (:default-value ("$(wildcard RawHID/*.h)" "$(wildcard RawHID/*.icpp)")) nil [26106 26191])
            ("RAWHID_SOURCES" variable (:default-value ("$(wildcard RawHID/*.cpp)" "$(wildcard RawHID/Internal/*.cpp)")) nil [26192 26287])
            ("$(RAWHID_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [26288 26346])
            ("$(call LIBRARYNAME,libRawHID)" function (:arguments ("PACKAGES" "+=" "$(MYRAWHID_DEPENDS)")) nil [26347 26410])
            ("$(call LIBRARYNAME,libRawHID)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYRAWHID_INCLUDE)")) nil [26410 26483])
            ("$(call LIBRARYNAME,libRawHID)" function (:arguments ("|" "$(call DEPENDENCIES,MYRAWHID)")) nil [26483 26546])
            ("$(call LIBRARYNAME,libRawHID)" function (:arguments ("$(RAWHID_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [26546 26615])
            (".PHONY" function (:arguments ("libRawHID")) nil [26615 26633])
            ("libRawHID" function (:arguments ("$(call LIBRARYNAME,libRawHID)")) nil [26633 26674])
            ("IO_HEADERS" variable (:default-value ("$(wildcard IO/*.h)" "$(wildcard IO/*.icpp)")) nil [26711 26780])
            ("IO_SOURCES" variable (:default-value ("$(wildcard IO/*.cpp)")) nil [26781 26815])
            ("$(IO_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [26816 26870])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("PACKAGES" "+=" "$(MYIO_DEPENDS)")) nil [26871 26926])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYIO_INCLUDE)")) nil [26926 26991])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("|" "$(call DEPENDENCIES,MYIO)")) nil [26991 27046])
            ("$(call LIBRARYNAME,libIO)" function (:arguments ("$(IO_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [27046 27107])
            (".PHONY" function (:arguments ("libIO")) nil [27107 27121])
            ("libIO" function (:arguments ("$(call LIBRARYNAME,libIO)")) nil [27121 27154])
            ("PLUGINS_HEADERS" variable (:default-value ("$(wildcard Plugins/*.h)" "$(wildcard Plugins/*.icpp)")) nil [27201 27290])
            ("PLUGINS_SOURCES" variable (:default-value ("$(wildcard Plugins/*.cpp)")) nil [27291 27335])
            ("$(PLUGINS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [27336 27395])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("PACKAGES" "+=" "$(MYPLUGINS_DEPENDS)")) nil [27396 27461])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYPLUGINS_INCLUDE)")) nil [27461 27536])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("|" "$(call DEPENDENCIES,MYPLUGINS)")) nil [27536 27601])
            ("$(call LIBRARYNAME,libPlugins)" function (:arguments ("$(PLUGINS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [27601 27672])
            (".PHONY" function (:arguments ("libPlugins")) nil [27672 27691])
            ("libPlugins" function (:arguments ("$(call LIBRARYNAME,libPlugins)")) nil [27691 27734])
            ("COMM_HEADERS" variable (:default-value ("$(wildcard Comm/*.h)" "$(wildcard Comm/*.icpp)")) nil [27785 27862])
            ("COMM_SOURCES" variable (:default-value ("$(wildcard Comm/*.cpp)")) nil [27863 27901])
            ("$(COMM_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [27902 27958])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("PACKAGES" "+=" "$(MYCOMM_DEPENDS)")) nil [27959 28018])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCOMM_INCLUDE)")) nil [28018 28087])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("|" "$(call DEPENDENCIES,MYCOMM)")) nil [28087 28146])
            ("$(call LIBRARYNAME,libComm)" function (:arguments ("$(COMM_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [28146 28211])
            (".PHONY" function (:arguments ("libComm")) nil [28211 28227])
            ("libComm" function (:arguments ("$(call LIBRARYNAME,libComm)")) nil [28227 28264])
            ("CLUSTER_HEADERS" variable (:default-value ("$(wildcard Cluster/*.h)" "$(wildcard Cluster/*.icpp)")) nil [28314 28403])
            ("CLUSTER_SOURCES" variable (:default-value ("$(wildcard Cluster/*.cpp)")) nil [28404 28448])
            ("$(CLUSTER_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [28449 28508])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("PACKAGES" "+=" "$(MYCLUSTER_DEPENDS)")) nil [28509 28574])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYCLUSTER_INCLUDE)")) nil [28574 28649])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("|" "$(call DEPENDENCIES,MYCLUSTER)")) nil [28649 28714])
            ("$(call LIBRARYNAME,libCluster)" function (:arguments ("$(CLUSTER_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [28714 28785])
            (".PHONY" function (:arguments ("libCluster")) nil [28785 28804])
            ("libCluster" function (:arguments ("$(call LIBRARYNAME,libCluster)")) nil [28804 28847])
            ("MATH_HEADERS" variable (:default-value ("$(wildcard Math/*.h)" "$(wildcard Math/*.icpp)")) nil [28891 28968])
            ("MATH_SOURCES" variable (:default-value ("$(wildcard Math/*.cpp)")) nil [28969 29007])
            ("$(MATH_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [29008 29064])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("PACKAGES" "+=" "$(MYMATH_DEPENDS)")) nil [29065 29124])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYMATH_INCLUDE)")) nil [29124 29193])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("|" "$(call DEPENDENCIES,MYMATH)")) nil [29193 29252])
            ("$(call LIBRARYNAME,libMath)" function (:arguments ("$(MATH_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [29252 29317])
            (".PHONY" function (:arguments ("libMath")) nil [29317 29333])
            ("libMath" function (:arguments ("$(call LIBRARYNAME,libMath)")) nil [29333 29370])
            ("GEOMETRY_HEADERS" variable (:default-value ("$(wildcard Geometry/*.h)" "$(wildcard Geometry/*.icpp)")) nil [29422 29515])
            ("GEOMETRY_SOURCES" variable (:default-value ("$(wildcard Geometry/*.cpp)")) nil [29516 29562])
            ("$(GEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [29563 29623])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("PACKAGES" "+=" "$(MYGEOMETRY_DEPENDS)")) nil [29624 29691])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGEOMETRY_INCLUDE)")) nil [29691 29768])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("|" "$(call DEPENDENCIES,MYGEOMETRY)")) nil [29768 29835])
            ("$(call LIBRARYNAME,libGeometry)" function (:arguments ("$(GEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [29835 29908])
            (".PHONY" function (:arguments ("libGeometry")) nil [29908 29928])
            ("libGeometry" function (:arguments ("$(call LIBRARYNAME,libGeometry)")) nil [29928 29973])
            ("MACOSX_HEADERS" variable (:default-value ("$(wildcard MacOSX/*.h)" "$(wildcard MacOSX/*.icpp)")) nil [30018 30103])
            ("GLWRAPPERS_HEADERS" variable (:default-value ("GL/GLTexCoordTemplates.h" "GL/GLMultiTexCoordTemplates.h" "GL/GLColorTemplates.h" "GL/GLSecondaryColorTemplates.h" "GL/GLNormalTemplates.h" "GL/GLVertexTemplates.h" "GL/GLIndexTemplates.h" "GL/GLPrimitiveTemplates.h" "GL/GLScalarLimits.h" "GL/GLScalarConverter.h" "GL/GLColor.h" "GL/GLColorOperations.h" "GL/GLVector.h" "GL/GLBox.h" "GL/GLVertexArrayTemplates.h" "GL/GLVertexArrayParts.h" "GL/GLVertex.h" "GL/GLVertex.icpp" "GL/GLFogEnums.h" "GL/GLFogTemplates.h" "GL/GLFog.h" "GL/GLLightEnums.h" "GL/GLLightTemplates.h" "GL/GLLight.h" "GL/GLLightModelEnums.h" "GL/GLLightModelTemplates.h" "GL/GLMaterialEnums.h" "GL/GLMaterialTemplates.h" "GL/GLMaterial.h" "GL/GLTexEnvEnums.h" "GL/GLTexEnvTemplates.h" "GL/GLMatrixEnums.h" "GL/GLMatrixTemplates.h" "GL/GLMiscTemplates.h" "GL/GLGetTemplates.h" "GL/GLGetPrimitiveTemplates.h" "GL/GLGetFogTemplates.h" "GL/GLGetLightTemplates.h" "GL/GLGetMaterialTemplates.h" "GL/GLGetTexEnvTemplates.h" "GL/GLGetMatrixTemplates.h" "GL/GLGetMiscTemplates.h")) nil [30155 32003])
            ("GLWRAPPERS_SOURCES" variable (:default-value ("GL/GLScalarLimits.cpp" "GL/GLColor.cpp" "GL/GLVertex.cpp" "GL/GLFog.cpp" "GL/GLLight.cpp" "GL/GLMaterial.cpp")) nil [32004 32239])
            ("$(GLWRAPPERS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [32240 32302])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("PACKAGES" "+=" "$(MYGLWRAPPERS_DEPENDS)")) nil [32303 32374])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLWRAPPERS_INCLUDE)")) nil [32374 32455])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("CFLAGS" "+=" "$(MYGLWRAPPERS_CFLAGS)")) nil [32455 32523])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLWRAPPERS)")) nil [32523 32594])
            ("$(call LIBRARYNAME,libGLWrappers)" function (:arguments ("$(GLWRAPPERS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [32594 32671])
            (".PHONY" function (:arguments ("libGLWrappers")) nil [32671 32693])
            ("libGLWrappers" function (:arguments ("$(call LIBRARYNAME,libGLWrappers)")) nil [32693 32742])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-RawHID")) nil [32789 32847])
            ("GLSUPPORT_HEADERS" variable (:default-value ("GL/Config.h" "GL/GLPrintError.h" "GL/GLMarshallers.h" "GL/GLMarshallers.icpp" "GL/GLValueCoders.h" "GL/GLLightTracker.h" "GL/GLClipPlaneTracker.h" "GL/TLSHelper.h" "GL/GLObject.h" "GL/GLContextData.h" "GL/GLExtensions.h" "GL/GLExtensionManager.h" "GL/GLTextureObject.h" "GL/GLShader.h" "GL/GLGeometryShader.h" "GL/GLAutomaticShader.h" "GL/GLLineLightingShader.h" "GL/GLColorMap.h" "GL/GLNumberRenderer.h" "GL/GLFont.h" "GL/GLString.h" "GL/GLLabel.h" "GL/GLLineIlluminator.h" "GL/GLModels.h")) nil [33733 34681])
            ("GLSUPPORTEXTENSION_HEADERS" variable (:default-value ("$(wildcard GL/Extensions/*.h)" "$(wildcard GL/Extensions/*.icpp)")) nil [34682 34805])
            ("GLSUPPORT_SOURCES" variable (:default-value ("GL/GLPrintError.cpp" "GL/GLMarshallers.cpp" "GL/GLValueCoders.cpp" "GL/GLLightTracker.cpp" "GL/GLClipPlaneTracker.cpp" "GL/GLObject.cpp" "GL/Internal/GLThingManager.cpp" "GL/GLContextData.cpp" "GL/GLExtensions.cpp" "GL/GLExtensionManager.cpp" "$(wildcard GL/Extensions/*.cpp)" "GL/GLTextureObject.cpp" "GL/GLShader.cpp" "GL/GLGeometryShader.cpp" "GL/GLAutomaticShader.cpp" "GL/GLLineLightingShader.cpp" "GL/GLColorMap.cpp" "GL/GLNumberRenderer.cpp" "GL/GLFont.cpp" "GL/GLString.cpp" "GL/GLLabel.cpp" "GL/GLLineIlluminator.cpp" "GL/GLModels.cpp")) nil [34806 35796])
            ("$(GLSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [35797 35858])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("PACKAGES" "+=" "$(MYGLSUPPORT_DEPENDS)")) nil [35859 35928])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLSUPPORT_INCLUDE)")) nil [35928 36007])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("CFLAGS" "+=" "$(MYGLSUPPORT_CFLAGS)")) nil [36007 36073])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLSUPPORT)")) nil [36073 36142])
            ("$(call LIBRARYNAME,libGLSupport)" function (:arguments ("$(GLSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [36142 36217])
            (".PHONY" function (:arguments ("libGLSupport")) nil [36217 36238])
            ("libGLSupport" function (:arguments ("$(call LIBRARYNAME,libGLSupport)")) nil [36238 36285])
            ("GLXSUPPORT_HEADERS" variable (:default-value ("GL/GLContext.h" "GL/GLWindow.h")) nil [36337 36410])
            ("GLXSUPPORT_SOURCES" variable (:default-value ("GL/GLContext.cpp" "GL/GLWindow.cpp")) nil [36411 36488])
            ("$(GLXSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [36489 36551])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("PACKAGES" "+=" "$(MYGLXSUPPORT_DEPENDS)")) nil [36552 36623])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLXSUPPORT_INCLUDE)")) nil [36623 36704])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("CFLAGS" "+=" "$(MYGLXSUPPORT_CFLAGS)")) nil [36704 36772])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLXSUPPORT)")) nil [36772 36843])
            ("$(call LIBRARYNAME,libGLXSupport)" function (:arguments ("$(GLXSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [36843 36920])
            (".PHONY" function (:arguments ("libGLXSupport")) nil [36920 36942])
            ("libGLXSupport" function (:arguments ("$(call LIBRARYNAME,libGLXSupport)")) nil [36942 36991])
            ("GLGEOMETRY_HEADERS" variable (:default-value ("GL/GLGeometryWrappers.h" "GL/GLGeometryVertex.h" "GL/GLGeometryVertex.icpp" "GL/GLTransformationWrappers.h" "GL/GLTransformationWrappers.icpp" "GL/GLFrustum.h" "GL/GLFrustum.icpp" "GL/GLPolylineTube.h")) nil [37076 37376])
            ("GLGEOMETRY_SOURCES" variable (:default-value ("GL/GLGeometryVertex.cpp" "GL/GLTransformationWrappers.cpp" "GL/GLFrustum.cpp" "GL/GLPolylineTube.cpp")) nil [37377 37562])
            ("$(GLGEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [37563 37625])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("PACKAGES" "+=" "$(MYGLGEOMETRY_DEPENDS)")) nil [37626 37697])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLGEOMETRY_INCLUDE)")) nil [37697 37778])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLGEOMETRY)")) nil [37778 37849])
            ("$(call LIBRARYNAME,libGLGeometry)" function (:arguments ("$(GLGEOMETRY_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [37849 37926])
            (".PHONY" function (:arguments ("libGLGeometry")) nil [37926 37948])
            ("libGLGeometry" function (:arguments ("$(call LIBRARYNAME,libGLGeometry)")) nil [37948 37997])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-GLSupport")) nil [38041 38099])
            ("IMAGES_HEADERS" variable (:default-value ("$(wildcard Images/*.h)" "$(wildcard Images/*.icpp)")) nil [38960 39045])
            ("IMAGES_SOURCES" variable (:default-value ("$(wildcard Images/*.cpp)")) nil [39046 39088])
            ("$(IMAGES_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [39089 39147])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("PACKAGES" "+=" "$(MYIMAGES_DEPENDS)")) nil [39148 39211])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYIMAGES_INCLUDE)")) nil [39211 39284])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("|" "$(call DEPENDENCIES,MYIMAGES)")) nil [39284 39347])
            ("$(call LIBRARYNAME,libImages)" function (:arguments ("$(IMAGES_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [39347 39416])
            (".PHONY" function (:arguments ("libImages")) nil [39416 39434])
            ("libImages" function (:arguments ("$(call LIBRARYNAME,libImages)")) nil [39434 39475])
            ("GLMOTIF_HEADERS" variable (:default-value ("$(wildcard GLMotif/*.h)" "$(wildcard GLMotif/*.icpp)")) nil [39541 39630])
            ("GLMOTIF_SOURCES" variable (:default-value ("$(wildcard GLMotif/*.cpp)")) nil [39631 39675])
            ("$(GLMOTIF_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [39676 39735])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("PACKAGES" "+=" "$(MYGLMOTIF_DEPENDS)")) nil [39736 39801])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYGLMOTIF_INCLUDE)")) nil [39801 39876])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("|" "$(call DEPENDENCIES,MYGLMOTIF)")) nil [39876 39941])
            ("$(call LIBRARYNAME,libGLMotif)" function (:arguments ("$(GLMOTIF_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [39941 40012])
            (".PHONY" function (:arguments ("libGLMotif")) nil [40012 40031])
            ("libGLMotif" function (:arguments ("$(call LIBRARYNAME,libGLMotif)")) nil [40031 40074])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Images")) nil [40114 40168])
            ("SOUND_HEADERS" variable (:default-value ("$(wildcard Sound/*.h)" "$(wildcard Sound/*.icpp)")) nil [40824 40905])
            ("SOUND_SOURCES" variable (:default-value ("$(wildcard Sound/*.cpp)")) nil [41272 41312])
            ("$(SOUND_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [41638 41695])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("PACKAGES" "+=" "$(MYSOUND_DEPENDS)")) nil [41696 41757])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYSOUND_INCLUDE)")) nil [41757 41828])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("|" "$(call DEPENDENCIES,MYSOUND)")) nil [41828 41889])
            ("$(call LIBRARYNAME,libSound)" function (:arguments ("$(SOUND_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [41889 41956])
            (".PHONY" function (:arguments ("libSound")) nil [41956 41973])
            ("libSound" function (:arguments ("$(call LIBRARYNAME,libSound)")) nil [41973 42012])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Sound")) nil [42052 42105])
            ("VIDEO_HEADERS" variable (:default-value ("Video/Config.h" "Video/VideoDataFormat.h" "Video/FrameBuffer.h" "Video/ImageExtractor.h" "Video/VideoDevice.h" "Video/Colorspaces.h" "Video/ImageExtractorRGB8.h" "Video/ImageExtractorY8.h" "Video/ImageExtractorY10B.h" "Video/ImageExtractorYUYV.h" "Video/ImageExtractorUYVY.h" "Video/ImageExtractorYV12.h" "Video/BayerPattern.h" "Video/ImageExtractorBA81.h" "Video/YpCbCr420Texture.h" "Video/VideoPane.h")) nil [43011 43670])
            ("VIDEO_SOURCES" variable (:default-value ("Video/VideoDataFormat.cpp" "Video/VideoDevice.cpp" "Video/ImageExtractorRGB8.cpp" "Video/ImageExtractorY8.cpp" "Video/ImageExtractorY10B.cpp" "Video/ImageExtractorYUYV.cpp" "Video/ImageExtractorUYVY.cpp" "Video/ImageExtractorYV12.cpp" "Video/ImageExtractorBA81.cpp" "Video/YpCbCr420Texture.cpp" "Video/VideoPane.cpp")) nil [44477 44969])
            ("$(VIDEO_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [45677 45734])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("PACKAGES" "+=" "$(MYVIDEO_DEPENDS)")) nil [45735 45796])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVIDEO_INCLUDE)")) nil [45796 45867])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("|" "$(call DEPENDENCIES,MYVIDEO)")) nil [45867 45928])
            ("$(call LIBRARYNAME,libVideo)" function (:arguments ("$(VIDEO_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [45928 45995])
            (".PHONY" function (:arguments ("libVideo")) nil [45995 46012])
            ("libVideo" function (:arguments ("$(call LIBRARYNAME,libVideo)")) nil [46012 46051])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Video")) nil [46098 46155])
            ("ALSUPPORT_HEADERS" variable (:default-value ("$(wildcard AL/*.h)" "$(wildcard AL/*.icpp)")) nil [46571 46654])
            ("ALSUPPORT_SOURCES" variable (:default-value ("$(wildcard AL/*.cpp)" "$(wildcard AL/Internal/*.cpp)")) nil [46655 46748])
            ("$(ALSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [46749 46810])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("PACKAGES" "+=" "$(MYALSUPPORT_DEPENDS)")) nil [46811 46880])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYALSUPPORT_INCLUDE)")) nil [46880 46959])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("|" "$(call DEPENDENCIES,MYALSUPPORT)")) nil [46959 47028])
            ("$(call LIBRARYNAME,libALSupport)" function (:arguments ("$(ALSUPPORT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [47028 47103])
            (".PHONY" function (:arguments ("libALSupport")) nil [47103 47124])
            ("libALSupport" function (:arguments ("$(call LIBRARYNAME,libALSupport)")) nil [47124 47171])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-ALSupport")) nil [47226 47750])
            ("SCENEGRAPH_HEADERS" variable (:default-value ("$(wildcard SceneGraph/*.h)" "$(wildcard SceneGraph/*.icpp)")) nil [47751 47852])
            ("SCENEGRAPH_SOURCES" variable (:default-value ("$(wildcard SceneGraph/*.cpp)" "$(wildcard SceneGraph/Internal/*.cpp)")) nil [47853 47964])
            ("$(SCENEGRAPH_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [47965 48027])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("PACKAGES" "+=" "$(MYSCENEGRAPH_DEPENDS)")) nil [48028 48099])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYSCENEGRAPH_INCLUDE)")) nil [48099 48180])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("|" "$(call DEPENDENCIES,MYSCENEGRAPH)")) nil [48180 48251])
            ("$(call LIBRARYNAME,libSceneGraph)" function (:arguments ("$(SCENEGRAPH_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [48251 48328])
            (".PHONY" function (:arguments ("libSceneGraph")) nil [48328 48350])
            ("libSceneGraph" function (:arguments ("$(call LIBRARYNAME,libSceneGraph)")) nil [48350 48399])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-SceneGraph")) nil [48462 48519])
            ("VRUI_HEADERS" variable (:default-value ("$(wildcard Vrui/*.h)" "$(wildcard Vrui/*.icpp)")) nil [51505 51582])
            ("VRUI_IGNORE_SOURCES" variable (:default-value ("Vrui/Internal/InputDeviceDock.cpp" "Vrui/Internal/TheoraMovieSaver.cpp" "Vrui/Internal/KinectRecorder.cpp" "Vrui/Internal/KinectPlayback.cpp" "Vrui/Internal/Linux/ScreenSaverInhibitorDBus.cpp")) nil [51687 51989])
            ("VRUI_SOURCES" variable (:default-value ("$(filter-out $(VRUI_IGNORE_SOURCES),$(wildcard Vrui/*.cpp) \\
                                                   $(wildcard Vrui/Internal/*.cpp) \\
                                                   $(wildcard Vrui/Internal/$(OSSPECFILEINSERT)/*.cpp))")) nil [51990 52255])
            ("$(VRUI_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [52453 52509])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DVRUI_INTERNAL_CONFIG_TOOLDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(VRTOOLSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [52553 52700])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DVRUI_INTERNAL_CONFIG_VISLETDSONAMETEMPLATE='\"$(PLUGININSTALLDIR)/$(VRVISLETSDIREXT)/lib%s.$(PLUGINFILEEXT)\"'")) nil [52700 52853])
            ("$(OBJDIR)" function (:arguments ("CFLAGS" "+=" "-DVRUI_INTERNAL_CONFIG_LIBDIR='\"$(LIBINSTALLDIR)\"'" "-DVRUI_INTERNAL_CONFIG_EXECUTABLEDIR='\"$(EXECUTABLEINSTALLDIR)\"'" "-DVRUI_INTERNAL_CONFIG_PLUGINDIR='\"$(PLUGININSTALLDIR)\"'")) nil [52853 53186])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("PACKAGES" "+=" "$(MYVRUI_DEPENDS)")) nil [53187 53246])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [53246 53315])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("|" "$(call DEPENDENCIES,MYVRUI)")) nil [53315 53374])
            ("$(call LIBRARYNAME,libVrui)" function (:arguments ("$(VRUI_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [53374 53439])
            (".PHONY" function (:arguments ("libVrui")) nil [53439 53455])
            ("libVrui" function (:arguments ("$(call LIBRARYNAME,libVrui)")) nil [53455 53492])
            ("$(VRTOOLSDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [53583 53639])
            ("$(VRTOOLSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [53639 53702])
            ("$(VRTOOLSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [53702 53761])
            ("$(VRTOOLSDIR)" function (:arguments ("$(OBJDIR)/Vrui/Tools/%.o")) nil [54224 54311])
            ("$(VRTOOLS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [54511 54570])
            (".SECONDARY" function (:arguments ("$(VRTOOLS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [54620 54671])
            (".PHONY" function (:arguments ("VRTools")) nil [54672 54688])
            ("VRTools" function (:arguments ("$(VRTOOLS)")) nil [54688 54708])
            ("$(VRVISLETSDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [54797 54855])
            ("$(VRVISLETSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [54855 54920])
            ("$(VRVISLETSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [54920 54981])
            ("$(VRVISLETSDIR)" function (:arguments ("$(OBJDIR)/Vrui/Vislets/%.o")) nil [55456 55549])
            ("$(VRVISLETSDIR)" function (:arguments ("PACKAGES" "+=" "MYSCENEGRAPH")) nil [55786 55865])
            ("$(VRVISLETSDIR)" function (:arguments ("PACKAGES" "+=" "MYRAWHID")) nil [55865 55937])
            ("$(VRVISLETS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [55938 55999])
            (".SECONDARY" function (:arguments ("$(VRVISLETS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [56048 56101])
            (".PHONY" function (:arguments ("VRVislets")) nil [56102 56120])
            ("VRVislets" function (:arguments ("$(VRVISLETS)")) nil [56120 56144])
            ("$(DEPDIR)" function (:arguments ("$(DEPDIR)/Configure-Vrui")) nil [56181 56242])
            ("VRDEVICEDAEMON_SOURCES" variable (:default-value ("VRDeviceDaemon/VRDevice.cpp" "VRDeviceDaemon/VRCalibrator.cpp" "VRDeviceDaemon/VRDeviceManager.cpp" "Vrui/Internal/VRDeviceDescriptor.cpp" "Vrui/Internal/HMDConfiguration.cpp" "Vrui/Internal/VRDevicePipe.cpp" "VRDeviceDaemon/VRDeviceServer.cpp" "VRDeviceDaemon/VRDeviceDaemon.cpp")) nil [58616 59096])
            ("$(VRDEVICEDAEMON_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [59097 59163])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYIO" "MYTHREADS" "MYMISC" "DL")) nil [59164 59245])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [59245 59311])
            ("$(EXEDIR)" function (:arguments ("CFLAGS" "+=" "-DVERBOSE")) nil [59311 59357])
            ("$(EXEDIR)" function (:arguments ("LINKFLAGS" "+=" "$(PLUGINHOSTLINKFLAGS)")) nil [59357 59419])
            ("$(EXEDIR)" function (:arguments ("$(VRDEVICEDAEMON_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [59419 59491])
            (".PHONY" function (:arguments ("VRDeviceDaemon")) nil [59491 59514])
            ("VRDeviceDaemon" function (:arguments ("$(EXEDIR)/VRDeviceDaemon")) nil [59514 59555])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/VRPNConnection.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/VRPNClient.o")) nil [59757 59955])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(BLUETOOTH_LIBDIR)" "$(BLUETOOTH_LIBS)")) nil [59956 60068])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/Wiimote.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/WiimoteTracker.o")) nil [60068 60271])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYUSB")) nil [60272 60344])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(MYUSB_LIBDIR)" "$(MYUSB_LIBS)")) nil [60344 60450])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/RazerHydra.o" "$(OBJDIR)/VRDeviceDaemon/VRDevices/RazerHydraDevice.o")) nil [60635 60847])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYUSB")) nil [60848 60914])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "+=" "$(MYUSB_LIBDIR)" "$(MYUSB_LIBS)")) nil [60914 61014])
            ("$(VRDEVICESDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-I$(OPENVR_BASEDIR)/headers")) nil [61194 61292])
            ("$(VRDEVICESDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYTHREADS" "MYMISC")) nil [61331 61417])
            ("$(VRDEVICESDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [61417 61496])
            ("$(VRDEVICESDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)" "-DVERBOSE")) nil [61496 61571])
            ("$(VRDEVICESDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [61571 61632])
            ("$(VRDEVICESDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRDevices/%.o")) nil [61632 61737])
            ("$(VRDEVICES_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [61937 61998])
            ("$(OBJDIR)" function (:arguments ("|" "$(DEPDIR)/config")) nil [61998 62163])
            ("$(OBJDIR)" function (:arguments ("|" "$(DEPDIR)/config")) nil [61998 62163])
            (".SECONDARY" function (:arguments ("$(VRDEVICES_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [62222 62275])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("PACKAGES" "+=" "MYGEOMETRY" "MYCOMM" "MYTHREADS" "MYMISC")) nil [62357 62447])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "$(MYVRUI_INCLUDE)")) nil [62447 62530])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("CFLAGS" "+=" "$(CPLUGINFLAGS)")) nil [62530 62599])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("PLUGINDEPENDENCIES" "=")) nil [62599 62664])
            ("$(VRCALIBRATORSDIR)" function (:arguments ("$(OBJDIR)/VRDeviceDaemon/VRCalibrators/%.o")) nil [62664 62781])
            ("$(VRCALIBRATORS_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [62981 63046])
            (".SECONDARY" function (:arguments ("$(VRCALIBRATORS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [63102 63159])
            (".PHONY" function (:arguments ("VRCalibrators")) nil [63160 63182])
            ("VRCalibrators" function (:arguments ("$(VRCALIBRATORS)")) nil [63182 63214])
            ("$(EXEDIR)" function nil nil [63305 64065])
            ("UTILITIES_SOURCES" variable (:default-value ("$(wildcard Vrui/Utilities/*.cpp)" "$(wildcard Calibration/*.cpp)")) nil [64111 64219])
            ("$(UTILITIES_SOURCES:%.cpp=$(OBJDIR)/%.o)" function (:arguments ("|" "$(DEPDIR)/config")) nil [64219 64280])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [64324 64365])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/DeviceTest.o")) nil [64365 64425])
            (".PHONY" function (:arguments ("DeviceTest")) nil [64425 64444])
            ("DeviceTest" function (:arguments ("$(EXEDIR)/DeviceTest")) nil [64444 64477])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [64478 64521])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/TrackingTest.o")) nil [64521 64585])
            (".PHONY" function (:arguments ("TrackingTest")) nil [64585 64606])
            ("TrackingTest" function (:arguments ("$(EXEDIR)/TrackingTest")) nil [64606 64643])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [64687 64727])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/RoomSetup.o")) nil [64727 64785])
            (".PHONY" function (:arguments ("RoomSetup")) nil [64785 64803])
            ("RoomSetup" function (:arguments ("$(EXEDIR)/RoomSetup")) nil [64803 64834])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [64876 64920])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/EyeCalibrator.o")) nil [64920 64986])
            (".PHONY" function (:arguments ("EyeCalibrator")) nil [64986 65008])
            ("EyeCalibrator" function (:arguments ("$(EXEDIR)/EyeCalibrator")) nil [65008 65047])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [65096 65151])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Vrui/Utilities/PrintInputDeviceDataFile.o")) nil [65151 65239])
            (".PHONY" function (:arguments ("PrintInputDeviceDataFile")) nil [65239 65272])
            ("PrintInputDeviceDataFile" function (:arguments ("$(EXEDIR)/PrintInputDeviceDataFile")) nil [65272 65333])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "X11")) nil [65376 65415])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [65415 65474])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/XBackground.o")) nil [65474 65533])
            (".PHONY" function (:arguments ("XBackground")) nil [65533 65553])
            ("XBackground" function (:arguments ("$(EXEDIR)/XBackground")) nil [65553 65588])
            ("MEASUREENVIRONMENT_SOURCES" variable (:default-value ("Calibration/TotalStation.cpp" "Calibration/NaturalPointClient.cpp" "Calibration/MeasureEnvironment.cpp")) nil [65621 65811])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [65812 65861])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [65861 65927])
            ("$(EXEDIR)" function (:arguments ("$(MEASUREENVIRONMENT_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [65927 66007])
            (".PHONY" function (:arguments ("MeasureEnvironment")) nil [66007 66034])
            ("MeasureEnvironment" function (:arguments ("$(EXEDIR)/MeasureEnvironment")) nil [66034 66083])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [66134 66181])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [66181 66245])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/OGTransformCalculator.o" "$(OBJDIR)/Calibration/ScreenCalibrator.o")) nil [66245 66390])
            (".PHONY" function (:arguments ("ScreenCalibrator")) nil [66390 66415])
            ("ScreenCalibrator" function (:arguments ("$(EXEDIR)/ScreenCalibrator")) nil [66415 66460])
            ("ALIGNTRACKINGMARKERS_SOURCES" variable (:default-value ("Calibration/ReadOptiTrackMarkerFile.cpp" "Calibration/NaturalPointClient.cpp" "Calibration/AlignTrackingMarkers.cpp")) nil [66510 66719])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [66720 66771])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [66771 66839])
            ("$(EXEDIR)" function (:arguments ("$(ALIGNTRACKINGMARKERS_SOURCES:%.cpp=$(OBJDIR)/%.o)")) nil [66839 66923])
            (".PHONY" function (:arguments ("AlignTrackingMarkers")) nil [66923 66952])
            ("AlignTrackingMarkers" function (:arguments ("$(EXEDIR)/AlignTrackingMarkers")) nil [66952 67005])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI")) nil [67049 67098])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [67098 67164])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/SampleTrackerField.o")) nil [67164 67237])
            (".PHONY" function (:arguments ("SampleTrackerField")) nil [67237 67264])
            ("SampleTrackerField" function (:arguments ("$(EXEDIR)/SampleTrackerField")) nil [67264 67313])
            ("$(EXEDIR)" function (:arguments ("PACKAGES" "+=" "MYVRUI" "MYUSB")) nil [67357 67410])
            ("$(EXEDIR)" function (:arguments ("EXTRACINCLUDEFLAGS" "+=" "-ICalibration")) nil [67410 67474])
            ("$(EXEDIR)" function (:arguments ("$(OBJDIR)/Calibration/OculusCalibrator.o")) nil [67474 67543])
            (".PHONY" function (:arguments ("OculusCalibrator")) nil [67543 67568])
            ("OculusCalibrator" function (:arguments ("$(EXEDIR)/OculusCalibrator")) nil [67568 67613])
            ("$(DEPDIR)" function (:arguments ("$(MAKEFILEFRAGMENT)" "$(MAKECONFIGFILE)" "$(PKGCONFIGFILE)" "$(TEMPLATEMAKEFILE)" "ExamplePrograms/makefile" "ExamplePrograms/MeshEditor/makefile" "ExamplePrograms/VRMLViewer/makefile")) nil [67873 68312])
            ("SYSTEMPACKAGES" variable (:default-value ("$(sort $(patsubst MY%,,$(PACKAGES_RECEXPAND)))")) nil [68313 68377])
            ("VRUIAPP_INCLUDEDIRS" variable (:default-value ("-I$$(VRUI_INCLUDEDIR)")) nil [68377 68421])
            ("VRUIAPP_INCLUDEDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_INCLUDE)))")) nil [68421 68519])
            ("VRUIAPP_CFLAGS" variable (:default-value ("$(CSYSFLAGS)")) nil [68519 68549])
            ("VRUIAPP_CFLAGS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(PACKAGES_RECEXPAND),$($(PACKAGENAME)_CFLAGS)))")) nil [68549 68645])
            ("VRUIAPP_LDIRS" variable (:default-value ("-L$$(VRUI_LIBDIR)")) nil [68645 68679])
            ("VRUIAPP_LDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_LIBDIR)))")) nil [68679 68770])
            ("VRUIAPP_LIBS" variable (:default-value ("$(patsubst lib%,-l%.$(LDEXT),$(LIBRARY_NAMES))")) nil [68770 68832])
            ("VRUIAPP_LIBS" variable (:default-value ("$(foreach PACKAGENAME,$(SYSTEMPACKAGES),$($(PACKAGENAME)_LIBS))")) nil [68832 68912])
            ("VRUIAPP_LFLAGS" variable nil nil [68912 68929])
            ("$(MAKEFILEFRAGMENT)" function (:arguments ("PACKAGES" "=" "MYVRUI")) nil [69127 69166])
            ("$(MAKEFILEFRAGMENT)" function (:arguments ("$(DEPDIR)/Configure-End")) nil [69166 70270])
            ("$(MAKECONFIGFILE)" function (:arguments ("$(DEPDIR)/Configure-End")) nil [70444 73375])
            ("ROGUE_SYSTEMPACKAGES" variable (:default-value ("$(filter %_,$(foreach PACKAGENAME,$(SYSTEMPACKAGES),$(PACKAGENAME)_$($(PACKAGENAME)_PKGNAME)))")) nil [73376 73494])
            ("ROGUE_INCLUDEDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)INCLUDE)))")) nil [73494 73594])
            ("ROGUE_LIBDIRS" variable (:default-value ("$(sort $(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)LIBDIR)))")) nil [73594 73689])
            ("ROGUE_LIBS" variable (:default-value ("$(foreach PACKAGENAME,$(ROGUE_SYSTEMPACKAGES),$($(PACKAGENAME)LIBS))")) nil [73689 73771])
            ("$(PKGCONFIGFILE)" function (:arguments ("PACKAGES" "=" "MYVRUI")) nil [73829 73865])
            ("$(PKGCONFIGFILE)" function (:arguments ("$(DEPDIR)/Configure-End")) nil [73865 74505])
            ("$(TEMPLATEMAKEFILE)" function (:arguments ("$(DEPDIR)/Configure-End")) nil [75169 75559])
            ("ExamplePrograms/makefile" function (:arguments ("$(DEPDIR)/Configure-End")) nil [75618 76063])
            ("ExamplePrograms/MeshEditor/makefile" function (:arguments ("$(DEPDIR)/Configure-End")) nil [76133 76689])
            ("ExamplePrograms/VRMLViewer/makefile" function (:arguments ("$(DEPDIR)/Configure-End")) nil [76759 77316])
            ("install" function nil nil [77316 77325])
            ("installudevrules" function nil nil [83773 83791])
            ("uninstall" function nil nil [83985 83996])
            ("uninstalludevrules" function nil nil [88732 88752]))          
      :file "makefile"
      :pointmax 88892
      :fsize 88891
      :lastmodtime '(22588 45601 798994 225000)
      :unmatched-syntax nil))
  :file "!apps!vrui!Vrui!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
